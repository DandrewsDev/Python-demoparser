<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1013.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="279"><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="949" width="1.0753%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="959.50"></text></g><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="933" width="1.0753%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="943.50"></text></g><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="917" width="1.0753%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3"/><text x="0.2500%" y="927.50"></text></g><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="901" width="1.0753%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="3"/><text x="0.2500%" y="911.50"></text></g><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="885" width="1.0753%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="3"/><text x="0.2500%" y="895.50"></text></g><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="869" width="1.0753%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="3"/><text x="0.2500%" y="879.50"></text></g><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="853" width="1.0753%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="3"/><text x="0.2500%" y="863.50"></text></g><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="837" width="1.0753%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="3"/><text x="0.2500%" y="847.50"></text></g><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="821" width="1.0753%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="3"/><text x="0.2500%" y="831.50"></text></g><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="805" width="1.0753%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="3"/><text x="0.2500%" y="815.50"></text></g><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="789" width="1.0753%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="3"/><text x="0.2500%" y="799.50"></text></g><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="773" width="1.0753%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="3"/><text x="0.2500%" y="783.50"></text></g><g><title>[unknown] (3 samples, 1.08%)</title><rect x="0.0000%" y="757" width="1.0753%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="3"/><text x="0.2500%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="0.7168%" y="741" width="0.3584%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="0.9668%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="0.7168%" y="725" width="0.3584%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="0.9668%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="0.7168%" y="709" width="0.3584%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="0.9668%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="0.7168%" y="693" width="0.3584%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="0.9668%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.36%)</title><rect x="1.0753%" y="533" width="0.3584%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="1.3253%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.36%)</title><rect x="1.0753%" y="517" width="0.3584%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="1.3253%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.36%)</title><rect x="1.0753%" y="501" width="0.3584%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="1.3253%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.36%)</title><rect x="1.0753%" y="485" width="0.3584%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="1.3253%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.36%)</title><rect x="1.0753%" y="469" width="0.3584%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="1.3253%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.36%)</title><rect x="1.0753%" y="453" width="0.3584%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="1.3253%" y="463.50"></text></g><g><title>mi_free (1 samples, 0.36%)</title><rect x="1.0753%" y="437" width="0.3584%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="1"/><text x="1.3253%" y="447.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.36%)</title><rect x="1.0753%" y="421" width="0.3584%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="1"/><text x="1.3253%" y="431.50"></text></g><g><title>mi_slice_first (1 samples, 0.36%)</title><rect x="1.0753%" y="405" width="0.3584%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="1"/><text x="1.3253%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 1.79%)</title><rect x="2.1505%" y="453" width="1.7921%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="5"/><text x="2.4005%" y="463.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (5 samples, 1.79%)</title><rect x="2.1505%" y="437" width="1.7921%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="5"/><text x="2.4005%" y="447.50">a..</text></g><g><title>mi_free (4 samples, 1.43%)</title><rect x="2.5090%" y="421" width="1.4337%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="4"/><text x="2.7590%" y="431.50"></text></g><g><title>mi_checked_ptr_segment (2 samples, 0.72%)</title><rect x="3.2258%" y="405" width="0.7168%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="2"/><text x="3.4758%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::game_events::GameEvent&gt;&gt; (9 samples, 3.23%)</title><rect x="1.0753%" y="661" width="3.2258%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="9"/><text x="1.3253%" y="671.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 3.23%)</title><rect x="1.0753%" y="645" width="3.2258%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="9"/><text x="1.3253%" y="655.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::game_events::GameEvent]&gt; (9 samples, 3.23%)</title><rect x="1.0753%" y="629" width="3.2258%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="9"/><text x="1.3253%" y="639.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::game_events::GameEvent&gt; (9 samples, 3.23%)</title><rect x="1.0753%" y="613" width="3.2258%" height="15" fill="rgb(254,191,54)" fg:x="3" fg:w="9"/><text x="1.3253%" y="623.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::game_events::NameDataPair&gt;&gt; (9 samples, 3.23%)</title><rect x="1.0753%" y="597" width="3.2258%" height="15" fill="rgb(241,83,37)" fg:x="3" fg:w="9"/><text x="1.3253%" y="607.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 3.23%)</title><rect x="1.0753%" y="581" width="3.2258%" height="15" fill="rgb(233,36,39)" fg:x="3" fg:w="9"/><text x="1.3253%" y="591.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::game_events::NameDataPair]&gt; (9 samples, 3.23%)</title><rect x="1.0753%" y="565" width="3.2258%" height="15" fill="rgb(226,3,54)" fg:x="3" fg:w="9"/><text x="1.3253%" y="575.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::game_events::NameDataPair&gt; (9 samples, 3.23%)</title><rect x="1.0753%" y="549" width="3.2258%" height="15" fill="rgb(245,192,40)" fg:x="3" fg:w="9"/><text x="1.3253%" y="559.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::game_events::KeyData&gt; (8 samples, 2.87%)</title><rect x="1.4337%" y="533" width="2.8674%" height="15" fill="rgb(238,167,29)" fg:x="4" fg:w="8"/><text x="1.6837%" y="543.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 2.15%)</title><rect x="2.1505%" y="517" width="2.1505%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="6"/><text x="2.4005%" y="527.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 2.15%)</title><rect x="2.1505%" y="501" width="2.1505%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="6"/><text x="2.4005%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 2.15%)</title><rect x="2.1505%" y="485" width="2.1505%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="6"/><text x="2.4005%" y="495.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 2.15%)</title><rect x="2.1505%" y="469" width="2.1505%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="6"/><text x="2.4005%" y="479.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.36%)</title><rect x="3.9427%" y="453" width="0.3584%" height="15" fill="rgb(213,116,39)" fg:x="11" fg:w="1"/><text x="4.1927%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::stringtables::StringTable&gt;&gt; (5 samples, 1.79%)</title><rect x="4.3011%" y="661" width="1.7921%" height="15" fill="rgb(222,207,29)" fg:x="12" fg:w="5"/><text x="4.5511%" y="671.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 1.79%)</title><rect x="4.3011%" y="645" width="1.7921%" height="15" fill="rgb(206,96,30)" fg:x="12" fg:w="5"/><text x="4.5511%" y="655.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::stringtables::StringTable]&gt; (5 samples, 1.79%)</title><rect x="4.3011%" y="629" width="1.7921%" height="15" fill="rgb(218,138,4)" fg:x="12" fg:w="5"/><text x="4.5511%" y="639.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::stringtables::StringTable&gt; (5 samples, 1.79%)</title><rect x="4.3011%" y="613" width="1.7921%" height="15" fill="rgb(250,191,14)" fg:x="12" fg:w="5"/><text x="4.5511%" y="623.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::stringtables::StField&gt;&gt; (5 samples, 1.79%)</title><rect x="4.3011%" y="597" width="1.7921%" height="15" fill="rgb(239,60,40)" fg:x="12" fg:w="5"/><text x="4.5511%" y="607.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 1.79%)</title><rect x="4.3011%" y="581" width="1.7921%" height="15" fill="rgb(206,27,48)" fg:x="12" fg:w="5"/><text x="4.5511%" y="591.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::stringtables::StField]&gt; (5 samples, 1.79%)</title><rect x="4.3011%" y="565" width="1.7921%" height="15" fill="rgb(225,35,8)" fg:x="12" fg:w="5"/><text x="4.5511%" y="575.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::stringtables::StField&gt; (5 samples, 1.79%)</title><rect x="4.3011%" y="549" width="1.7921%" height="15" fill="rgb(250,213,24)" fg:x="12" fg:w="5"/><text x="4.5511%" y="559.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 1.79%)</title><rect x="4.3011%" y="533" width="1.7921%" height="15" fill="rgb(247,123,22)" fg:x="12" fg:w="5"/><text x="4.5511%" y="543.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 1.79%)</title><rect x="4.3011%" y="517" width="1.7921%" height="15" fill="rgb(231,138,38)" fg:x="12" fg:w="5"/><text x="4.5511%" y="527.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 1.79%)</title><rect x="4.3011%" y="501" width="1.7921%" height="15" fill="rgb(231,145,46)" fg:x="12" fg:w="5"/><text x="4.5511%" y="511.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 1.79%)</title><rect x="4.3011%" y="485" width="1.7921%" height="15" fill="rgb(251,118,11)" fg:x="12" fg:w="5"/><text x="4.5511%" y="495.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 1.79%)</title><rect x="4.3011%" y="469" width="1.7921%" height="15" fill="rgb(217,147,25)" fg:x="12" fg:w="5"/><text x="4.5511%" y="479.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Demo&gt; (21 samples, 7.53%)</title><rect x="1.0753%" y="677" width="7.5269%" height="15" fill="rgb(247,81,37)" fg:x="3" fg:w="21"/><text x="1.3253%" y="687.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::variants::BytesVariant&gt; (7 samples, 2.51%)</title><rect x="6.0932%" y="661" width="2.5090%" height="15" fill="rgb(209,12,38)" fg:x="17" fg:w="7"/><text x="6.3432%" y="671.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;memmap::Mmap&gt; (7 samples, 2.51%)</title><rect x="6.0932%" y="645" width="2.5090%" height="15" fill="rgb(227,1,9)" fg:x="17" fg:w="7"/><text x="6.3432%" y="655.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;memmap::unix::MmapInner&gt; (7 samples, 2.51%)</title><rect x="6.0932%" y="629" width="2.5090%" height="15" fill="rgb(248,47,43)" fg:x="17" fg:w="7"/><text x="6.3432%" y="639.50">co..</text></g><g><title>&lt;memmap::unix::MmapInner as core::ops::drop::Drop&gt;::drop (7 samples, 2.51%)</title><rect x="6.0932%" y="613" width="2.5090%" height="15" fill="rgb(221,10,30)" fg:x="17" fg:w="7"/><text x="6.3432%" y="623.50">&lt;m..</text></g><g><title>__GI___munmap (7 samples, 2.51%)</title><rect x="6.0932%" y="597" width="2.5090%" height="15" fill="rgb(210,229,1)" fg:x="17" fg:w="7"/><text x="6.3432%" y="607.50">__..</text></g><g><title>[unknown] (7 samples, 2.51%)</title><rect x="6.0932%" y="581" width="2.5090%" height="15" fill="rgb(222,148,37)" fg:x="17" fg:w="7"/><text x="6.3432%" y="591.50">[u..</text></g><g><title>[unknown] (7 samples, 2.51%)</title><rect x="6.0932%" y="565" width="2.5090%" height="15" fill="rgb(234,67,33)" fg:x="17" fg:w="7"/><text x="6.3432%" y="575.50">[u..</text></g><g><title>[unknown] (7 samples, 2.51%)</title><rect x="6.0932%" y="549" width="2.5090%" height="15" fill="rgb(247,98,35)" fg:x="17" fg:w="7"/><text x="6.3432%" y="559.50">[u..</text></g><g><title>[unknown] (7 samples, 2.51%)</title><rect x="6.0932%" y="533" width="2.5090%" height="15" fill="rgb(247,138,52)" fg:x="17" fg:w="7"/><text x="6.3432%" y="543.50">[u..</text></g><g><title>[unknown] (7 samples, 2.51%)</title><rect x="6.0932%" y="517" width="2.5090%" height="15" fill="rgb(213,79,30)" fg:x="17" fg:w="7"/><text x="6.3432%" y="527.50">[u..</text></g><g><title>[unknown] (7 samples, 2.51%)</title><rect x="6.0932%" y="501" width="2.5090%" height="15" fill="rgb(246,177,23)" fg:x="17" fg:w="7"/><text x="6.3432%" y="511.50">[u..</text></g><g><title>[unknown] (7 samples, 2.51%)</title><rect x="6.0932%" y="485" width="2.5090%" height="15" fill="rgb(230,62,27)" fg:x="17" fg:w="7"/><text x="6.3432%" y="495.50">[u..</text></g><g><title>[unknown] (7 samples, 2.51%)</title><rect x="6.0932%" y="469" width="2.5090%" height="15" fill="rgb(216,154,8)" fg:x="17" fg:w="7"/><text x="6.3432%" y="479.50">[u..</text></g><g><title>[unknown] (7 samples, 2.51%)</title><rect x="6.0932%" y="453" width="2.5090%" height="15" fill="rgb(244,35,45)" fg:x="17" fg:w="7"/><text x="6.3432%" y="463.50">[u..</text></g><g><title>[unknown] (7 samples, 2.51%)</title><rect x="6.0932%" y="437" width="2.5090%" height="15" fill="rgb(251,115,12)" fg:x="17" fg:w="7"/><text x="6.3432%" y="447.50">[u..</text></g><g><title>[unknown] (7 samples, 2.51%)</title><rect x="6.0932%" y="421" width="2.5090%" height="15" fill="rgb(240,54,50)" fg:x="17" fg:w="7"/><text x="6.3432%" y="431.50">[u..</text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="8.2437%" y="405" width="0.3584%" height="15" fill="rgb(233,84,52)" fg:x="23" fg:w="1"/><text x="8.4937%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="8.2437%" y="389" width="0.3584%" height="15" fill="rgb(207,117,47)" fg:x="23" fg:w="1"/><text x="8.4937%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="8.2437%" y="373" width="0.3584%" height="15" fill="rgb(249,43,39)" fg:x="23" fg:w="1"/><text x="8.4937%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="8.2437%" y="357" width="0.3584%" height="15" fill="rgb(209,38,44)" fg:x="23" fg:w="1"/><text x="8.4937%" y="367.50"></text></g><g><title>csgoproto::netmessages::file_descriptor (1 samples, 0.36%)</title><rect x="8.6022%" y="677" width="0.3584%" height="15" fill="rgb(236,212,23)" fg:x="24" fg:w="1"/><text x="8.8522%" y="687.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.36%)</title><rect x="8.6022%" y="661" width="0.3584%" height="15" fill="rgb(242,79,21)" fg:x="24" fg:w="1"/><text x="8.8522%" y="671.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.36%)</title><rect x="8.6022%" y="645" width="0.3584%" height="15" fill="rgb(211,96,35)" fg:x="24" fg:w="1"/><text x="8.8522%" y="655.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.36%)</title><rect x="8.6022%" y="629" width="0.3584%" height="15" fill="rgb(253,215,40)" fg:x="24" fg:w="1"/><text x="8.8522%" y="639.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.36%)</title><rect x="8.6022%" y="613" width="0.3584%" height="15" fill="rgb(211,81,21)" fg:x="24" fg:w="1"/><text x="8.8522%" y="623.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.36%)</title><rect x="8.6022%" y="597" width="0.3584%" height="15" fill="rgb(208,190,38)" fg:x="24" fg:w="1"/><text x="8.8522%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.36%)</title><rect x="8.6022%" y="581" width="0.3584%" height="15" fill="rgb(235,213,38)" fg:x="24" fg:w="1"/><text x="8.8522%" y="591.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.36%)</title><rect x="8.6022%" y="565" width="0.3584%" height="15" fill="rgb(237,122,38)" fg:x="24" fg:w="1"/><text x="8.8522%" y="575.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.36%)</title><rect x="8.6022%" y="549" width="0.3584%" height="15" fill="rgb(244,218,35)" fg:x="24" fg:w="1"/><text x="8.8522%" y="559.50"></text></g><g><title>csgoproto::netmessages::file_descriptor::{{closure}} (1 samples, 0.36%)</title><rect x="8.6022%" y="533" width="0.3584%" height="15" fill="rgb(240,68,47)" fg:x="24" fg:w="1"/><text x="8.8522%" y="543.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.36%)</title><rect x="8.6022%" y="517" width="0.3584%" height="15" fill="rgb(210,16,53)" fg:x="24" fg:w="1"/><text x="8.8522%" y="527.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.36%)</title><rect x="8.6022%" y="501" width="0.3584%" height="15" fill="rgb(235,124,12)" fg:x="24" fg:w="1"/><text x="8.8522%" y="511.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.36%)</title><rect x="8.6022%" y="485" width="0.3584%" height="15" fill="rgb(224,169,11)" fg:x="24" fg:w="1"/><text x="8.8522%" y="495.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.36%)</title><rect x="8.6022%" y="469" width="0.3584%" height="15" fill="rgb(250,166,2)" fg:x="24" fg:w="1"/><text x="8.8522%" y="479.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.36%)</title><rect x="8.6022%" y="453" width="0.3584%" height="15" fill="rgb(242,216,29)" fg:x="24" fg:w="1"/><text x="8.8522%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.36%)</title><rect x="8.6022%" y="437" width="0.3584%" height="15" fill="rgb(230,116,27)" fg:x="24" fg:w="1"/><text x="8.8522%" y="447.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.36%)</title><rect x="8.6022%" y="421" width="0.3584%" height="15" fill="rgb(228,99,48)" fg:x="24" fg:w="1"/><text x="8.8522%" y="431.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.36%)</title><rect x="8.6022%" y="405" width="0.3584%" height="15" fill="rgb(253,11,6)" fg:x="24" fg:w="1"/><text x="8.8522%" y="415.50"></text></g><g><title>csgoproto::netmessages::file_descriptor::{{closure}}::{{closure}} (1 samples, 0.36%)</title><rect x="8.6022%" y="389" width="0.3584%" height="15" fill="rgb(247,143,39)" fg:x="24" fg:w="1"/><text x="8.8522%" y="399.50"></text></g><g><title>protobuf::descriptor::file_descriptor (1 samples, 0.36%)</title><rect x="8.6022%" y="373" width="0.3584%" height="15" fill="rgb(236,97,10)" fg:x="24" fg:w="1"/><text x="8.8522%" y="383.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.36%)</title><rect x="8.6022%" y="357" width="0.3584%" height="15" fill="rgb(233,208,19)" fg:x="24" fg:w="1"/><text x="8.8522%" y="367.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.36%)</title><rect x="8.6022%" y="341" width="0.3584%" height="15" fill="rgb(216,164,2)" fg:x="24" fg:w="1"/><text x="8.8522%" y="351.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.36%)</title><rect x="8.6022%" y="325" width="0.3584%" height="15" fill="rgb(220,129,5)" fg:x="24" fg:w="1"/><text x="8.8522%" y="335.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.36%)</title><rect x="8.6022%" y="309" width="0.3584%" height="15" fill="rgb(242,17,10)" fg:x="24" fg:w="1"/><text x="8.8522%" y="319.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.36%)</title><rect x="8.6022%" y="293" width="0.3584%" height="15" fill="rgb(242,107,0)" fg:x="24" fg:w="1"/><text x="8.8522%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.36%)</title><rect x="8.6022%" y="277" width="0.3584%" height="15" fill="rgb(251,28,31)" fg:x="24" fg:w="1"/><text x="8.8522%" y="287.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.36%)</title><rect x="8.6022%" y="261" width="0.3584%" height="15" fill="rgb(233,223,10)" fg:x="24" fg:w="1"/><text x="8.8522%" y="271.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.36%)</title><rect x="8.6022%" y="245" width="0.3584%" height="15" fill="rgb(215,21,27)" fg:x="24" fg:w="1"/><text x="8.8522%" y="255.50"></text></g><g><title>protobuf::descriptor::file_descriptor::{{closure}} (1 samples, 0.36%)</title><rect x="8.6022%" y="229" width="0.3584%" height="15" fill="rgb(232,23,21)" fg:x="24" fg:w="1"/><text x="8.8522%" y="239.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.36%)</title><rect x="8.6022%" y="213" width="0.3584%" height="15" fill="rgb(244,5,23)" fg:x="24" fg:w="1"/><text x="8.8522%" y="223.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.36%)</title><rect x="8.6022%" y="197" width="0.3584%" height="15" fill="rgb(226,81,46)" fg:x="24" fg:w="1"/><text x="8.8522%" y="207.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.36%)</title><rect x="8.6022%" y="181" width="0.3584%" height="15" fill="rgb(247,70,30)" fg:x="24" fg:w="1"/><text x="8.8522%" y="191.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.36%)</title><rect x="8.6022%" y="165" width="0.3584%" height="15" fill="rgb(212,68,19)" fg:x="24" fg:w="1"/><text x="8.8522%" y="175.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.36%)</title><rect x="8.6022%" y="149" width="0.3584%" height="15" fill="rgb(240,187,13)" fg:x="24" fg:w="1"/><text x="8.8522%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.36%)</title><rect x="8.6022%" y="133" width="0.3584%" height="15" fill="rgb(223,113,26)" fg:x="24" fg:w="1"/><text x="8.8522%" y="143.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.36%)</title><rect x="8.6022%" y="117" width="0.3584%" height="15" fill="rgb(206,192,2)" fg:x="24" fg:w="1"/><text x="8.8522%" y="127.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.36%)</title><rect x="8.6022%" y="101" width="0.3584%" height="15" fill="rgb(241,108,4)" fg:x="24" fg:w="1"/><text x="8.8522%" y="111.50"></text></g><g><title>protobuf::descriptor::file_descriptor::{{closure}}::{{closure}} (1 samples, 0.36%)</title><rect x="8.6022%" y="85" width="0.3584%" height="15" fill="rgb(247,173,49)" fg:x="24" fg:w="1"/><text x="8.8522%" y="95.50"></text></g><g><title>protobuf::descriptor::FileDescriptorProto::generated_message_descriptor_data (1 samples, 0.36%)</title><rect x="8.6022%" y="69" width="0.3584%" height="15" fill="rgb(224,114,35)" fg:x="24" fg:w="1"/><text x="8.8522%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.36%)</title><rect x="8.6022%" y="53" width="0.3584%" height="15" fill="rgb(245,159,27)" fg:x="24" fg:w="1"/><text x="8.8522%" y="63.50"></text></g><g><title>core::ptr::write (1 samples, 0.36%)</title><rect x="8.6022%" y="37" width="0.3584%" height="15" fill="rgb(245,172,44)" fg:x="24" fg:w="1"/><text x="8.8522%" y="47.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.36%)</title><rect x="10.3943%" y="549" width="0.3584%" height="15" fill="rgb(236,23,11)" fg:x="29" fg:w="1"/><text x="10.6443%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.36%)</title><rect x="10.3943%" y="533" width="0.3584%" height="15" fill="rgb(205,117,38)" fg:x="29" fg:w="1"/><text x="10.6443%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.72%)</title><rect x="10.3943%" y="581" width="0.7168%" height="15" fill="rgb(237,72,25)" fg:x="29" fg:w="2"/><text x="10.6443%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.72%)</title><rect x="10.3943%" y="565" width="0.7168%" height="15" fill="rgb(244,70,9)" fg:x="29" fg:w="2"/><text x="10.6443%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.36%)</title><rect x="10.7527%" y="549" width="0.3584%" height="15" fill="rgb(217,125,39)" fg:x="30" fg:w="1"/><text x="11.0027%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1 samples, 0.36%)</title><rect x="10.7527%" y="533" width="0.3584%" height="15" fill="rgb(235,36,10)" fg:x="30" fg:w="1"/><text x="11.0027%" y="543.50"></text></g><g><title>core::hash::Hasher::write_i32 (1 samples, 0.36%)</title><rect x="10.7527%" y="517" width="0.3584%" height="15" fill="rgb(251,123,47)" fg:x="30" fg:w="1"/><text x="11.0027%" y="527.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u32 (1 samples, 0.36%)</title><rect x="10.7527%" y="501" width="0.3584%" height="15" fill="rgb(221,13,13)" fg:x="30" fg:w="1"/><text x="11.0027%" y="511.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.36%)</title><rect x="10.7527%" y="485" width="0.3584%" height="15" fill="rgb(238,131,9)" fg:x="30" fg:w="1"/><text x="11.0027%" y="495.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.36%)</title><rect x="10.7527%" y="469" width="0.3584%" height="15" fill="rgb(211,50,8)" fg:x="30" fg:w="1"/><text x="11.0027%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.36%)</title><rect x="14.3369%" y="533" width="0.3584%" height="15" fill="rgb(245,182,24)" fg:x="40" fg:w="1"/><text x="14.5869%" y="543.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.36%)</title><rect x="14.3369%" y="517" width="0.3584%" height="15" fill="rgb(242,14,37)" fg:x="40" fg:w="1"/><text x="14.5869%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.72%)</title><rect x="14.6953%" y="533" width="0.7168%" height="15" fill="rgb(246,228,12)" fg:x="41" fg:w="2"/><text x="14.9453%" y="543.50"></text></g><g><title>demoparser::parsing::collect_data::&lt;impl demoparser::parsing::parser::Demo&gt;::collect_player_data (23 samples, 8.24%)</title><rect x="8.9606%" y="661" width="8.2437%" height="15" fill="rgb(213,55,15)" fg:x="25" fg:w="23"/><text x="9.2106%" y="671.50">demoparser:..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (19 samples, 6.81%)</title><rect x="10.3943%" y="645" width="6.8100%" height="15" fill="rgb(209,9,3)" fg:x="29" fg:w="19"/><text x="10.6443%" y="655.50">std::coll..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (19 samples, 6.81%)</title><rect x="10.3943%" y="629" width="6.8100%" height="15" fill="rgb(230,59,30)" fg:x="29" fg:w="19"/><text x="10.6443%" y="639.50">hashbrown..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (19 samples, 6.81%)</title><rect x="10.3943%" y="613" width="6.8100%" height="15" fill="rgb(209,121,21)" fg:x="29" fg:w="19"/><text x="10.6443%" y="623.50">hashbrown..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (19 samples, 6.81%)</title><rect x="10.3943%" y="597" width="6.8100%" height="15" fill="rgb(220,109,13)" fg:x="29" fg:w="19"/><text x="10.6443%" y="607.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 6.09%)</title><rect x="11.1111%" y="581" width="6.0932%" height="15" fill="rgb(232,18,1)" fg:x="31" fg:w="17"/><text x="11.3611%" y="591.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 6.09%)</title><rect x="11.1111%" y="565" width="6.0932%" height="15" fill="rgb(215,41,42)" fg:x="31" fg:w="17"/><text x="11.3611%" y="575.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 6.09%)</title><rect x="11.1111%" y="549" width="6.0932%" height="15" fill="rgb(224,123,36)" fg:x="31" fg:w="17"/><text x="11.3611%" y="559.50">hashbrow..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 1.79%)</title><rect x="15.4122%" y="533" width="1.7921%" height="15" fill="rgb(240,125,3)" fg:x="43" fg:w="5"/><text x="15.6622%" y="543.50">h..</text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 1.79%)</title><rect x="15.4122%" y="517" width="1.7921%" height="15" fill="rgb(205,98,50)" fg:x="43" fg:w="5"/><text x="15.6622%" y="527.50">c..</text></g><g><title>&lt;protobuf::coded_input_stream::buf_read_iter::BufReadIter as core::ops::drop::Drop&gt;::drop (1 samples, 0.36%)</title><rect x="17.2043%" y="613" width="0.3584%" height="15" fill="rgb(205,185,37)" fg:x="48" fg:w="1"/><text x="17.4543%" y="623.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message::Message&gt;::merge_from (3 samples, 1.08%)</title><rect x="17.5627%" y="549" width="1.0753%" height="15" fill="rgb(238,207,15)" fg:x="49" fg:w="3"/><text x="17.8127%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (1 samples, 0.36%)</title><rect x="18.2796%" y="533" width="0.3584%" height="15" fill="rgb(213,199,42)" fg:x="51" fg:w="1"/><text x="18.5296%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (1 samples, 0.36%)</title><rect x="18.2796%" y="517" width="0.3584%" height="15" fill="rgb(235,201,11)" fg:x="51" fg:w="1"/><text x="18.5296%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.36%)</title><rect x="18.2796%" y="501" width="0.3584%" height="15" fill="rgb(207,46,11)" fg:x="51" fg:w="1"/><text x="18.5296%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.36%)</title><rect x="18.2796%" y="485" width="0.3584%" height="15" fill="rgb(241,35,35)" fg:x="51" fg:w="1"/><text x="18.5296%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.36%)</title><rect x="18.2796%" y="469" width="0.3584%" height="15" fill="rgb(243,32,47)" fg:x="51" fg:w="1"/><text x="18.5296%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.36%)</title><rect x="18.2796%" y="453" width="0.3584%" height="15" fill="rgb(247,202,23)" fg:x="51" fg:w="1"/><text x="18.5296%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.36%)</title><rect x="18.2796%" y="437" width="0.3584%" height="15" fill="rgb(219,102,11)" fg:x="51" fg:w="1"/><text x="18.5296%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.36%)</title><rect x="18.2796%" y="421" width="0.3584%" height="15" fill="rgb(243,110,44)" fg:x="51" fg:w="1"/><text x="18.5296%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.36%)</title><rect x="18.2796%" y="405" width="0.3584%" height="15" fill="rgb(222,74,54)" fg:x="51" fg:w="1"/><text x="18.5296%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.36%)</title><rect x="18.2796%" y="389" width="0.3584%" height="15" fill="rgb(216,99,12)" fg:x="51" fg:w="1"/><text x="18.5296%" y="399.50"></text></g><g><title>mi_malloc (1 samples, 0.36%)</title><rect x="18.2796%" y="373" width="0.3584%" height="15" fill="rgb(226,22,26)" fg:x="51" fg:w="1"/><text x="18.5296%" y="383.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.36%)</title><rect x="18.2796%" y="357" width="0.3584%" height="15" fill="rgb(217,163,10)" fg:x="51" fg:w="1"/><text x="18.5296%" y="367.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.36%)</title><rect x="18.2796%" y="341" width="0.3584%" height="15" fill="rgb(213,25,53)" fg:x="51" fg:w="1"/><text x="18.5296%" y="351.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.36%)</title><rect x="18.2796%" y="325" width="0.3584%" height="15" fill="rgb(252,105,26)" fg:x="51" fg:w="1"/><text x="18.5296%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::pop_limit (1 samples, 0.36%)</title><rect x="18.6380%" y="549" width="0.3584%" height="15" fill="rgb(220,39,43)" fg:x="52" fg:w="1"/><text x="18.8880%" y="559.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Demo&gt;::parse_datatable (6 samples, 2.15%)</title><rect x="17.2043%" y="645" width="2.1505%" height="15" fill="rgb(229,68,48)" fg:x="48" fg:w="6"/><text x="17.4543%" y="655.50">d..</text></g><g><title>protobuf::message::Message::parse_from_bytes (6 samples, 2.15%)</title><rect x="17.2043%" y="629" width="2.1505%" height="15" fill="rgb(252,8,32)" fg:x="48" fg:w="6"/><text x="17.4543%" y="639.50">p..</text></g><g><title>protobuf::message::Message::parse_from (5 samples, 1.79%)</title><rect x="17.5627%" y="613" width="1.7921%" height="15" fill="rgb(223,20,43)" fg:x="49" fg:w="5"/><text x="17.8127%" y="623.50">p..</text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as protobuf::message::Message&gt;::merge_from (5 samples, 1.79%)</title><rect x="17.5627%" y="597" width="1.7921%" height="15" fill="rgb(229,81,49)" fg:x="49" fg:w="5"/><text x="17.8127%" y="607.50">&lt;..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (5 samples, 1.79%)</title><rect x="17.5627%" y="581" width="1.7921%" height="15" fill="rgb(236,28,36)" fg:x="49" fg:w="5"/><text x="17.8127%" y="591.50">p..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (5 samples, 1.79%)</title><rect x="17.5627%" y="565" width="1.7921%" height="15" fill="rgb(249,185,26)" fg:x="49" fg:w="5"/><text x="17.8127%" y="575.50">p..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.36%)</title><rect x="18.9964%" y="549" width="0.3584%" height="15" fill="rgb(249,174,33)" fg:x="53" fg:w="1"/><text x="19.2464%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.36%)</title><rect x="18.9964%" y="533" width="0.3584%" height="15" fill="rgb(233,201,37)" fg:x="53" fg:w="1"/><text x="19.2464%" y="543.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.36%)</title><rect x="18.9964%" y="517" width="0.3584%" height="15" fill="rgb(221,78,26)" fg:x="53" fg:w="1"/><text x="19.2464%" y="527.50"></text></g><g><title>&lt;u64 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.36%)</title><rect x="18.9964%" y="501" width="0.3584%" height="15" fill="rgb(250,127,30)" fg:x="53" fg:w="1"/><text x="19.2464%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.72%)</title><rect x="20.4301%" y="629" width="0.7168%" height="15" fill="rgb(230,49,44)" fg:x="57" fg:w="2"/><text x="20.6801%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.72%)</title><rect x="20.4301%" y="613" width="0.7168%" height="15" fill="rgb(229,67,23)" fg:x="57" fg:w="2"/><text x="20.6801%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.72%)</title><rect x="20.4301%" y="597" width="0.7168%" height="15" fill="rgb(249,83,47)" fg:x="57" fg:w="2"/><text x="20.6801%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.36%)</title><rect x="20.7885%" y="581" width="0.3584%" height="15" fill="rgb(215,43,3)" fg:x="58" fg:w="1"/><text x="21.0385%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.36%)</title><rect x="20.7885%" y="565" width="0.3584%" height="15" fill="rgb(238,154,13)" fg:x="58" fg:w="1"/><text x="21.0385%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.36%)</title><rect x="20.7885%" y="549" width="0.3584%" height="15" fill="rgb(219,56,2)" fg:x="58" fg:w="1"/><text x="21.0385%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.36%)</title><rect x="20.7885%" y="533" width="0.3584%" height="15" fill="rgb(233,0,4)" fg:x="58" fg:w="1"/><text x="21.0385%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.36%)</title><rect x="20.7885%" y="517" width="0.3584%" height="15" fill="rgb(235,30,7)" fg:x="58" fg:w="1"/><text x="21.0385%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.36%)</title><rect x="20.7885%" y="501" width="0.3584%" height="15" fill="rgb(250,79,13)" fg:x="58" fg:w="1"/><text x="21.0385%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.36%)</title><rect x="20.7885%" y="485" width="0.3584%" height="15" fill="rgb(211,146,34)" fg:x="58" fg:w="1"/><text x="21.0385%" y="495.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.36%)</title><rect x="20.7885%" y="469" width="0.3584%" height="15" fill="rgb(228,22,38)" fg:x="58" fg:w="1"/><text x="21.0385%" y="479.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.36%)</title><rect x="20.7885%" y="453" width="0.3584%" height="15" fill="rgb(235,168,5)" fg:x="58" fg:w="1"/><text x="21.0385%" y="463.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.36%)</title><rect x="20.7885%" y="437" width="0.3584%" height="15" fill="rgb(221,155,16)" fg:x="58" fg:w="1"/><text x="21.0385%" y="447.50"></text></g><g><title>_mi_memcpy (1 samples, 0.36%)</title><rect x="20.7885%" y="421" width="0.3584%" height="15" fill="rgb(215,215,53)" fg:x="58" fg:w="1"/><text x="21.0385%" y="431.50"></text></g><g><title>memcpy (1 samples, 0.36%)</title><rect x="20.7885%" y="405" width="0.3584%" height="15" fill="rgb(223,4,10)" fg:x="58" fg:w="1"/><text x="21.0385%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.36%)</title><rect x="20.7885%" y="389" width="0.3584%" height="15" fill="rgb(234,103,6)" fg:x="58" fg:w="1"/><text x="21.0385%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="20.7885%" y="373" width="0.3584%" height="15" fill="rgb(227,97,0)" fg:x="58" fg:w="1"/><text x="21.0385%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (1 samples, 0.36%)</title><rect x="21.1470%" y="613" width="0.3584%" height="15" fill="rgb(234,150,53)" fg:x="59" fg:w="1"/><text x="21.3970%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.36%)</title><rect x="21.1470%" y="597" width="0.3584%" height="15" fill="rgb(228,201,54)" fg:x="59" fg:w="1"/><text x="21.3970%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.36%)</title><rect x="21.1470%" y="581" width="0.3584%" height="15" fill="rgb(222,22,37)" fg:x="59" fg:w="1"/><text x="21.3970%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.36%)</title><rect x="21.1470%" y="565" width="0.3584%" height="15" fill="rgb(237,53,32)" fg:x="59" fg:w="1"/><text x="21.3970%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.36%)</title><rect x="21.1470%" y="549" width="0.3584%" height="15" fill="rgb(233,25,53)" fg:x="59" fg:w="1"/><text x="21.3970%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.36%)</title><rect x="21.1470%" y="533" width="0.3584%" height="15" fill="rgb(210,40,34)" fg:x="59" fg:w="1"/><text x="21.3970%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.36%)</title><rect x="21.1470%" y="517" width="0.3584%" height="15" fill="rgb(241,220,44)" fg:x="59" fg:w="1"/><text x="21.3970%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.36%)</title><rect x="21.1470%" y="501" width="0.3584%" height="15" fill="rgb(235,28,35)" fg:x="59" fg:w="1"/><text x="21.3970%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.36%)</title><rect x="21.1470%" y="485" width="0.3584%" height="15" fill="rgb(210,56,17)" fg:x="59" fg:w="1"/><text x="21.3970%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.36%)</title><rect x="21.5054%" y="613" width="0.3584%" height="15" fill="rgb(224,130,29)" fg:x="60" fg:w="1"/><text x="21.7554%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.36%)</title><rect x="21.5054%" y="597" width="0.3584%" height="15" fill="rgb(235,212,8)" fg:x="60" fg:w="1"/><text x="21.7554%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.36%)</title><rect x="21.5054%" y="581" width="0.3584%" height="15" fill="rgb(223,33,50)" fg:x="60" fg:w="1"/><text x="21.7554%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.36%)</title><rect x="21.5054%" y="565" width="0.3584%" height="15" fill="rgb(219,149,13)" fg:x="60" fg:w="1"/><text x="21.7554%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_GameEvent&gt; (1 samples, 0.36%)</title><rect x="21.8638%" y="613" width="0.3584%" height="15" fill="rgb(250,156,29)" fg:x="61" fg:w="1"/><text x="22.1138%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t&gt;&gt; (1 samples, 0.36%)</title><rect x="21.8638%" y="597" width="0.3584%" height="15" fill="rgb(216,193,19)" fg:x="61" fg:w="1"/><text x="22.1138%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.36%)</title><rect x="21.8638%" y="581" width="0.3584%" height="15" fill="rgb(216,135,14)" fg:x="61" fg:w="1"/><text x="22.1138%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[csgoproto::netmessages::csvcmsg_game_event::Key_t]&gt; (1 samples, 0.36%)</title><rect x="21.8638%" y="565" width="0.3584%" height="15" fill="rgb(241,47,5)" fg:x="61" fg:w="1"/><text x="22.1138%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t&gt; (1 samples, 0.36%)</title><rect x="21.8638%" y="549" width="0.3584%" height="15" fill="rgb(233,42,35)" fg:x="61" fg:w="1"/><text x="22.1138%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.36%)</title><rect x="21.8638%" y="533" width="0.3584%" height="15" fill="rgb(231,13,6)" fg:x="61" fg:w="1"/><text x="22.1138%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.36%)</title><rect x="21.8638%" y="517" width="0.3584%" height="15" fill="rgb(207,181,40)" fg:x="61" fg:w="1"/><text x="22.1138%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.36%)</title><rect x="21.8638%" y="501" width="0.3584%" height="15" fill="rgb(254,173,49)" fg:x="61" fg:w="1"/><text x="22.1138%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.36%)</title><rect x="21.8638%" y="485" width="0.3584%" height="15" fill="rgb(221,1,38)" fg:x="61" fg:w="1"/><text x="22.1138%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.36%)</title><rect x="21.8638%" y="469" width="0.3584%" height="15" fill="rgb(206,124,46)" fg:x="61" fg:w="1"/><text x="22.1138%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.36%)</title><rect x="21.8638%" y="453" width="0.3584%" height="15" fill="rgb(249,21,11)" fg:x="61" fg:w="1"/><text x="22.1138%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.36%)</title><rect x="21.8638%" y="437" width="0.3584%" height="15" fill="rgb(222,201,40)" fg:x="61" fg:w="1"/><text x="22.1138%" y="447.50"></text></g><g><title>mi_free (1 samples, 0.36%)</title><rect x="21.8638%" y="421" width="0.3584%" height="15" fill="rgb(235,61,29)" fg:x="61" fg:w="1"/><text x="22.1138%" y="431.50"></text></g><g><title>csgoproto::netmessages::CSVCMsg_GameEvent::eventid (2 samples, 0.72%)</title><rect x="22.2222%" y="613" width="0.7168%" height="15" fill="rgb(219,207,3)" fg:x="62" fg:w="2"/><text x="22.4722%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.36%)</title><rect x="22.5806%" y="597" width="0.3584%" height="15" fill="rgb(222,56,46)" fg:x="63" fg:w="1"/><text x="22.8306%" y="607.50"></text></g><g><title>csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t::name (1 samples, 0.36%)</title><rect x="22.9391%" y="613" width="0.3584%" height="15" fill="rgb(239,76,54)" fg:x="64" fg:w="1"/><text x="23.1891%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.36%)</title><rect x="22.9391%" y="597" width="0.3584%" height="15" fill="rgb(231,124,27)" fg:x="64" fg:w="1"/><text x="23.1891%" y="607.50"></text></g><g><title>alloc::string::String::new (1 samples, 0.36%)</title><rect x="24.7312%" y="581" width="0.3584%" height="15" fill="rgb(249,195,6)" fg:x="69" fg:w="1"/><text x="24.9812%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.36%)</title><rect x="24.7312%" y="565" width="0.3584%" height="15" fill="rgb(237,174,47)" fg:x="69" fg:w="1"/><text x="24.9812%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.36%)</title><rect x="25.0896%" y="469" width="0.3584%" height="15" fill="rgb(206,201,31)" fg:x="70" fg:w="1"/><text x="25.3396%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.36%)</title><rect x="25.0896%" y="453" width="0.3584%" height="15" fill="rgb(231,57,52)" fg:x="70" fg:w="1"/><text x="25.3396%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.36%)</title><rect x="25.0896%" y="437" width="0.3584%" height="15" fill="rgb(248,177,22)" fg:x="70" fg:w="1"/><text x="25.3396%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.36%)</title><rect x="25.0896%" y="421" width="0.3584%" height="15" fill="rgb(215,211,37)" fg:x="70" fg:w="1"/><text x="25.3396%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.36%)</title><rect x="25.0896%" y="405" width="0.3584%" height="15" fill="rgb(241,128,51)" fg:x="70" fg:w="1"/><text x="25.3396%" y="415.50"></text></g><g><title>mi_malloc (1 samples, 0.36%)</title><rect x="25.0896%" y="389" width="0.3584%" height="15" fill="rgb(227,165,31)" fg:x="70" fg:w="1"/><text x="25.3396%" y="399.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.36%)</title><rect x="25.0896%" y="373" width="0.3584%" height="15" fill="rgb(228,167,24)" fg:x="70" fg:w="1"/><text x="25.3396%" y="383.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.36%)</title><rect x="25.0896%" y="357" width="0.3584%" height="15" fill="rgb(228,143,12)" fg:x="70" fg:w="1"/><text x="25.3396%" y="367.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.36%)</title><rect x="25.0896%" y="341" width="0.3584%" height="15" fill="rgb(249,149,8)" fg:x="70" fg:w="1"/><text x="25.3396%" y="351.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (3 samples, 1.08%)</title><rect x="24.7312%" y="597" width="1.0753%" height="15" fill="rgb(243,35,44)" fg:x="69" fg:w="3"/><text x="24.9812%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (2 samples, 0.72%)</title><rect x="25.0896%" y="581" width="0.7168%" height="15" fill="rgb(246,89,9)" fg:x="70" fg:w="2"/><text x="25.3396%" y="591.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.72%)</title><rect x="25.0896%" y="565" width="0.7168%" height="15" fill="rgb(233,213,13)" fg:x="70" fg:w="2"/><text x="25.3396%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.72%)</title><rect x="25.0896%" y="549" width="0.7168%" height="15" fill="rgb(233,141,41)" fg:x="70" fg:w="2"/><text x="25.3396%" y="559.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.72%)</title><rect x="25.0896%" y="533" width="0.7168%" height="15" fill="rgb(239,167,4)" fg:x="70" fg:w="2"/><text x="25.3396%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.72%)</title><rect x="25.0896%" y="517" width="0.7168%" height="15" fill="rgb(209,217,16)" fg:x="70" fg:w="2"/><text x="25.3396%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.72%)</title><rect x="25.0896%" y="501" width="0.7168%" height="15" fill="rgb(219,88,35)" fg:x="70" fg:w="2"/><text x="25.3396%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.72%)</title><rect x="25.0896%" y="485" width="0.7168%" height="15" fill="rgb(220,193,23)" fg:x="70" fg:w="2"/><text x="25.3396%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.36%)</title><rect x="25.4480%" y="469" width="0.3584%" height="15" fill="rgb(230,90,52)" fg:x="71" fg:w="1"/><text x="25.6980%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.36%)</title><rect x="25.4480%" y="453" width="0.3584%" height="15" fill="rgb(252,106,19)" fg:x="71" fg:w="1"/><text x="25.6980%" y="463.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (2 samples, 0.72%)</title><rect x="25.8065%" y="597" width="0.7168%" height="15" fill="rgb(206,74,20)" fg:x="72" fg:w="2"/><text x="26.0565%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2 samples, 0.72%)</title><rect x="25.8065%" y="581" width="0.7168%" height="15" fill="rgb(230,138,44)" fg:x="72" fg:w="2"/><text x="26.0565%" y="591.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.72%)</title><rect x="25.8065%" y="565" width="0.7168%" height="15" fill="rgb(235,182,43)" fg:x="72" fg:w="2"/><text x="26.0565%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.72%)</title><rect x="25.8065%" y="549" width="0.7168%" height="15" fill="rgb(242,16,51)" fg:x="72" fg:w="2"/><text x="26.0565%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.72%)</title><rect x="25.8065%" y="533" width="0.7168%" height="15" fill="rgb(248,9,4)" fg:x="72" fg:w="2"/><text x="26.0565%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.72%)</title><rect x="25.8065%" y="517" width="0.7168%" height="15" fill="rgb(210,31,22)" fg:x="72" fg:w="2"/><text x="26.0565%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.72%)</title><rect x="25.8065%" y="501" width="0.7168%" height="15" fill="rgb(239,54,39)" fg:x="72" fg:w="2"/><text x="26.0565%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.72%)</title><rect x="25.8065%" y="485" width="0.7168%" height="15" fill="rgb(230,99,41)" fg:x="72" fg:w="2"/><text x="26.0565%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.72%)</title><rect x="25.8065%" y="469" width="0.7168%" height="15" fill="rgb(253,106,12)" fg:x="72" fg:w="2"/><text x="26.0565%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.72%)</title><rect x="25.8065%" y="453" width="0.7168%" height="15" fill="rgb(213,46,41)" fg:x="72" fg:w="2"/><text x="26.0565%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.72%)</title><rect x="25.8065%" y="437" width="0.7168%" height="15" fill="rgb(215,133,35)" fg:x="72" fg:w="2"/><text x="26.0565%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.72%)</title><rect x="25.8065%" y="421" width="0.7168%" height="15" fill="rgb(213,28,5)" fg:x="72" fg:w="2"/><text x="26.0565%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.72%)</title><rect x="25.8065%" y="405" width="0.7168%" height="15" fill="rgb(215,77,49)" fg:x="72" fg:w="2"/><text x="26.0565%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.36%)</title><rect x="26.1649%" y="389" width="0.3584%" height="15" fill="rgb(248,100,22)" fg:x="73" fg:w="1"/><text x="26.4149%" y="399.50"></text></g><g><title>mi_malloc (1 samples, 0.36%)</title><rect x="26.1649%" y="373" width="0.3584%" height="15" fill="rgb(208,67,9)" fg:x="73" fg:w="1"/><text x="26.4149%" y="383.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.36%)</title><rect x="26.1649%" y="357" width="0.3584%" height="15" fill="rgb(219,133,21)" fg:x="73" fg:w="1"/><text x="26.4149%" y="367.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.36%)</title><rect x="26.1649%" y="341" width="0.3584%" height="15" fill="rgb(246,46,29)" fg:x="73" fg:w="1"/><text x="26.4149%" y="351.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.36%)</title><rect x="26.1649%" y="325" width="0.3584%" height="15" fill="rgb(246,185,52)" fg:x="73" fg:w="1"/><text x="26.4149%" y="335.50"></text></g><g><title>__rust_alloc (1 samples, 0.36%)</title><rect x="26.5233%" y="405" width="0.3584%" height="15" fill="rgb(252,136,11)" fg:x="74" fg:w="1"/><text x="26.7733%" y="415.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.72%)</title><rect x="26.5233%" y="597" width="0.7168%" height="15" fill="rgb(219,138,53)" fg:x="74" fg:w="2"/><text x="26.7733%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.72%)</title><rect x="26.5233%" y="581" width="0.7168%" height="15" fill="rgb(211,51,23)" fg:x="74" fg:w="2"/><text x="26.7733%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.72%)</title><rect x="26.5233%" y="565" width="0.7168%" height="15" fill="rgb(247,221,28)" fg:x="74" fg:w="2"/><text x="26.7733%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.72%)</title><rect x="26.5233%" y="549" width="0.7168%" height="15" fill="rgb(251,222,45)" fg:x="74" fg:w="2"/><text x="26.7733%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.72%)</title><rect x="26.5233%" y="533" width="0.7168%" height="15" fill="rgb(217,162,53)" fg:x="74" fg:w="2"/><text x="26.7733%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.72%)</title><rect x="26.5233%" y="517" width="0.7168%" height="15" fill="rgb(229,93,14)" fg:x="74" fg:w="2"/><text x="26.7733%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.72%)</title><rect x="26.5233%" y="501" width="0.7168%" height="15" fill="rgb(209,67,49)" fg:x="74" fg:w="2"/><text x="26.7733%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.72%)</title><rect x="26.5233%" y="485" width="0.7168%" height="15" fill="rgb(213,87,29)" fg:x="74" fg:w="2"/><text x="26.7733%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.72%)</title><rect x="26.5233%" y="469" width="0.7168%" height="15" fill="rgb(205,151,52)" fg:x="74" fg:w="2"/><text x="26.7733%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.72%)</title><rect x="26.5233%" y="453" width="0.7168%" height="15" fill="rgb(253,215,39)" fg:x="74" fg:w="2"/><text x="26.7733%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.72%)</title><rect x="26.5233%" y="437" width="0.7168%" height="15" fill="rgb(221,220,41)" fg:x="74" fg:w="2"/><text x="26.7733%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.72%)</title><rect x="26.5233%" y="421" width="0.7168%" height="15" fill="rgb(218,133,21)" fg:x="74" fg:w="2"/><text x="26.7733%" y="431.50"></text></g><g><title>mi_malloc (1 samples, 0.36%)</title><rect x="26.8817%" y="405" width="0.3584%" height="15" fill="rgb(221,193,43)" fg:x="75" fg:w="1"/><text x="27.1317%" y="415.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.36%)</title><rect x="26.8817%" y="389" width="0.3584%" height="15" fill="rgb(240,128,52)" fg:x="75" fg:w="1"/><text x="27.1317%" y="399.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.36%)</title><rect x="26.8817%" y="373" width="0.3584%" height="15" fill="rgb(253,114,12)" fg:x="75" fg:w="1"/><text x="27.1317%" y="383.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.36%)</title><rect x="26.8817%" y="357" width="0.3584%" height="15" fill="rgb(215,223,47)" fg:x="75" fg:w="1"/><text x="27.1317%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.36%)</title><rect x="27.2401%" y="549" width="0.3584%" height="15" fill="rgb(248,225,23)" fg:x="76" fg:w="1"/><text x="27.4901%" y="559.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.36%)</title><rect x="28.6738%" y="469" width="0.3584%" height="15" fill="rgb(250,108,0)" fg:x="80" fg:w="1"/><text x="28.9238%" y="479.50"></text></g><g><title>_mi_memcpy (1 samples, 0.36%)</title><rect x="28.6738%" y="453" width="0.3584%" height="15" fill="rgb(228,208,7)" fg:x="80" fg:w="1"/><text x="28.9238%" y="463.50"></text></g><g><title>memcpy (1 samples, 0.36%)</title><rect x="28.6738%" y="437" width="0.3584%" height="15" fill="rgb(244,45,10)" fg:x="80" fg:w="1"/><text x="28.9238%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.36%)</title><rect x="28.6738%" y="421" width="0.3584%" height="15" fill="rgb(207,125,25)" fg:x="80" fg:w="1"/><text x="28.9238%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="28.6738%" y="405" width="0.3584%" height="15" fill="rgb(210,195,18)" fg:x="80" fg:w="1"/><text x="28.9238%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="28.6738%" y="389" width="0.3584%" height="15" fill="rgb(249,80,12)" fg:x="80" fg:w="1"/><text x="28.9238%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="28.6738%" y="373" width="0.3584%" height="15" fill="rgb(221,65,9)" fg:x="80" fg:w="1"/><text x="28.9238%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="28.6738%" y="357" width="0.3584%" height="15" fill="rgb(235,49,36)" fg:x="80" fg:w="1"/><text x="28.9238%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="28.6738%" y="341" width="0.3584%" height="15" fill="rgb(225,32,20)" fg:x="80" fg:w="1"/><text x="28.9238%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="28.6738%" y="325" width="0.3584%" height="15" fill="rgb(215,141,46)" fg:x="80" fg:w="1"/><text x="28.9238%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="28.6738%" y="309" width="0.3584%" height="15" fill="rgb(250,160,47)" fg:x="80" fg:w="1"/><text x="28.9238%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="28.6738%" y="293" width="0.3584%" height="15" fill="rgb(216,222,40)" fg:x="80" fg:w="1"/><text x="28.9238%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="28.6738%" y="277" width="0.3584%" height="15" fill="rgb(234,217,39)" fg:x="80" fg:w="1"/><text x="28.9238%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="28.6738%" y="261" width="0.3584%" height="15" fill="rgb(207,178,40)" fg:x="80" fg:w="1"/><text x="28.9238%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="28.6738%" y="245" width="0.3584%" height="15" fill="rgb(221,136,13)" fg:x="80" fg:w="1"/><text x="28.9238%" y="255.50"></text></g><g><title>_mi_heap_delayed_free (1 samples, 0.36%)</title><rect x="29.0323%" y="437" width="0.3584%" height="15" fill="rgb(249,199,10)" fg:x="81" fg:w="1"/><text x="29.2823%" y="447.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.36%)</title><rect x="29.3907%" y="389" width="0.3584%" height="15" fill="rgb(249,222,13)" fg:x="82" fg:w="1"/><text x="29.6407%" y="399.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.36%)</title><rect x="29.3907%" y="373" width="0.3584%" height="15" fill="rgb(244,185,38)" fg:x="82" fg:w="1"/><text x="29.6407%" y="383.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.36%)</title><rect x="29.3907%" y="357" width="0.3584%" height="15" fill="rgb(236,202,9)" fg:x="82" fg:w="1"/><text x="29.6407%" y="367.50"></text></g><g><title>mi_block_set_next (1 samples, 0.36%)</title><rect x="29.3907%" y="341" width="0.3584%" height="15" fill="rgb(250,229,37)" fg:x="82" fg:w="1"/><text x="29.6407%" y="351.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.36%)</title><rect x="29.3907%" y="325" width="0.3584%" height="15" fill="rgb(206,174,23)" fg:x="82" fg:w="1"/><text x="29.6407%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="29.3907%" y="309" width="0.3584%" height="15" fill="rgb(211,33,43)" fg:x="82" fg:w="1"/><text x="29.6407%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="29.3907%" y="293" width="0.3584%" height="15" fill="rgb(245,58,50)" fg:x="82" fg:w="1"/><text x="29.6407%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="29.3907%" y="277" width="0.3584%" height="15" fill="rgb(244,68,36)" fg:x="82" fg:w="1"/><text x="29.6407%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="29.3907%" y="261" width="0.3584%" height="15" fill="rgb(232,229,15)" fg:x="82" fg:w="1"/><text x="29.6407%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="29.3907%" y="245" width="0.3584%" height="15" fill="rgb(254,30,23)" fg:x="82" fg:w="1"/><text x="29.6407%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="29.3907%" y="229" width="0.3584%" height="15" fill="rgb(235,160,14)" fg:x="82" fg:w="1"/><text x="29.6407%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="29.3907%" y="213" width="0.3584%" height="15" fill="rgb(212,155,44)" fg:x="82" fg:w="1"/><text x="29.6407%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="29.3907%" y="197" width="0.3584%" height="15" fill="rgb(226,2,50)" fg:x="82" fg:w="1"/><text x="29.6407%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="29.3907%" y="181" width="0.3584%" height="15" fill="rgb(234,177,6)" fg:x="82" fg:w="1"/><text x="29.6407%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="29.3907%" y="165" width="0.3584%" height="15" fill="rgb(217,24,9)" fg:x="82" fg:w="1"/><text x="29.6407%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="29.3907%" y="149" width="0.3584%" height="15" fill="rgb(220,13,46)" fg:x="82" fg:w="1"/><text x="29.6407%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 2.51%)</title><rect x="27.9570%" y="533" width="2.5090%" height="15" fill="rgb(239,221,27)" fg:x="78" fg:w="7"/><text x="28.2070%" y="543.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 2.51%)</title><rect x="27.9570%" y="517" width="2.5090%" height="15" fill="rgb(222,198,25)" fg:x="78" fg:w="7"/><text x="28.2070%" y="527.50">al..</text></g><g><title>alloc::alloc::realloc (6 samples, 2.15%)</title><rect x="28.3154%" y="501" width="2.1505%" height="15" fill="rgb(211,99,13)" fg:x="79" fg:w="6"/><text x="28.5654%" y="511.50">a..</text></g><g><title>_mi_heap_realloc_zero (6 samples, 2.15%)</title><rect x="28.3154%" y="485" width="2.1505%" height="15" fill="rgb(232,111,31)" fg:x="79" fg:w="6"/><text x="28.5654%" y="495.50">_..</text></g><g><title>mi_heap_malloc (4 samples, 1.43%)</title><rect x="29.0323%" y="469" width="1.4337%" height="15" fill="rgb(245,82,37)" fg:x="81" fg:w="4"/><text x="29.2823%" y="479.50"></text></g><g><title>_mi_malloc_generic (4 samples, 1.43%)</title><rect x="29.0323%" y="453" width="1.4337%" height="15" fill="rgb(227,149,46)" fg:x="81" fg:w="4"/><text x="29.2823%" y="463.50"></text></g><g><title>mi_find_page (3 samples, 1.08%)</title><rect x="29.3907%" y="437" width="1.0753%" height="15" fill="rgb(218,36,50)" fg:x="82" fg:w="3"/><text x="29.6407%" y="447.50"></text></g><g><title>mi_find_free_page (3 samples, 1.08%)</title><rect x="29.3907%" y="421" width="1.0753%" height="15" fill="rgb(226,80,48)" fg:x="82" fg:w="3"/><text x="29.6407%" y="431.50"></text></g><g><title>mi_page_queue_find_free_ex (3 samples, 1.08%)</title><rect x="29.3907%" y="405" width="1.0753%" height="15" fill="rgb(238,224,15)" fg:x="82" fg:w="3"/><text x="29.6407%" y="415.50"></text></g><g><title>mi_page_fresh (2 samples, 0.72%)</title><rect x="29.7491%" y="389" width="0.7168%" height="15" fill="rgb(241,136,10)" fg:x="83" fg:w="2"/><text x="29.9991%" y="399.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.72%)</title><rect x="29.7491%" y="373" width="0.7168%" height="15" fill="rgb(208,32,45)" fg:x="83" fg:w="2"/><text x="29.9991%" y="383.50"></text></g><g><title>mi_page_init (2 samples, 0.72%)</title><rect x="29.7491%" y="357" width="0.7168%" height="15" fill="rgb(207,135,9)" fg:x="83" fg:w="2"/><text x="29.9991%" y="367.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.72%)</title><rect x="29.7491%" y="341" width="0.7168%" height="15" fill="rgb(206,86,44)" fg:x="83" fg:w="2"/><text x="29.9991%" y="351.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.72%)</title><rect x="29.7491%" y="325" width="0.7168%" height="15" fill="rgb(245,177,15)" fg:x="83" fg:w="2"/><text x="29.9991%" y="335.50"></text></g><g><title>mi_page_free_list_extend (2 samples, 0.72%)</title><rect x="29.7491%" y="309" width="0.7168%" height="15" fill="rgb(206,64,50)" fg:x="83" fg:w="2"/><text x="29.9991%" y="319.50"></text></g><g><title>mi_block_set_next (1 samples, 0.36%)</title><rect x="30.1075%" y="293" width="0.3584%" height="15" fill="rgb(234,36,40)" fg:x="84" fg:w="1"/><text x="30.3575%" y="303.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.36%)</title><rect x="30.1075%" y="277" width="0.3584%" height="15" fill="rgb(213,64,8)" fg:x="84" fg:w="1"/><text x="30.3575%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="30.1075%" y="261" width="0.3584%" height="15" fill="rgb(210,75,36)" fg:x="84" fg:w="1"/><text x="30.3575%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="30.1075%" y="245" width="0.3584%" height="15" fill="rgb(229,88,21)" fg:x="84" fg:w="1"/><text x="30.3575%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="30.1075%" y="229" width="0.3584%" height="15" fill="rgb(252,204,47)" fg:x="84" fg:w="1"/><text x="30.3575%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="30.1075%" y="213" width="0.3584%" height="15" fill="rgb(208,77,27)" fg:x="84" fg:w="1"/><text x="30.3575%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="30.1075%" y="197" width="0.3584%" height="15" fill="rgb(221,76,26)" fg:x="84" fg:w="1"/><text x="30.3575%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="30.1075%" y="181" width="0.3584%" height="15" fill="rgb(225,139,18)" fg:x="84" fg:w="1"/><text x="30.3575%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="30.1075%" y="165" width="0.3584%" height="15" fill="rgb(230,137,11)" fg:x="84" fg:w="1"/><text x="30.3575%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="30.1075%" y="149" width="0.3584%" height="15" fill="rgb(212,28,1)" fg:x="84" fg:w="1"/><text x="30.3575%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="30.1075%" y="133" width="0.3584%" height="15" fill="rgb(248,164,17)" fg:x="84" fg:w="1"/><text x="30.3575%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 3.23%)</title><rect x="27.5986%" y="549" width="3.2258%" height="15" fill="rgb(222,171,42)" fg:x="77" fg:w="9"/><text x="27.8486%" y="559.50">all..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.36%)</title><rect x="30.4659%" y="533" width="0.3584%" height="15" fill="rgb(243,84,45)" fg:x="85" fg:w="1"/><text x="30.7159%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 3.94%)</title><rect x="27.2401%" y="581" width="3.9427%" height="15" fill="rgb(252,49,23)" fg:x="76" fg:w="11"/><text x="27.4901%" y="591.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 3.94%)</title><rect x="27.2401%" y="565" width="3.9427%" height="15" fill="rgb(215,19,7)" fg:x="76" fg:w="11"/><text x="27.4901%" y="575.50">allo..</text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.36%)</title><rect x="30.8244%" y="549" width="0.3584%" height="15" fill="rgb(238,81,41)" fg:x="86" fg:w="1"/><text x="31.0744%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 5.38%)</title><rect x="27.2401%" y="597" width="5.3763%" height="15" fill="rgb(210,199,37)" fg:x="76" fg:w="15"/><text x="27.4901%" y="607.50">alloc::..</text></g><g><title>core::ptr::write (4 samples, 1.43%)</title><rect x="31.1828%" y="581" width="1.4337%" height="15" fill="rgb(244,192,49)" fg:x="87" fg:w="4"/><text x="31.4328%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.36%)</title><rect x="32.6165%" y="597" width="0.3584%" height="15" fill="rgb(226,211,11)" fg:x="91" fg:w="1"/><text x="32.8665%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.36%)</title><rect x="32.6165%" y="581" width="0.3584%" height="15" fill="rgb(236,162,54)" fg:x="91" fg:w="1"/><text x="32.8665%" y="591.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.36%)</title><rect x="32.6165%" y="565" width="0.3584%" height="15" fill="rgb(220,229,9)" fg:x="91" fg:w="1"/><text x="32.8665%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.36%)</title><rect x="32.6165%" y="549" width="0.3584%" height="15" fill="rgb(250,87,22)" fg:x="91" fg:w="1"/><text x="32.8665%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.72%)</title><rect x="32.9749%" y="597" width="0.7168%" height="15" fill="rgb(239,43,17)" fg:x="92" fg:w="2"/><text x="33.2249%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.72%)</title><rect x="32.9749%" y="581" width="0.7168%" height="15" fill="rgb(231,177,25)" fg:x="92" fg:w="2"/><text x="33.2249%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.72%)</title><rect x="32.9749%" y="565" width="0.7168%" height="15" fill="rgb(219,179,1)" fg:x="92" fg:w="2"/><text x="33.2249%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.72%)</title><rect x="32.9749%" y="549" width="0.7168%" height="15" fill="rgb(238,219,53)" fg:x="92" fg:w="2"/><text x="33.2249%" y="559.50"></text></g><g><title>csgoproto::netmessages::csvcmsg_game_event_list::Key_t::name (1 samples, 0.36%)</title><rect x="33.6918%" y="597" width="0.3584%" height="15" fill="rgb(232,167,36)" fg:x="94" fg:w="1"/><text x="33.9418%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.36%)</title><rect x="33.6918%" y="581" width="0.3584%" height="15" fill="rgb(244,19,51)" fg:x="94" fg:w="1"/><text x="33.9418%" y="591.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.36%)</title><rect x="34.0502%" y="357" width="0.3584%" height="15" fill="rgb(224,6,22)" fg:x="95" fg:w="1"/><text x="34.3002%" y="367.50"></text></g><g><title>mi_find_page (1 samples, 0.36%)</title><rect x="34.0502%" y="341" width="0.3584%" height="15" fill="rgb(224,145,5)" fg:x="95" fg:w="1"/><text x="34.3002%" y="351.50"></text></g><g><title>mi_find_free_page (1 samples, 0.36%)</title><rect x="34.0502%" y="325" width="0.3584%" height="15" fill="rgb(234,130,49)" fg:x="95" fg:w="1"/><text x="34.3002%" y="335.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.36%)</title><rect x="34.0502%" y="309" width="0.3584%" height="15" fill="rgb(254,6,2)" fg:x="95" fg:w="1"/><text x="34.3002%" y="319.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.36%)</title><rect x="34.0502%" y="293" width="0.3584%" height="15" fill="rgb(208,96,46)" fg:x="95" fg:w="1"/><text x="34.3002%" y="303.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.36%)</title><rect x="34.0502%" y="277" width="0.3584%" height="15" fill="rgb(239,3,39)" fg:x="95" fg:w="1"/><text x="34.3002%" y="287.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.36%)</title><rect x="34.0502%" y="261" width="0.3584%" height="15" fill="rgb(233,210,1)" fg:x="95" fg:w="1"/><text x="34.3002%" y="271.50"></text></g><g><title>mi_block_set_next (1 samples, 0.36%)</title><rect x="34.0502%" y="245" width="0.3584%" height="15" fill="rgb(244,137,37)" fg:x="95" fg:w="1"/><text x="34.3002%" y="255.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.36%)</title><rect x="34.0502%" y="229" width="0.3584%" height="15" fill="rgb(240,136,2)" fg:x="95" fg:w="1"/><text x="34.3002%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="34.0502%" y="213" width="0.3584%" height="15" fill="rgb(239,18,37)" fg:x="95" fg:w="1"/><text x="34.3002%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="34.0502%" y="197" width="0.3584%" height="15" fill="rgb(218,185,22)" fg:x="95" fg:w="1"/><text x="34.3002%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="34.0502%" y="181" width="0.3584%" height="15" fill="rgb(225,218,4)" fg:x="95" fg:w="1"/><text x="34.3002%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="34.0502%" y="165" width="0.3584%" height="15" fill="rgb(230,182,32)" fg:x="95" fg:w="1"/><text x="34.3002%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="34.0502%" y="149" width="0.3584%" height="15" fill="rgb(242,56,43)" fg:x="95" fg:w="1"/><text x="34.3002%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="34.0502%" y="133" width="0.3584%" height="15" fill="rgb(233,99,24)" fg:x="95" fg:w="1"/><text x="34.3002%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="34.0502%" y="117" width="0.3584%" height="15" fill="rgb(234,209,42)" fg:x="95" fg:w="1"/><text x="34.3002%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="34.0502%" y="101" width="0.3584%" height="15" fill="rgb(227,7,12)" fg:x="95" fg:w="1"/><text x="34.3002%" y="111.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (2 samples, 0.72%)</title><rect x="34.0502%" y="581" width="0.7168%" height="15" fill="rgb(245,203,43)" fg:x="95" fg:w="2"/><text x="34.3002%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2 samples, 0.72%)</title><rect x="34.0502%" y="565" width="0.7168%" height="15" fill="rgb(238,205,33)" fg:x="95" fg:w="2"/><text x="34.3002%" y="575.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.72%)</title><rect x="34.0502%" y="549" width="0.7168%" height="15" fill="rgb(231,56,7)" fg:x="95" fg:w="2"/><text x="34.3002%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.72%)</title><rect x="34.0502%" y="533" width="0.7168%" height="15" fill="rgb(244,186,29)" fg:x="95" fg:w="2"/><text x="34.3002%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.72%)</title><rect x="34.0502%" y="517" width="0.7168%" height="15" fill="rgb(234,111,31)" fg:x="95" fg:w="2"/><text x="34.3002%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.72%)</title><rect x="34.0502%" y="501" width="0.7168%" height="15" fill="rgb(241,149,10)" fg:x="95" fg:w="2"/><text x="34.3002%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.72%)</title><rect x="34.0502%" y="485" width="0.7168%" height="15" fill="rgb(249,206,44)" fg:x="95" fg:w="2"/><text x="34.3002%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.72%)</title><rect x="34.0502%" y="469" width="0.7168%" height="15" fill="rgb(251,153,30)" fg:x="95" fg:w="2"/><text x="34.3002%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.72%)</title><rect x="34.0502%" y="453" width="0.7168%" height="15" fill="rgb(239,152,38)" fg:x="95" fg:w="2"/><text x="34.3002%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.72%)</title><rect x="34.0502%" y="437" width="0.7168%" height="15" fill="rgb(249,139,47)" fg:x="95" fg:w="2"/><text x="34.3002%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.72%)</title><rect x="34.0502%" y="421" width="0.7168%" height="15" fill="rgb(244,64,35)" fg:x="95" fg:w="2"/><text x="34.3002%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.72%)</title><rect x="34.0502%" y="405" width="0.7168%" height="15" fill="rgb(216,46,15)" fg:x="95" fg:w="2"/><text x="34.3002%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.72%)</title><rect x="34.0502%" y="389" width="0.7168%" height="15" fill="rgb(250,74,19)" fg:x="95" fg:w="2"/><text x="34.3002%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.72%)</title><rect x="34.0502%" y="373" width="0.7168%" height="15" fill="rgb(249,42,33)" fg:x="95" fg:w="2"/><text x="34.3002%" y="383.50"></text></g><g><title>mi_malloc (1 samples, 0.36%)</title><rect x="34.4086%" y="357" width="0.3584%" height="15" fill="rgb(242,149,17)" fg:x="96" fg:w="1"/><text x="34.6586%" y="367.50"></text></g><g><title>mi_get_default_heap (1 samples, 0.36%)</title><rect x="34.4086%" y="341" width="0.3584%" height="15" fill="rgb(244,29,21)" fg:x="96" fg:w="1"/><text x="34.6586%" y="351.50"></text></g><g><title>demoparser::parsing::game_events::parse_key_steam_name (4 samples, 1.43%)</title><rect x="34.0502%" y="597" width="1.4337%" height="15" fill="rgb(220,130,37)" fg:x="95" fg:w="4"/><text x="34.3002%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.72%)</title><rect x="34.7670%" y="581" width="0.7168%" height="15" fill="rgb(211,67,2)" fg:x="97" fg:w="2"/><text x="35.0170%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.72%)</title><rect x="34.7670%" y="565" width="0.7168%" height="15" fill="rgb(235,68,52)" fg:x="97" fg:w="2"/><text x="35.0170%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.72%)</title><rect x="34.7670%" y="549" width="0.7168%" height="15" fill="rgb(246,142,3)" fg:x="97" fg:w="2"/><text x="35.0170%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.72%)</title><rect x="34.7670%" y="533" width="0.7168%" height="15" fill="rgb(241,25,7)" fg:x="97" fg:w="2"/><text x="35.0170%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.72%)</title><rect x="34.7670%" y="517" width="0.7168%" height="15" fill="rgb(242,119,39)" fg:x="97" fg:w="2"/><text x="35.0170%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.72%)</title><rect x="34.7670%" y="501" width="0.7168%" height="15" fill="rgb(241,98,45)" fg:x="97" fg:w="2"/><text x="35.0170%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.36%)</title><rect x="35.1254%" y="485" width="0.3584%" height="15" fill="rgb(254,28,30)" fg:x="98" fg:w="1"/><text x="35.3754%" y="495.50"></text></g><g><title>demoparser::parsing::game_events::&lt;impl demoparser::parsing::parser::Demo&gt;::parse_game_events (43 samples, 15.41%)</title><rect x="21.1470%" y="629" width="15.4122%" height="15" fill="rgb(241,142,54)" fg:x="59" fg:w="43"/><text x="21.3970%" y="639.50">demoparser::parsing::gam..</text></g><g><title>demoparser::parsing::game_events::gen_name_val_pairs (37 samples, 13.26%)</title><rect x="23.2975%" y="613" width="13.2616%" height="15" fill="rgb(222,85,15)" fg:x="65" fg:w="37"/><text x="23.5475%" y="623.50">demoparser::parsing:..</text></g><g><title>demoparser::parsing::game_events::parse_key_steamid (3 samples, 1.08%)</title><rect x="35.4839%" y="597" width="1.0753%" height="15" fill="rgb(210,85,47)" fg:x="99" fg:w="3"/><text x="35.7339%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 1.08%)</title><rect x="35.4839%" y="581" width="1.0753%" height="15" fill="rgb(224,206,25)" fg:x="99" fg:w="3"/><text x="35.7339%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 1.08%)</title><rect x="35.4839%" y="565" width="1.0753%" height="15" fill="rgb(243,201,19)" fg:x="99" fg:w="3"/><text x="35.7339%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 1.08%)</title><rect x="35.4839%" y="549" width="1.0753%" height="15" fill="rgb(236,59,4)" fg:x="99" fg:w="3"/><text x="35.7339%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 1.08%)</title><rect x="35.4839%" y="533" width="1.0753%" height="15" fill="rgb(254,179,45)" fg:x="99" fg:w="3"/><text x="35.7339%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 1.08%)</title><rect x="35.4839%" y="517" width="1.0753%" height="15" fill="rgb(226,14,10)" fg:x="99" fg:w="3"/><text x="35.7339%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 1.08%)</title><rect x="35.4839%" y="501" width="1.0753%" height="15" fill="rgb(244,27,41)" fg:x="99" fg:w="3"/><text x="35.7339%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.36%)</title><rect x="36.2007%" y="485" width="0.3584%" height="15" fill="rgb(235,35,32)" fg:x="101" fg:w="1"/><text x="36.4507%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.36%)</title><rect x="36.2007%" y="469" width="0.3584%" height="15" fill="rgb(218,68,31)" fg:x="101" fg:w="1"/><text x="36.4507%" y="479.50"></text></g><g><title>demoparser::parsing::read_bytes::&lt;impl demoparser::parsing::parser::Demo&gt;::read_i32 (6 samples, 2.15%)</title><rect x="36.5591%" y="629" width="2.1505%" height="15" fill="rgb(207,120,37)" fg:x="102" fg:w="6"/><text x="36.8091%" y="639.50">d..</text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.36%)</title><rect x="38.3513%" y="613" width="0.3584%" height="15" fill="rgb(227,98,0)" fg:x="107" fg:w="1"/><text x="38.6013%" y="623.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.36%)</title><rect x="38.3513%" y="597" width="0.3584%" height="15" fill="rgb(207,7,3)" fg:x="107" fg:w="1"/><text x="38.6013%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.36%)</title><rect x="38.3513%" y="581" width="0.3584%" height="15" fill="rgb(206,98,19)" fg:x="107" fg:w="1"/><text x="38.6013%" y="591.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (1 samples, 0.36%)</title><rect x="38.3513%" y="565" width="0.3584%" height="15" fill="rgb(217,5,26)" fg:x="107" fg:w="1"/><text x="38.6013%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="38.3513%" y="549" width="0.3584%" height="15" fill="rgb(235,190,38)" fg:x="107" fg:w="1"/><text x="38.6013%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="38.3513%" y="533" width="0.3584%" height="15" fill="rgb(247,86,24)" fg:x="107" fg:w="1"/><text x="38.6013%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="38.3513%" y="517" width="0.3584%" height="15" fill="rgb(205,101,16)" fg:x="107" fg:w="1"/><text x="38.6013%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="38.3513%" y="501" width="0.3584%" height="15" fill="rgb(246,168,33)" fg:x="107" fg:w="1"/><text x="38.6013%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="38.3513%" y="485" width="0.3584%" height="15" fill="rgb(231,114,1)" fg:x="107" fg:w="1"/><text x="38.6013%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="38.3513%" y="469" width="0.3584%" height="15" fill="rgb(207,184,53)" fg:x="107" fg:w="1"/><text x="38.6013%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="38.3513%" y="453" width="0.3584%" height="15" fill="rgb(224,95,51)" fg:x="107" fg:w="1"/><text x="38.6013%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="38.3513%" y="437" width="0.3584%" height="15" fill="rgb(212,188,45)" fg:x="107" fg:w="1"/><text x="38.6013%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="38.3513%" y="421" width="0.3584%" height="15" fill="rgb(223,154,38)" fg:x="107" fg:w="1"/><text x="38.6013%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="38.3513%" y="405" width="0.3584%" height="15" fill="rgb(251,22,52)" fg:x="107" fg:w="1"/><text x="38.6013%" y="415.50"></text></g><g><title>demoparser::parsing::read_bytes::&lt;impl demoparser::parsing::parser::Demo&gt;::read_n_bytes (1 samples, 0.36%)</title><rect x="38.7097%" y="629" width="0.3584%" height="15" fill="rgb(229,209,22)" fg:x="108" fg:w="1"/><text x="38.9597%" y="639.50"></text></g><g><title>&lt;demoparser::parsing::variants::BytesVariant as core::ops::index::Index&lt;Idx&gt;&gt;::index (1 samples, 0.36%)</title><rect x="38.7097%" y="613" width="0.3584%" height="15" fill="rgb(234,138,34)" fg:x="108" fg:w="1"/><text x="38.9597%" y="623.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.36%)</title><rect x="38.7097%" y="597" width="0.3584%" height="15" fill="rgb(212,95,11)" fg:x="108" fg:w="1"/><text x="38.9597%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.36%)</title><rect x="38.7097%" y="581" width="0.3584%" height="15" fill="rgb(240,179,47)" fg:x="108" fg:w="1"/><text x="38.9597%" y="591.50"></text></g><g><title>demoparser::parsing::read_bytes::&lt;impl demoparser::parsing::parser::Demo&gt;::read_varint (17 samples, 6.09%)</title><rect x="39.0681%" y="629" width="6.0932%" height="15" fill="rgb(240,163,11)" fg:x="109" fg:w="17"/><text x="39.3181%" y="639.50">demopars..</text></g><g><title>[unknown] (2 samples, 0.72%)</title><rect x="44.4444%" y="613" width="0.7168%" height="15" fill="rgb(236,37,12)" fg:x="124" fg:w="2"/><text x="44.6944%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.72%)</title><rect x="44.4444%" y="597" width="0.7168%" height="15" fill="rgb(232,164,16)" fg:x="124" fg:w="2"/><text x="44.6944%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.72%)</title><rect x="44.4444%" y="581" width="0.7168%" height="15" fill="rgb(244,205,15)" fg:x="124" fg:w="2"/><text x="44.6944%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.72%)</title><rect x="44.4444%" y="565" width="0.7168%" height="15" fill="rgb(223,117,47)" fg:x="124" fg:w="2"/><text x="44.6944%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.72%)</title><rect x="44.4444%" y="549" width="0.7168%" height="15" fill="rgb(244,107,35)" fg:x="124" fg:w="2"/><text x="44.6944%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="44.8029%" y="533" width="0.3584%" height="15" fill="rgb(205,140,8)" fg:x="125" fg:w="1"/><text x="45.0529%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="44.8029%" y="517" width="0.3584%" height="15" fill="rgb(228,84,46)" fg:x="125" fg:w="1"/><text x="45.0529%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="44.8029%" y="501" width="0.3584%" height="15" fill="rgb(254,188,9)" fg:x="125" fg:w="1"/><text x="45.0529%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="44.8029%" y="485" width="0.3584%" height="15" fill="rgb(206,112,54)" fg:x="125" fg:w="1"/><text x="45.0529%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="44.8029%" y="469" width="0.3584%" height="15" fill="rgb(216,84,49)" fg:x="125" fg:w="1"/><text x="45.0529%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.36%)</title><rect x="45.1613%" y="533" width="0.3584%" height="15" fill="rgb(214,194,35)" fg:x="126" fg:w="1"/><text x="45.4113%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.72%)</title><rect x="46.9534%" y="437" width="0.7168%" height="15" fill="rgb(249,28,3)" fg:x="131" fg:w="2"/><text x="47.2034%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.72%)</title><rect x="46.9534%" y="421" width="0.7168%" height="15" fill="rgb(222,56,52)" fg:x="131" fg:w="2"/><text x="47.2034%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.72%)</title><rect x="46.9534%" y="405" width="0.7168%" height="15" fill="rgb(245,217,50)" fg:x="131" fg:w="2"/><text x="47.2034%" y="415.50"></text></g><g><title>&lt;demoparser::parsing::stringtables::StField as core::clone::Clone&gt;::clone (7 samples, 2.51%)</title><rect x="45.5197%" y="533" width="2.5090%" height="15" fill="rgb(213,201,24)" fg:x="127" fg:w="7"/><text x="45.7697%" y="543.50">&lt;d..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 2.51%)</title><rect x="45.5197%" y="517" width="2.5090%" height="15" fill="rgb(248,116,28)" fg:x="127" fg:w="7"/><text x="45.7697%" y="527.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 1.08%)</title><rect x="46.9534%" y="501" width="1.0753%" height="15" fill="rgb(219,72,43)" fg:x="131" fg:w="3"/><text x="47.2034%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 1.08%)</title><rect x="46.9534%" y="485" width="1.0753%" height="15" fill="rgb(209,138,14)" fg:x="131" fg:w="3"/><text x="47.2034%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 1.08%)</title><rect x="46.9534%" y="469" width="1.0753%" height="15" fill="rgb(222,18,33)" fg:x="131" fg:w="3"/><text x="47.2034%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 1.08%)</title><rect x="46.9534%" y="453" width="1.0753%" height="15" fill="rgb(213,199,7)" fg:x="131" fg:w="3"/><text x="47.2034%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.36%)</title><rect x="47.6703%" y="437" width="0.3584%" height="15" fill="rgb(250,110,10)" fg:x="133" fg:w="1"/><text x="47.9203%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.36%)</title><rect x="47.6703%" y="421" width="0.3584%" height="15" fill="rgb(248,123,6)" fg:x="133" fg:w="1"/><text x="47.9203%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.36%)</title><rect x="47.6703%" y="405" width="0.3584%" height="15" fill="rgb(206,91,31)" fg:x="133" fg:w="1"/><text x="47.9203%" y="415.50"></text></g><g><title>&lt;demoparser::parsing::stringtables::StringTable as core::clone::Clone&gt;::clone (22 samples, 7.89%)</title><rect x="45.1613%" y="613" width="7.8853%" height="15" fill="rgb(211,154,13)" fg:x="126" fg:w="22"/><text x="45.4113%" y="623.50">&lt;demoparser..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 7.89%)</title><rect x="45.1613%" y="597" width="7.8853%" height="15" fill="rgb(225,148,7)" fg:x="126" fg:w="22"/><text x="45.4113%" y="607.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 7.89%)</title><rect x="45.1613%" y="581" width="7.8853%" height="15" fill="rgb(220,160,43)" fg:x="126" fg:w="22"/><text x="45.4113%" y="591.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (22 samples, 7.89%)</title><rect x="45.1613%" y="565" width="7.8853%" height="15" fill="rgb(213,52,39)" fg:x="126" fg:w="22"/><text x="45.4113%" y="575.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 7.89%)</title><rect x="45.1613%" y="549" width="7.8853%" height="15" fill="rgb(243,137,7)" fg:x="126" fg:w="22"/><text x="45.4113%" y="559.50">&lt;T as alloc..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 5.02%)</title><rect x="48.0287%" y="533" width="5.0179%" height="15" fill="rgb(230,79,13)" fg:x="134" fg:w="14"/><text x="48.2787%" y="543.50">core::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.72%)</title><rect x="54.1219%" y="597" width="0.7168%" height="15" fill="rgb(247,105,23)" fg:x="151" fg:w="2"/><text x="54.3719%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.72%)</title><rect x="54.1219%" y="581" width="0.7168%" height="15" fill="rgb(223,179,41)" fg:x="151" fg:w="2"/><text x="54.3719%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.72%)</title><rect x="54.1219%" y="565" width="0.7168%" height="15" fill="rgb(218,9,34)" fg:x="151" fg:w="2"/><text x="54.3719%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.72%)</title><rect x="54.1219%" y="549" width="0.7168%" height="15" fill="rgb(222,106,8)" fg:x="151" fg:w="2"/><text x="54.3719%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.72%)</title><rect x="54.1219%" y="533" width="0.7168%" height="15" fill="rgb(211,220,0)" fg:x="151" fg:w="2"/><text x="54.3719%" y="543.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.72%)</title><rect x="54.1219%" y="517" width="0.7168%" height="15" fill="rgb(229,52,16)" fg:x="151" fg:w="2"/><text x="54.3719%" y="527.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.72%)</title><rect x="54.1219%" y="501" width="0.7168%" height="15" fill="rgb(212,155,18)" fg:x="151" fg:w="2"/><text x="54.3719%" y="511.50"></text></g><g><title>_mi_memcpy_aligned (2 samples, 0.72%)</title><rect x="54.1219%" y="485" width="0.7168%" height="15" fill="rgb(242,21,14)" fg:x="151" fg:w="2"/><text x="54.3719%" y="495.50"></text></g><g><title>_mi_memcpy (2 samples, 0.72%)</title><rect x="54.1219%" y="469" width="0.7168%" height="15" fill="rgb(222,19,48)" fg:x="151" fg:w="2"/><text x="54.3719%" y="479.50"></text></g><g><title>memcpy (2 samples, 0.72%)</title><rect x="54.1219%" y="453" width="0.7168%" height="15" fill="rgb(232,45,27)" fg:x="151" fg:w="2"/><text x="54.3719%" y="463.50"></text></g><g><title>[libc.so.6] (2 samples, 0.72%)</title><rect x="54.1219%" y="437" width="0.7168%" height="15" fill="rgb(249,103,42)" fg:x="151" fg:w="2"/><text x="54.3719%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 2.51%)</title><rect x="53.0466%" y="613" width="2.5090%" height="15" fill="rgb(246,81,33)" fg:x="148" fg:w="7"/><text x="53.2966%" y="623.50">al..</text></g><g><title>core::ptr::write (2 samples, 0.72%)</title><rect x="54.8387%" y="597" width="0.7168%" height="15" fill="rgb(252,33,42)" fg:x="153" fg:w="2"/><text x="55.0887%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::stringtables::StringTable&gt; (3 samples, 1.08%)</title><rect x="55.5556%" y="613" width="1.0753%" height="15" fill="rgb(209,212,41)" fg:x="155" fg:w="3"/><text x="55.8056%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::stringtables::StField&gt;&gt; (3 samples, 1.08%)</title><rect x="55.5556%" y="597" width="1.0753%" height="15" fill="rgb(207,154,6)" fg:x="155" fg:w="3"/><text x="55.8056%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 1.08%)</title><rect x="55.5556%" y="581" width="1.0753%" height="15" fill="rgb(223,64,47)" fg:x="155" fg:w="3"/><text x="55.8056%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::stringtables::StField]&gt; (3 samples, 1.08%)</title><rect x="55.5556%" y="565" width="1.0753%" height="15" fill="rgb(211,161,38)" fg:x="155" fg:w="3"/><text x="55.8056%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::stringtables::StField&gt; (3 samples, 1.08%)</title><rect x="55.5556%" y="549" width="1.0753%" height="15" fill="rgb(219,138,40)" fg:x="155" fg:w="3"/><text x="55.8056%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 1.08%)</title><rect x="55.5556%" y="533" width="1.0753%" height="15" fill="rgb(241,228,46)" fg:x="155" fg:w="3"/><text x="55.8056%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 1.08%)</title><rect x="55.5556%" y="517" width="1.0753%" height="15" fill="rgb(223,209,38)" fg:x="155" fg:w="3"/><text x="55.8056%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 1.08%)</title><rect x="55.5556%" y="501" width="1.0753%" height="15" fill="rgb(236,164,45)" fg:x="155" fg:w="3"/><text x="55.8056%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 1.08%)</title><rect x="55.5556%" y="485" width="1.0753%" height="15" fill="rgb(231,15,5)" fg:x="155" fg:w="3"/><text x="55.8056%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 1.08%)</title><rect x="55.5556%" y="469" width="1.0753%" height="15" fill="rgb(252,35,15)" fg:x="155" fg:w="3"/><text x="55.8056%" y="479.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.36%)</title><rect x="56.6308%" y="565" width="0.3584%" height="15" fill="rgb(248,181,18)" fg:x="158" fg:w="1"/><text x="56.8808%" y="575.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.72%)</title><rect x="56.6308%" y="581" width="0.7168%" height="15" fill="rgb(233,39,42)" fg:x="158" fg:w="2"/><text x="56.8808%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.36%)</title><rect x="56.9892%" y="565" width="0.3584%" height="15" fill="rgb(238,110,33)" fg:x="159" fg:w="1"/><text x="57.2392%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.36%)</title><rect x="56.9892%" y="549" width="0.3584%" height="15" fill="rgb(233,195,10)" fg:x="159" fg:w="1"/><text x="57.2392%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.36%)</title><rect x="56.9892%" y="533" width="0.3584%" height="15" fill="rgb(254,105,3)" fg:x="159" fg:w="1"/><text x="57.2392%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.36%)</title><rect x="56.9892%" y="517" width="0.3584%" height="15" fill="rgb(221,225,9)" fg:x="159" fg:w="1"/><text x="57.2392%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.36%)</title><rect x="56.9892%" y="501" width="0.3584%" height="15" fill="rgb(224,227,45)" fg:x="159" fg:w="1"/><text x="57.2392%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.36%)</title><rect x="56.9892%" y="485" width="0.3584%" height="15" fill="rgb(229,198,43)" fg:x="159" fg:w="1"/><text x="57.2392%" y="495.50"></text></g><g><title>demoparser::parsing::stringtables::&lt;impl demoparser::parsing::parser::Demo&gt;::create_string_table (35 samples, 12.54%)</title><rect x="45.1613%" y="629" width="12.5448%" height="15" fill="rgb(206,209,35)" fg:x="126" fg:w="35"/><text x="45.4113%" y="639.50">demoparser::parsing..</text></g><g><title>demoparser::parsing::stringtables::&lt;impl demoparser::parsing::parser::Demo&gt;::update_string_table (3 samples, 1.08%)</title><rect x="56.6308%" y="613" width="1.0753%" height="15" fill="rgb(245,195,53)" fg:x="158" fg:w="3"/><text x="56.8808%" y="623.50"></text></g><g><title>demoparser::parsing::read_bits_old::BitReader&lt;R&gt;::read_string_lossy (3 samples, 1.08%)</title><rect x="56.6308%" y="597" width="1.0753%" height="15" fill="rgb(240,92,26)" fg:x="158" fg:w="3"/><text x="56.8808%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.36%)</title><rect x="57.3477%" y="581" width="0.3584%" height="15" fill="rgb(207,40,23)" fg:x="160" fg:w="1"/><text x="57.5977%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&lt;&amp;str&gt;&gt;::ne (1 samples, 0.36%)</title><rect x="57.7061%" y="613" width="0.3584%" height="15" fill="rgb(223,111,35)" fg:x="161" fg:w="1"/><text x="57.9561%" y="623.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::ne (1 samples, 0.36%)</title><rect x="57.7061%" y="597" width="0.3584%" height="15" fill="rgb(229,147,28)" fg:x="161" fg:w="1"/><text x="57.9561%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.36%)</title><rect x="57.7061%" y="581" width="0.3584%" height="15" fill="rgb(211,29,28)" fg:x="161" fg:w="1"/><text x="57.9561%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.36%)</title><rect x="57.7061%" y="565" width="0.3584%" height="15" fill="rgb(228,72,33)" fg:x="161" fg:w="1"/><text x="57.9561%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.36%)</title><rect x="57.7061%" y="549" width="0.3584%" height="15" fill="rgb(205,214,31)" fg:x="161" fg:w="1"/><text x="57.9561%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.36%)</title><rect x="57.7061%" y="533" width="0.3584%" height="15" fill="rgb(224,111,15)" fg:x="161" fg:w="1"/><text x="57.9561%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_UpdateStringTable&gt; (5 samples, 1.79%)</title><rect x="58.0645%" y="613" width="1.7921%" height="15" fill="rgb(253,21,26)" fg:x="162" fg:w="5"/><text x="58.3145%" y="623.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (5 samples, 1.79%)</title><rect x="58.0645%" y="597" width="1.7921%" height="15" fill="rgb(245,139,43)" fg:x="162" fg:w="5"/><text x="58.3145%" y="607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 1.79%)</title><rect x="58.0645%" y="581" width="1.7921%" height="15" fill="rgb(252,170,7)" fg:x="162" fg:w="5"/><text x="58.3145%" y="591.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 1.79%)</title><rect x="58.0645%" y="565" width="1.7921%" height="15" fill="rgb(231,118,14)" fg:x="162" fg:w="5"/><text x="58.3145%" y="575.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 1.79%)</title><rect x="58.0645%" y="549" width="1.7921%" height="15" fill="rgb(238,83,0)" fg:x="162" fg:w="5"/><text x="58.3145%" y="559.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 1.79%)</title><rect x="58.0645%" y="533" width="1.7921%" height="15" fill="rgb(221,39,39)" fg:x="162" fg:w="5"/><text x="58.3145%" y="543.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (5 samples, 1.79%)</title><rect x="58.0645%" y="517" width="1.7921%" height="15" fill="rgb(222,119,46)" fg:x="162" fg:w="5"/><text x="58.3145%" y="527.50">a..</text></g><g><title>mi_free (5 samples, 1.79%)</title><rect x="58.0645%" y="501" width="1.7921%" height="15" fill="rgb(222,165,49)" fg:x="162" fg:w="5"/><text x="58.3145%" y="511.50">m..</text></g><g><title>_mi_segment_page_of (2 samples, 0.72%)</title><rect x="59.1398%" y="485" width="0.7168%" height="15" fill="rgb(219,113,52)" fg:x="165" fg:w="2"/><text x="59.3898%" y="495.50"></text></g><g><title>mi_slice_first (2 samples, 0.72%)</title><rect x="59.1398%" y="469" width="0.7168%" height="15" fill="rgb(214,7,15)" fg:x="165" fg:w="2"/><text x="59.3898%" y="479.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end_matches (1 samples, 0.36%)</title><rect x="59.8566%" y="613" width="0.3584%" height="15" fill="rgb(235,32,4)" fg:x="167" fg:w="1"/><text x="60.1066%" y="623.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (1 samples, 0.36%)</title><rect x="59.8566%" y="597" width="0.3584%" height="15" fill="rgb(238,90,54)" fg:x="167" fg:w="1"/><text x="60.1066%" y="607.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_back (1 samples, 0.36%)</title><rect x="59.8566%" y="581" width="0.3584%" height="15" fill="rgb(213,208,19)" fg:x="167" fg:w="1"/><text x="60.1066%" y="591.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (1 samples, 0.36%)</title><rect x="59.8566%" y="565" width="0.3584%" height="15" fill="rgb(233,156,4)" fg:x="167" fg:w="1"/><text x="60.1066%" y="575.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.36%)</title><rect x="59.8566%" y="549" width="0.3584%" height="15" fill="rgb(207,194,5)" fg:x="167" fg:w="1"/><text x="60.1066%" y="559.50"></text></g><g><title>demoparser::parsing::stringtables::&lt;impl demoparser::parsing::parser::Demo&gt;::update_string_table_msg (8 samples, 2.87%)</title><rect x="57.7061%" y="629" width="2.8674%" height="15" fill="rgb(206,111,30)" fg:x="161" fg:w="8"/><text x="57.9561%" y="639.50">de..</text></g><g><title>demoparser::parsing::stringtables::&lt;impl demoparser::parsing::parser::Demo&gt;::parse_userinfo (1 samples, 0.36%)</title><rect x="60.2151%" y="613" width="0.3584%" height="15" fill="rgb(243,70,54)" fg:x="168" fg:w="1"/><text x="60.4651%" y="623.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.36%)</title><rect x="60.2151%" y="597" width="0.3584%" height="15" fill="rgb(242,28,8)" fg:x="168" fg:w="1"/><text x="60.4651%" y="607.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.36%)</title><rect x="60.2151%" y="581" width="0.3584%" height="15" fill="rgb(219,106,18)" fg:x="168" fg:w="1"/><text x="60.4651%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.36%)</title><rect x="60.2151%" y="565" width="0.3584%" height="15" fill="rgb(244,222,10)" fg:x="168" fg:w="1"/><text x="60.4651%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.36%)</title><rect x="60.2151%" y="549" width="0.3584%" height="15" fill="rgb(236,179,52)" fg:x="168" fg:w="1"/><text x="60.4651%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.36%)</title><rect x="60.2151%" y="533" width="0.3584%" height="15" fill="rgb(213,23,39)" fg:x="168" fg:w="1"/><text x="60.4651%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.36%)</title><rect x="60.2151%" y="517" width="0.3584%" height="15" fill="rgb(238,48,10)" fg:x="168" fg:w="1"/><text x="60.4651%" y="527.50"></text></g><g><title>&lt;protobuf::coded_input_stream::buf_read_iter::BufReadIter as core::ops::drop::Drop&gt;::drop (1 samples, 0.36%)</title><rect x="61.2903%" y="613" width="0.3584%" height="15" fill="rgb(251,196,23)" fg:x="171" fg:w="1"/><text x="61.5403%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::check_eof (2 samples, 0.72%)</title><rect x="61.6487%" y="613" width="0.7168%" height="15" fill="rgb(250,152,24)" fg:x="172" fg:w="2"/><text x="61.8987%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (2 samples, 0.72%)</title><rect x="61.6487%" y="597" width="0.7168%" height="15" fill="rgb(209,150,17)" fg:x="172" fg:w="2"/><text x="61.8987%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (2 samples, 0.72%)</title><rect x="61.6487%" y="581" width="0.7168%" height="15" fill="rgb(234,202,34)" fg:x="172" fg:w="2"/><text x="61.8987%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (2 samples, 0.72%)</title><rect x="61.6487%" y="565" width="0.7168%" height="15" fill="rgb(253,148,53)" fg:x="172" fg:w="2"/><text x="61.8987%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf_slow (1 samples, 0.36%)</title><rect x="62.0072%" y="549" width="0.3584%" height="15" fill="rgb(218,129,16)" fg:x="173" fg:w="1"/><text x="62.2572%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 1.79%)</title><rect x="64.1577%" y="581" width="1.7921%" height="15" fill="rgb(216,85,19)" fg:x="179" fg:w="5"/><text x="64.4077%" y="591.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (1 samples, 0.36%)</title><rect x="65.9498%" y="581" width="0.3584%" height="15" fill="rgb(235,228,7)" fg:x="184" fg:w="1"/><text x="66.1998%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.36%)</title><rect x="67.3835%" y="549" width="0.3584%" height="15" fill="rgb(245,175,0)" fg:x="188" fg:w="1"/><text x="67.6335%" y="559.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.36%)</title><rect x="68.1004%" y="437" width="0.3584%" height="15" fill="rgb(208,168,36)" fg:x="190" fg:w="1"/><text x="68.3504%" y="447.50"></text></g><g><title>mi_find_page (1 samples, 0.36%)</title><rect x="68.1004%" y="421" width="0.3584%" height="15" fill="rgb(246,171,24)" fg:x="190" fg:w="1"/><text x="68.3504%" y="431.50"></text></g><g><title>mi_find_free_page (1 samples, 0.36%)</title><rect x="68.1004%" y="405" width="0.3584%" height="15" fill="rgb(215,142,24)" fg:x="190" fg:w="1"/><text x="68.3504%" y="415.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.36%)</title><rect x="68.1004%" y="389" width="0.3584%" height="15" fill="rgb(250,187,7)" fg:x="190" fg:w="1"/><text x="68.3504%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (3 samples, 1.08%)</title><rect x="67.7419%" y="517" width="1.0753%" height="15" fill="rgb(228,66,33)" fg:x="189" fg:w="3"/><text x="67.9919%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (3 samples, 1.08%)</title><rect x="67.7419%" y="501" width="1.0753%" height="15" fill="rgb(234,215,21)" fg:x="189" fg:w="3"/><text x="67.9919%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (3 samples, 1.08%)</title><rect x="67.7419%" y="485" width="1.0753%" height="15" fill="rgb(222,191,20)" fg:x="189" fg:w="3"/><text x="67.9919%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (3 samples, 1.08%)</title><rect x="67.7419%" y="469" width="1.0753%" height="15" fill="rgb(245,79,54)" fg:x="189" fg:w="3"/><text x="67.9919%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 1.08%)</title><rect x="67.7419%" y="453" width="1.0753%" height="15" fill="rgb(240,10,37)" fg:x="189" fg:w="3"/><text x="67.9919%" y="463.50"></text></g><g><title>mi_malloc (1 samples, 0.36%)</title><rect x="68.4588%" y="437" width="0.3584%" height="15" fill="rgb(214,192,32)" fg:x="191" fg:w="1"/><text x="68.7088%" y="447.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.36%)</title><rect x="68.4588%" y="421" width="0.3584%" height="15" fill="rgb(209,36,54)" fg:x="191" fg:w="1"/><text x="68.7088%" y="431.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.36%)</title><rect x="68.4588%" y="405" width="0.3584%" height="15" fill="rgb(220,10,11)" fg:x="191" fg:w="1"/><text x="68.7088%" y="415.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.36%)</title><rect x="68.4588%" y="389" width="0.3584%" height="15" fill="rgb(221,106,17)" fg:x="191" fg:w="1"/><text x="68.7088%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::bytes_until_limit (1 samples, 0.36%)</title><rect x="68.8172%" y="517" width="0.3584%" height="15" fill="rgb(251,142,44)" fg:x="192" fg:w="1"/><text x="69.0672%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (17 samples, 6.09%)</title><rect x="66.3082%" y="581" width="6.0932%" height="15" fill="rgb(238,13,15)" fg:x="185" fg:w="17"/><text x="66.5582%" y="591.50">protobuf..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (14 samples, 5.02%)</title><rect x="67.3835%" y="565" width="5.0179%" height="15" fill="rgb(208,107,27)" fg:x="188" fg:w="14"/><text x="67.6335%" y="575.50">protob..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (13 samples, 4.66%)</title><rect x="67.7419%" y="549" width="4.6595%" height="15" fill="rgb(205,136,37)" fg:x="189" fg:w="13"/><text x="67.9919%" y="559.50">proto..</text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (13 samples, 4.66%)</title><rect x="67.7419%" y="533" width="4.6595%" height="15" fill="rgb(250,205,27)" fg:x="189" fg:w="13"/><text x="67.9919%" y="543.50">proto..</text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (9 samples, 3.23%)</title><rect x="69.1756%" y="517" width="3.2258%" height="15" fill="rgb(210,80,43)" fg:x="193" fg:w="9"/><text x="69.4256%" y="527.50">pro..</text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (9 samples, 3.23%)</title><rect x="69.1756%" y="501" width="3.2258%" height="15" fill="rgb(247,160,36)" fg:x="193" fg:w="9"/><text x="69.4256%" y="511.50">pro..</text></g><g><title>protobuf::misc::maybe_uninit_write_slice (8 samples, 2.87%)</title><rect x="69.5341%" y="485" width="2.8674%" height="15" fill="rgb(234,13,49)" fg:x="194" fg:w="8"/><text x="69.7841%" y="495.50">pr..</text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 2.87%)</title><rect x="69.5341%" y="469" width="2.8674%" height="15" fill="rgb(234,122,0)" fg:x="194" fg:w="8"/><text x="69.7841%" y="479.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 2.87%)</title><rect x="69.5341%" y="453" width="2.8674%" height="15" fill="rgb(207,146,38)" fg:x="194" fg:w="8"/><text x="69.7841%" y="463.50">co..</text></g><g><title>[libc.so.6] (8 samples, 2.87%)</title><rect x="69.5341%" y="437" width="2.8674%" height="15" fill="rgb(207,177,25)" fg:x="194" fg:w="8"/><text x="69.7841%" y="447.50">[l..</text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="72.0430%" y="421" width="0.3584%" height="15" fill="rgb(211,178,42)" fg:x="201" fg:w="1"/><text x="72.2930%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="72.0430%" y="405" width="0.3584%" height="15" fill="rgb(230,69,54)" fg:x="201" fg:w="1"/><text x="72.2930%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="72.0430%" y="389" width="0.3584%" height="15" fill="rgb(214,135,41)" fg:x="201" fg:w="1"/><text x="72.2930%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="72.0430%" y="373" width="0.3584%" height="15" fill="rgb(237,67,25)" fg:x="201" fg:w="1"/><text x="72.2930%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="72.0430%" y="357" width="0.3584%" height="15" fill="rgb(222,189,50)" fg:x="201" fg:w="1"/><text x="72.2930%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="72.0430%" y="341" width="0.3584%" height="15" fill="rgb(245,148,34)" fg:x="201" fg:w="1"/><text x="72.2930%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="72.0430%" y="325" width="0.3584%" height="15" fill="rgb(222,29,6)" fg:x="201" fg:w="1"/><text x="72.2930%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="72.0430%" y="309" width="0.3584%" height="15" fill="rgb(221,189,43)" fg:x="201" fg:w="1"/><text x="72.2930%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="72.0430%" y="293" width="0.3584%" height="15" fill="rgb(207,36,27)" fg:x="201" fg:w="1"/><text x="72.2930%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="72.0430%" y="277" width="0.3584%" height="15" fill="rgb(217,90,24)" fg:x="201" fg:w="1"/><text x="72.2930%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="72.0430%" y="261" width="0.3584%" height="15" fill="rgb(224,66,35)" fg:x="201" fg:w="1"/><text x="72.2930%" y="271.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (2 samples, 0.72%)</title><rect x="72.4014%" y="581" width="0.7168%" height="15" fill="rgb(221,13,50)" fg:x="202" fg:w="2"/><text x="72.6514%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (1 samples, 0.36%)</title><rect x="72.7599%" y="565" width="0.3584%" height="15" fill="rgb(236,68,49)" fg:x="203" fg:w="1"/><text x="73.0099%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.36%)</title><rect x="72.7599%" y="549" width="0.3584%" height="15" fill="rgb(229,146,28)" fg:x="203" fg:w="1"/><text x="73.0099%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.36%)</title><rect x="72.7599%" y="533" width="0.3584%" height="15" fill="rgb(225,31,38)" fg:x="203" fg:w="1"/><text x="73.0099%" y="543.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.36%)</title><rect x="72.7599%" y="517" width="0.3584%" height="15" fill="rgb(250,208,3)" fg:x="203" fg:w="1"/><text x="73.0099%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (2 samples, 0.72%)</title><rect x="75.2688%" y="549" width="0.7168%" height="15" fill="rgb(246,54,23)" fg:x="210" fg:w="2"/><text x="75.5188%" y="559.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_EntityMsg as protobuf::message::Message&gt;::merge_from (38 samples, 13.62%)</title><rect x="62.7240%" y="597" width="13.6201%" height="15" fill="rgb(243,76,11)" fg:x="175" fg:w="38"/><text x="62.9740%" y="607.50">&lt;csgoproto::netmessag..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (9 samples, 3.23%)</title><rect x="73.1183%" y="581" width="3.2258%" height="15" fill="rgb(245,21,50)" fg:x="204" fg:w="9"/><text x="73.3683%" y="591.50">pro..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (3 samples, 1.08%)</title><rect x="75.2688%" y="565" width="1.0753%" height="15" fill="rgb(228,9,43)" fg:x="210" fg:w="3"/><text x="75.5188%" y="575.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.36%)</title><rect x="75.9857%" y="549" width="0.3584%" height="15" fill="rgb(208,100,47)" fg:x="212" fg:w="1"/><text x="76.2357%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.36%)</title><rect x="75.9857%" y="533" width="0.3584%" height="15" fill="rgb(232,26,8)" fg:x="212" fg:w="1"/><text x="76.2357%" y="543.50"></text></g><g><title>&lt;u32 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.36%)</title><rect x="75.9857%" y="517" width="0.3584%" height="15" fill="rgb(216,166,38)" fg:x="212" fg:w="1"/><text x="76.2357%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 1.43%)</title><rect x="76.7025%" y="581" width="1.4337%" height="15" fill="rgb(251,202,51)" fg:x="214" fg:w="4"/><text x="76.9525%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.36%)</title><rect x="78.4946%" y="517" width="0.3584%" height="15" fill="rgb(254,216,34)" fg:x="219" fg:w="1"/><text x="78.7446%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.36%)</title><rect x="78.4946%" y="501" width="0.3584%" height="15" fill="rgb(251,32,27)" fg:x="219" fg:w="1"/><text x="78.7446%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.36%)</title><rect x="78.4946%" y="485" width="0.3584%" height="15" fill="rgb(208,127,28)" fg:x="219" fg:w="1"/><text x="78.7446%" y="495.50"></text></g><g><title>mi_heap_realloc (1 samples, 0.36%)</title><rect x="78.4946%" y="469" width="0.3584%" height="15" fill="rgb(224,137,22)" fg:x="219" fg:w="1"/><text x="78.7446%" y="479.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.36%)</title><rect x="78.8530%" y="501" width="0.3584%" height="15" fill="rgb(254,70,32)" fg:x="220" fg:w="1"/><text x="79.1030%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 1.43%)</title><rect x="78.1362%" y="533" width="1.4337%" height="15" fill="rgb(229,75,37)" fg:x="218" fg:w="4"/><text x="78.3862%" y="543.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.72%)</title><rect x="78.8530%" y="517" width="0.7168%" height="15" fill="rgb(252,64,23)" fg:x="220" fg:w="2"/><text x="79.1030%" y="527.50"></text></g><g><title>mi_find_page (1 samples, 0.36%)</title><rect x="79.2115%" y="501" width="0.3584%" height="15" fill="rgb(232,162,48)" fg:x="221" fg:w="1"/><text x="79.4615%" y="511.50"></text></g><g><title>mi_find_free_page (1 samples, 0.36%)</title><rect x="79.2115%" y="485" width="0.3584%" height="15" fill="rgb(246,160,12)" fg:x="221" fg:w="1"/><text x="79.4615%" y="495.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.36%)</title><rect x="79.2115%" y="469" width="0.3584%" height="15" fill="rgb(247,166,0)" fg:x="221" fg:w="1"/><text x="79.4615%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 1.79%)</title><rect x="78.1362%" y="565" width="1.7921%" height="15" fill="rgb(249,219,21)" fg:x="218" fg:w="5"/><text x="78.3862%" y="575.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 1.79%)</title><rect x="78.1362%" y="549" width="1.7921%" height="15" fill="rgb(205,209,3)" fg:x="218" fg:w="5"/><text x="78.3862%" y="559.50">a..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.36%)</title><rect x="79.5699%" y="533" width="0.3584%" height="15" fill="rgb(243,44,1)" fg:x="222" fg:w="1"/><text x="79.8199%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.36%)</title><rect x="79.5699%" y="517" width="0.3584%" height="15" fill="rgb(206,159,16)" fg:x="222" fg:w="1"/><text x="79.8199%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 2.51%)</title><rect x="78.1362%" y="581" width="2.5090%" height="15" fill="rgb(244,77,30)" fg:x="218" fg:w="7"/><text x="78.3862%" y="591.50">al..</text></g><g><title>core::ptr::write (2 samples, 0.72%)</title><rect x="79.9283%" y="565" width="0.7168%" height="15" fill="rgb(218,69,12)" fg:x="223" fg:w="2"/><text x="80.1783%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (1 samples, 0.36%)</title><rect x="80.6452%" y="581" width="0.3584%" height="15" fill="rgb(212,87,7)" fg:x="225" fg:w="1"/><text x="80.8952%" y="591.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;i64&gt; for i32&gt;::try_from (1 samples, 0.36%)</title><rect x="80.6452%" y="565" width="0.3584%" height="15" fill="rgb(245,114,25)" fg:x="225" fg:w="1"/><text x="80.8952%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.72%)</title><rect x="81.3620%" y="549" width="0.7168%" height="15" fill="rgb(210,61,42)" fg:x="227" fg:w="2"/><text x="81.6120%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.72%)</title><rect x="84.9462%" y="533" width="0.7168%" height="15" fill="rgb(211,52,33)" fg:x="237" fg:w="2"/><text x="85.1962%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (2 samples, 0.72%)</title><rect x="85.6631%" y="533" width="0.7168%" height="15" fill="rgb(234,58,33)" fg:x="239" fg:w="2"/><text x="85.9131%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (2 samples, 0.72%)</title><rect x="85.6631%" y="517" width="0.7168%" height="15" fill="rgb(220,115,36)" fg:x="239" fg:w="2"/><text x="85.9131%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (2 samples, 0.72%)</title><rect x="85.6631%" y="501" width="0.7168%" height="15" fill="rgb(243,153,54)" fg:x="239" fg:w="2"/><text x="85.9131%" y="511.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (2 samples, 0.72%)</title><rect x="85.6631%" y="485" width="0.7168%" height="15" fill="rgb(251,47,18)" fg:x="239" fg:w="2"/><text x="85.9131%" y="495.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (2 samples, 0.72%)</title><rect x="85.6631%" y="469" width="0.7168%" height="15" fill="rgb(242,102,42)" fg:x="239" fg:w="2"/><text x="85.9131%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (1 samples, 0.36%)</title><rect x="87.0968%" y="501" width="0.3584%" height="15" fill="rgb(234,31,38)" fg:x="243" fg:w="1"/><text x="87.3468%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (1 samples, 0.36%)</title><rect x="87.0968%" y="485" width="0.3584%" height="15" fill="rgb(221,117,51)" fg:x="243" fg:w="1"/><text x="87.3468%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (1 samples, 0.36%)</title><rect x="87.0968%" y="469" width="0.3584%" height="15" fill="rgb(212,20,18)" fg:x="243" fg:w="1"/><text x="87.3468%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pos (1 samples, 0.36%)</title><rect x="87.0968%" y="453" width="0.3584%" height="15" fill="rgb(245,133,36)" fg:x="243" fg:w="1"/><text x="87.3468%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (4 samples, 1.43%)</title><rect x="86.3799%" y="533" width="1.4337%" height="15" fill="rgb(212,6,19)" fg:x="241" fg:w="4"/><text x="86.6299%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (2 samples, 0.72%)</title><rect x="87.0968%" y="517" width="0.7168%" height="15" fill="rgb(218,1,36)" fg:x="243" fg:w="2"/><text x="87.3468%" y="527.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.36%)</title><rect x="87.4552%" y="501" width="0.3584%" height="15" fill="rgb(246,84,54)" fg:x="244" fg:w="1"/><text x="87.7052%" y="511.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.36%)</title><rect x="87.4552%" y="485" width="0.3584%" height="15" fill="rgb(242,110,6)" fg:x="244" fg:w="1"/><text x="87.7052%" y="495.50"></text></g><g><title>&lt;u32 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.36%)</title><rect x="87.4552%" y="469" width="0.3584%" height="15" fill="rgb(214,47,5)" fg:x="244" fg:w="1"/><text x="87.7052%" y="479.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (17 samples, 6.09%)</title><rect x="82.0789%" y="549" width="6.0932%" height="15" fill="rgb(218,159,25)" fg:x="229" fg:w="17"/><text x="82.3289%" y="559.50">&lt;csgopro..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (1 samples, 0.36%)</title><rect x="87.8136%" y="533" width="0.3584%" height="15" fill="rgb(215,211,28)" fg:x="245" fg:w="1"/><text x="88.0636%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (1 samples, 0.36%)</title><rect x="87.8136%" y="517" width="0.3584%" height="15" fill="rgb(238,59,32)" fg:x="245" fg:w="1"/><text x="88.0636%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.36%)</title><rect x="87.8136%" y="501" width="0.3584%" height="15" fill="rgb(226,82,3)" fg:x="245" fg:w="1"/><text x="88.0636%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.36%)</title><rect x="87.8136%" y="485" width="0.3584%" height="15" fill="rgb(240,164,32)" fg:x="245" fg:w="1"/><text x="88.0636%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.36%)</title><rect x="87.8136%" y="469" width="0.3584%" height="15" fill="rgb(232,46,7)" fg:x="245" fg:w="1"/><text x="88.0636%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.36%)</title><rect x="87.8136%" y="453" width="0.3584%" height="15" fill="rgb(229,129,53)" fg:x="245" fg:w="1"/><text x="88.0636%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.36%)</title><rect x="87.8136%" y="437" width="0.3584%" height="15" fill="rgb(234,188,29)" fg:x="245" fg:w="1"/><text x="88.0636%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.36%)</title><rect x="87.8136%" y="421" width="0.3584%" height="15" fill="rgb(246,141,4)" fg:x="245" fg:w="1"/><text x="88.0636%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.36%)</title><rect x="87.8136%" y="405" width="0.3584%" height="15" fill="rgb(229,23,39)" fg:x="245" fg:w="1"/><text x="88.0636%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.36%)</title><rect x="87.8136%" y="389" width="0.3584%" height="15" fill="rgb(206,12,3)" fg:x="245" fg:w="1"/><text x="88.0636%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (22 samples, 7.89%)</title><rect x="81.0036%" y="581" width="7.8853%" height="15" fill="rgb(252,226,20)" fg:x="226" fg:w="22"/><text x="81.2536%" y="591.50">protobuf::c..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (21 samples, 7.53%)</title><rect x="81.3620%" y="565" width="7.5269%" height="15" fill="rgb(216,123,35)" fg:x="227" fg:w="21"/><text x="81.6120%" y="575.50">protobuf::..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (2 samples, 0.72%)</title><rect x="88.1720%" y="549" width="0.7168%" height="15" fill="rgb(212,68,40)" fg:x="246" fg:w="2"/><text x="88.4220%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (2 samples, 0.72%)</title><rect x="88.1720%" y="533" width="0.7168%" height="15" fill="rgb(254,125,32)" fg:x="246" fg:w="2"/><text x="88.4220%" y="543.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (2 samples, 0.72%)</title><rect x="88.1720%" y="517" width="0.7168%" height="15" fill="rgb(253,97,22)" fg:x="246" fg:w="2"/><text x="88.4220%" y="527.50"></text></g><g><title>&lt;u64 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.36%)</title><rect x="88.5305%" y="501" width="0.3584%" height="15" fill="rgb(241,101,14)" fg:x="247" fg:w="1"/><text x="88.7805%" y="511.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (36 samples, 12.90%)</title><rect x="76.3441%" y="597" width="12.9032%" height="15" fill="rgb(238,103,29)" fg:x="213" fg:w="36"/><text x="76.5941%" y="607.50">&lt;csgoproto::netmess..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.36%)</title><rect x="88.8889%" y="581" width="0.3584%" height="15" fill="rgb(233,195,47)" fg:x="248" fg:w="1"/><text x="89.1389%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.36%)</title><rect x="88.8889%" y="565" width="0.3584%" height="15" fill="rgb(246,218,30)" fg:x="248" fg:w="1"/><text x="89.1389%" y="575.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.36%)</title><rect x="88.8889%" y="549" width="0.3584%" height="15" fill="rgb(219,145,47)" fg:x="248" fg:w="1"/><text x="89.1389%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.36%)</title><rect x="88.8889%" y="533" width="0.3584%" height="15" fill="rgb(243,12,26)" fg:x="248" fg:w="1"/><text x="89.1389%" y="543.50"></text></g><g><title>demoparser::parsing::parser::Demo::parse_cmd (202 samples, 72.40%)</title><rect x="17.2043%" y="661" width="72.4014%" height="15" fill="rgb(214,87,16)" fg:x="48" fg:w="202"/><text x="17.4543%" y="671.50">demoparser::parsing::parser::Demo::parse_cmd</text></g><g><title>demoparser::parsing::parser::Demo::parse_packet (196 samples, 70.25%)</title><rect x="19.3548%" y="645" width="70.2509%" height="15" fill="rgb(208,99,42)" fg:x="54" fg:w="196"/><text x="19.6048%" y="655.50">demoparser::parsing::parser::Demo::parse_packet</text></g><g><title>protobuf::message::Message::parse_from_bytes (81 samples, 29.03%)</title><rect x="60.5735%" y="629" width="29.0323%" height="15" fill="rgb(253,99,2)" fg:x="169" fg:w="81"/><text x="60.8235%" y="639.50">protobuf::message::Message::parse_from_bytes</text></g><g><title>protobuf::message::Message::parse_from (76 samples, 27.24%)</title><rect x="62.3656%" y="613" width="27.2401%" height="15" fill="rgb(220,168,23)" fg:x="174" fg:w="76"/><text x="62.6156%" y="623.50">protobuf::message::Message::parse_from</text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::new (1 samples, 0.36%)</title><rect x="89.2473%" y="597" width="0.3584%" height="15" fill="rgb(242,38,24)" fg:x="249" fg:w="1"/><text x="89.4973%" y="607.50"></text></g><g><title>csgoproto::netmessages::CSVCMsg_GameEvent::new (1 samples, 0.36%)</title><rect x="89.2473%" y="581" width="0.3584%" height="15" fill="rgb(225,182,9)" fg:x="249" fg:w="1"/><text x="89.4973%" y="591.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as core::default::Default&gt;::default (1 samples, 0.36%)</title><rect x="89.2473%" y="565" width="0.3584%" height="15" fill="rgb(243,178,37)" fg:x="249" fg:w="1"/><text x="89.4973%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.36%)</title><rect x="89.2473%" y="549" width="0.3584%" height="15" fill="rgb(232,139,19)" fg:x="249" fg:w="1"/><text x="89.4973%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.36%)</title><rect x="89.2473%" y="533" width="0.3584%" height="15" fill="rgb(225,201,24)" fg:x="249" fg:w="1"/><text x="89.4973%" y="543.50"></text></g><g><title>demoparser::parsing::read_bytes::&lt;impl demoparser::parsing::parser::Demo&gt;::read_byte (22 samples, 7.89%)</title><rect x="89.6057%" y="645" width="7.8853%" height="15" fill="rgb(221,47,46)" fg:x="250" fg:w="22"/><text x="89.8557%" y="655.50">demoparser:..</text></g><g><title>[unknown] (5 samples, 1.79%)</title><rect x="95.6989%" y="629" width="1.7921%" height="15" fill="rgb(249,23,13)" fg:x="267" fg:w="5"/><text x="95.9489%" y="639.50">[..</text></g><g><title>[unknown] (4 samples, 1.43%)</title><rect x="96.0573%" y="613" width="1.4337%" height="15" fill="rgb(219,9,5)" fg:x="268" fg:w="4"/><text x="96.3073%" y="623.50"></text></g><g><title>[unknown] (4 samples, 1.43%)</title><rect x="96.0573%" y="597" width="1.4337%" height="15" fill="rgb(254,171,16)" fg:x="268" fg:w="4"/><text x="96.3073%" y="607.50"></text></g><g><title>[unknown] (4 samples, 1.43%)</title><rect x="96.0573%" y="581" width="1.4337%" height="15" fill="rgb(230,171,20)" fg:x="268" fg:w="4"/><text x="96.3073%" y="591.50"></text></g><g><title>[unknown] (4 samples, 1.43%)</title><rect x="96.0573%" y="565" width="1.4337%" height="15" fill="rgb(210,71,41)" fg:x="268" fg:w="4"/><text x="96.3073%" y="575.50"></text></g><g><title>[unknown] (4 samples, 1.43%)</title><rect x="96.0573%" y="549" width="1.4337%" height="15" fill="rgb(206,173,20)" fg:x="268" fg:w="4"/><text x="96.3073%" y="559.50"></text></g><g><title>[unknown] (4 samples, 1.43%)</title><rect x="96.0573%" y="533" width="1.4337%" height="15" fill="rgb(233,88,34)" fg:x="268" fg:w="4"/><text x="96.3073%" y="543.50"></text></g><g><title>[unknown] (4 samples, 1.43%)</title><rect x="96.0573%" y="517" width="1.4337%" height="15" fill="rgb(223,209,46)" fg:x="268" fg:w="4"/><text x="96.3073%" y="527.50"></text></g><g><title>[unknown] (4 samples, 1.43%)</title><rect x="96.0573%" y="501" width="1.4337%" height="15" fill="rgb(250,43,18)" fg:x="268" fg:w="4"/><text x="96.3073%" y="511.50"></text></g><g><title>[unknown] (4 samples, 1.43%)</title><rect x="96.0573%" y="485" width="1.4337%" height="15" fill="rgb(208,13,10)" fg:x="268" fg:w="4"/><text x="96.3073%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.72%)</title><rect x="96.7742%" y="469" width="0.7168%" height="15" fill="rgb(212,200,36)" fg:x="270" fg:w="2"/><text x="97.0242%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.72%)</title><rect x="96.7742%" y="453" width="0.7168%" height="15" fill="rgb(225,90,30)" fg:x="270" fg:w="2"/><text x="97.0242%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="97.1326%" y="437" width="0.3584%" height="15" fill="rgb(236,182,39)" fg:x="271" fg:w="1"/><text x="97.3826%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="97.1326%" y="421" width="0.3584%" height="15" fill="rgb(212,144,35)" fg:x="271" fg:w="1"/><text x="97.3826%" y="431.50"></text></g><g><title>demoparser::parsing::parser::Demo::start_parsing (248 samples, 88.89%)</title><rect x="8.9606%" y="677" width="88.8889%" height="15" fill="rgb(228,63,44)" fg:x="25" fg:w="248"/><text x="9.2106%" y="687.50">demoparser::parsing::parser::Demo::start_parsing</text></g><g><title>demoparser::parsing::read_bytes::&lt;impl demoparser::parsing::parser::Demo&gt;::read_frame_bytes (23 samples, 8.24%)</title><rect x="89.6057%" y="661" width="8.2437%" height="15" fill="rgb(228,109,6)" fg:x="250" fg:w="23"/><text x="89.8557%" y="671.50">demoparser:..</text></g><g><title>demoparser::parsing::read_bytes::&lt;impl demoparser::parsing::parser::Demo&gt;::read_i32 (1 samples, 0.36%)</title><rect x="97.4910%" y="645" width="0.3584%" height="15" fill="rgb(238,117,24)" fg:x="272" fg:w="1"/><text x="97.7410%" y="655.50"></text></g><g><title>demoparser (274 samples, 98.21%)</title><rect x="0.0000%" y="965" width="98.2079%" height="15" fill="rgb(242,26,26)" fg:x="0" fg:w="274"/><text x="0.2500%" y="975.50">demoparser</text></g><g><title>_start (271 samples, 97.13%)</title><rect x="1.0753%" y="949" width="97.1326%" height="15" fill="rgb(221,92,48)" fg:x="3" fg:w="271"/><text x="1.3253%" y="959.50">_start</text></g><g><title>__libc_start_main_impl (271 samples, 97.13%)</title><rect x="1.0753%" y="933" width="97.1326%" height="15" fill="rgb(209,209,32)" fg:x="3" fg:w="271"/><text x="1.3253%" y="943.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (271 samples, 97.13%)</title><rect x="1.0753%" y="917" width="97.1326%" height="15" fill="rgb(221,70,22)" fg:x="3" fg:w="271"/><text x="1.3253%" y="927.50">__libc_start_call_main</text></g><g><title>main (271 samples, 97.13%)</title><rect x="1.0753%" y="901" width="97.1326%" height="15" fill="rgb(248,145,5)" fg:x="3" fg:w="271"/><text x="1.3253%" y="911.50">main</text></g><g><title>std::rt::lang_start_internal (271 samples, 97.13%)</title><rect x="1.0753%" y="885" width="97.1326%" height="15" fill="rgb(226,116,26)" fg:x="3" fg:w="271"/><text x="1.3253%" y="895.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (271 samples, 97.13%)</title><rect x="1.0753%" y="869" width="97.1326%" height="15" fill="rgb(244,5,17)" fg:x="3" fg:w="271"/><text x="1.3253%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (271 samples, 97.13%)</title><rect x="1.0753%" y="853" width="97.1326%" height="15" fill="rgb(252,159,33)" fg:x="3" fg:w="271"/><text x="1.3253%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (271 samples, 97.13%)</title><rect x="1.0753%" y="837" width="97.1326%" height="15" fill="rgb(206,71,0)" fg:x="3" fg:w="271"/><text x="1.3253%" y="847.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (271 samples, 97.13%)</title><rect x="1.0753%" y="821" width="97.1326%" height="15" fill="rgb(233,118,54)" fg:x="3" fg:w="271"/><text x="1.3253%" y="831.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (271 samples, 97.13%)</title><rect x="1.0753%" y="805" width="97.1326%" height="15" fill="rgb(234,83,48)" fg:x="3" fg:w="271"/><text x="1.3253%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (271 samples, 97.13%)</title><rect x="1.0753%" y="789" width="97.1326%" height="15" fill="rgb(228,3,54)" fg:x="3" fg:w="271"/><text x="1.3253%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (271 samples, 97.13%)</title><rect x="1.0753%" y="773" width="97.1326%" height="15" fill="rgb(226,155,13)" fg:x="3" fg:w="271"/><text x="1.3253%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (271 samples, 97.13%)</title><rect x="1.0753%" y="757" width="97.1326%" height="15" fill="rgb(241,28,37)" fg:x="3" fg:w="271"/><text x="1.3253%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (271 samples, 97.13%)</title><rect x="1.0753%" y="741" width="97.1326%" height="15" fill="rgb(233,93,10)" fg:x="3" fg:w="271"/><text x="1.3253%" y="751.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (271 samples, 97.13%)</title><rect x="1.0753%" y="725" width="97.1326%" height="15" fill="rgb(225,113,19)" fg:x="3" fg:w="271"/><text x="1.3253%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (271 samples, 97.13%)</title><rect x="1.0753%" y="709" width="97.1326%" height="15" fill="rgb(241,2,18)" fg:x="3" fg:w="271"/><text x="1.3253%" y="719.50">core::ops::function::FnOnce::call_once</text></g><g><title>demoparser::main (271 samples, 97.13%)</title><rect x="1.0753%" y="693" width="97.1326%" height="15" fill="rgb(228,207,21)" fg:x="3" fg:w="271"/><text x="1.3253%" y="703.50">demoparser::main</text></g><g><title>std::fs::File::open (1 samples, 0.36%)</title><rect x="97.8495%" y="677" width="0.3584%" height="15" fill="rgb(213,211,35)" fg:x="273" fg:w="1"/><text x="98.0995%" y="687.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.36%)</title><rect x="97.8495%" y="661" width="0.3584%" height="15" fill="rgb(209,83,10)" fg:x="273" fg:w="1"/><text x="98.0995%" y="671.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.36%)</title><rect x="97.8495%" y="645" width="0.3584%" height="15" fill="rgb(209,164,1)" fg:x="273" fg:w="1"/><text x="98.0995%" y="655.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.36%)</title><rect x="97.8495%" y="629" width="0.3584%" height="15" fill="rgb(213,184,43)" fg:x="273" fg:w="1"/><text x="98.0995%" y="639.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.36%)</title><rect x="97.8495%" y="613" width="0.3584%" height="15" fill="rgb(231,61,34)" fg:x="273" fg:w="1"/><text x="98.0995%" y="623.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.36%)</title><rect x="97.8495%" y="597" width="0.3584%" height="15" fill="rgb(235,75,3)" fg:x="273" fg:w="1"/><text x="98.0995%" y="607.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.36%)</title><rect x="97.8495%" y="581" width="0.3584%" height="15" fill="rgb(220,106,47)" fg:x="273" fg:w="1"/><text x="98.0995%" y="591.50"></text></g><g><title>__libc_open64 (1 samples, 0.36%)</title><rect x="97.8495%" y="565" width="0.3584%" height="15" fill="rgb(210,196,33)" fg:x="273" fg:w="1"/><text x="98.0995%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="97.8495%" y="549" width="0.3584%" height="15" fill="rgb(229,154,42)" fg:x="273" fg:w="1"/><text x="98.0995%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="97.8495%" y="533" width="0.3584%" height="15" fill="rgb(228,114,26)" fg:x="273" fg:w="1"/><text x="98.0995%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="97.8495%" y="517" width="0.3584%" height="15" fill="rgb(208,144,1)" fg:x="273" fg:w="1"/><text x="98.0995%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="97.8495%" y="501" width="0.3584%" height="15" fill="rgb(239,112,37)" fg:x="273" fg:w="1"/><text x="98.0995%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="97.8495%" y="485" width="0.3584%" height="15" fill="rgb(210,96,50)" fg:x="273" fg:w="1"/><text x="98.0995%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="97.8495%" y="469" width="0.3584%" height="15" fill="rgb(222,178,2)" fg:x="273" fg:w="1"/><text x="98.0995%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="97.8495%" y="453" width="0.3584%" height="15" fill="rgb(226,74,18)" fg:x="273" fg:w="1"/><text x="98.0995%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="97.8495%" y="437" width="0.3584%" height="15" fill="rgb(225,67,54)" fg:x="273" fg:w="1"/><text x="98.0995%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.36%)</title><rect x="97.8495%" y="421" width="0.3584%" height="15" fill="rgb(251,92,32)" fg:x="273" fg:w="1"/><text x="98.0995%" y="431.50"></text></g><g><title>all (279 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(228,149,22)" fg:x="0" fg:w="279"/><text x="0.2500%" y="991.50"></text></g><g><title>perf-exec (5 samples, 1.79%)</title><rect x="98.2079%" y="965" width="1.7921%" height="15" fill="rgb(243,54,13)" fg:x="274" fg:w="5"/><text x="98.4579%" y="975.50">p..</text></g><g><title>[unknown] (5 samples, 1.79%)</title><rect x="98.2079%" y="949" width="1.7921%" height="15" fill="rgb(243,180,28)" fg:x="274" fg:w="5"/><text x="98.4579%" y="959.50">[..</text></g><g><title>[unknown] (5 samples, 1.79%)</title><rect x="98.2079%" y="933" width="1.7921%" height="15" fill="rgb(208,167,24)" fg:x="274" fg:w="5"/><text x="98.4579%" y="943.50">[..</text></g><g><title>[unknown] (5 samples, 1.79%)</title><rect x="98.2079%" y="917" width="1.7921%" height="15" fill="rgb(245,73,45)" fg:x="274" fg:w="5"/><text x="98.4579%" y="927.50">[..</text></g><g><title>[unknown] (5 samples, 1.79%)</title><rect x="98.2079%" y="901" width="1.7921%" height="15" fill="rgb(237,203,48)" fg:x="274" fg:w="5"/><text x="98.4579%" y="911.50">[..</text></g><g><title>[unknown] (5 samples, 1.79%)</title><rect x="98.2079%" y="885" width="1.7921%" height="15" fill="rgb(211,197,16)" fg:x="274" fg:w="5"/><text x="98.4579%" y="895.50">[..</text></g><g><title>[unknown] (5 samples, 1.79%)</title><rect x="98.2079%" y="869" width="1.7921%" height="15" fill="rgb(243,99,51)" fg:x="274" fg:w="5"/><text x="98.4579%" y="879.50">[..</text></g><g><title>[unknown] (5 samples, 1.79%)</title><rect x="98.2079%" y="853" width="1.7921%" height="15" fill="rgb(215,123,29)" fg:x="274" fg:w="5"/><text x="98.4579%" y="863.50">[..</text></g><g><title>[unknown] (5 samples, 1.79%)</title><rect x="98.2079%" y="837" width="1.7921%" height="15" fill="rgb(239,186,37)" fg:x="274" fg:w="5"/><text x="98.4579%" y="847.50">[..</text></g><g><title>[unknown] (5 samples, 1.79%)</title><rect x="98.2079%" y="821" width="1.7921%" height="15" fill="rgb(252,136,39)" fg:x="274" fg:w="5"/><text x="98.4579%" y="831.50">[..</text></g><g><title>[unknown] (5 samples, 1.79%)</title><rect x="98.2079%" y="805" width="1.7921%" height="15" fill="rgb(223,213,32)" fg:x="274" fg:w="5"/><text x="98.4579%" y="815.50">[..</text></g></svg></svg>