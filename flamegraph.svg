<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="243"><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="1141" width="0.4115%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="1125" width="0.4115%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="1109" width="0.4115%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="1093" width="0.4115%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="1077" width="0.4115%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="1061" width="0.4115%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="1045" width="0.4115%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="1029" width="0.4115%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="1013" width="0.4115%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="997" width="0.4115%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="981" width="0.4115%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="965" width="0.4115%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="949" width="0.4115%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="933" width="0.4115%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="917" width="0.4115%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="901" width="0.4115%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="0.0000%" y="885" width="0.4115%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::stringtables::StringTable&gt;&gt; (5 samples, 2.06%)</title><rect x="0.4115%" y="853" width="2.0576%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="5"/><text x="0.6615%" y="863.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 2.06%)</title><rect x="0.4115%" y="837" width="2.0576%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="5"/><text x="0.6615%" y="847.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::stringtables::StringTable]&gt; (5 samples, 2.06%)</title><rect x="0.4115%" y="821" width="2.0576%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="5"/><text x="0.6615%" y="831.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::stringtables::StringTable&gt; (5 samples, 2.06%)</title><rect x="0.4115%" y="805" width="2.0576%" height="15" fill="rgb(249,33,26)" fg:x="1" fg:w="5"/><text x="0.6615%" y="815.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::stringtables::StField&gt;&gt; (5 samples, 2.06%)</title><rect x="0.4115%" y="789" width="2.0576%" height="15" fill="rgb(235,183,28)" fg:x="1" fg:w="5"/><text x="0.6615%" y="799.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 2.06%)</title><rect x="0.4115%" y="773" width="2.0576%" height="15" fill="rgb(221,5,38)" fg:x="1" fg:w="5"/><text x="0.6615%" y="783.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::stringtables::StField]&gt; (5 samples, 2.06%)</title><rect x="0.4115%" y="757" width="2.0576%" height="15" fill="rgb(247,18,42)" fg:x="1" fg:w="5"/><text x="0.6615%" y="767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::stringtables::StField&gt; (5 samples, 2.06%)</title><rect x="0.4115%" y="741" width="2.0576%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="5"/><text x="0.6615%" y="751.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 2.06%)</title><rect x="0.4115%" y="725" width="2.0576%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="5"/><text x="0.6615%" y="735.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 2.06%)</title><rect x="0.4115%" y="709" width="2.0576%" height="15" fill="rgb(225,111,53)" fg:x="1" fg:w="5"/><text x="0.6615%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 2.06%)</title><rect x="0.4115%" y="693" width="2.0576%" height="15" fill="rgb(238,160,17)" fg:x="1" fg:w="5"/><text x="0.6615%" y="703.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 2.06%)</title><rect x="0.4115%" y="677" width="2.0576%" height="15" fill="rgb(214,148,48)" fg:x="1" fg:w="5"/><text x="0.6615%" y="687.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 2.06%)</title><rect x="0.4115%" y="661" width="2.0576%" height="15" fill="rgb(232,36,49)" fg:x="1" fg:w="5"/><text x="0.6615%" y="671.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Demo&gt; (11 samples, 4.53%)</title><rect x="0.4115%" y="869" width="4.5267%" height="15" fill="rgb(209,103,24)" fg:x="1" fg:w="11"/><text x="0.6615%" y="879.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::variants::BytesVariant&gt; (6 samples, 2.47%)</title><rect x="2.4691%" y="853" width="2.4691%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="6"/><text x="2.7191%" y="863.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;memmap::Mmap&gt; (6 samples, 2.47%)</title><rect x="2.4691%" y="837" width="2.4691%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="6"/><text x="2.7191%" y="847.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;memmap::unix::MmapInner&gt; (6 samples, 2.47%)</title><rect x="2.4691%" y="821" width="2.4691%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="6"/><text x="2.7191%" y="831.50">co..</text></g><g><title>&lt;memmap::unix::MmapInner as core::ops::drop::Drop&gt;::drop (6 samples, 2.47%)</title><rect x="2.4691%" y="805" width="2.4691%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="6"/><text x="2.7191%" y="815.50">&lt;m..</text></g><g><title>__GI___munmap (6 samples, 2.47%)</title><rect x="2.4691%" y="789" width="2.4691%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="6"/><text x="2.7191%" y="799.50">__..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="2.4691%" y="773" width="2.4691%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="6"/><text x="2.7191%" y="783.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="2.4691%" y="757" width="2.4691%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="6"/><text x="2.7191%" y="767.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="2.4691%" y="741" width="2.4691%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="6"/><text x="2.7191%" y="751.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="2.4691%" y="725" width="2.4691%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="6"/><text x="2.7191%" y="735.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="2.4691%" y="709" width="2.4691%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="6"/><text x="2.7191%" y="719.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="2.4691%" y="693" width="2.4691%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="6"/><text x="2.7191%" y="703.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="2.4691%" y="677" width="2.4691%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="6"/><text x="2.7191%" y="687.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="2.4691%" y="661" width="2.4691%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="6"/><text x="2.7191%" y="671.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="2.4691%" y="645" width="2.4691%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="6"/><text x="2.7191%" y="655.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="2.4691%" y="629" width="2.4691%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="6"/><text x="2.7191%" y="639.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="2.4691%" y="613" width="2.4691%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="6"/><text x="2.7191%" y="623.50">[u..</text></g><g><title>[unknown] (4 samples, 1.65%)</title><rect x="3.2922%" y="597" width="1.6461%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="4"/><text x="3.5422%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="4.1152%" y="581" width="0.8230%" height="15" fill="rgb(239,60,40)" fg:x="10" fg:w="2"/><text x="4.3652%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="4.5267%" y="565" width="0.4115%" height="15" fill="rgb(206,27,48)" fg:x="11" fg:w="1"/><text x="4.7767%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="4.5267%" y="549" width="0.4115%" height="15" fill="rgb(225,35,8)" fg:x="11" fg:w="1"/><text x="4.7767%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="4.5267%" y="533" width="0.4115%" height="15" fill="rgb(250,213,24)" fg:x="11" fg:w="1"/><text x="4.7767%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="4.5267%" y="517" width="0.4115%" height="15" fill="rgb(247,123,22)" fg:x="11" fg:w="1"/><text x="4.7767%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.41%)</title><rect x="4.9383%" y="853" width="0.4115%" height="15" fill="rgb(231,138,38)" fg:x="12" fg:w="1"/><text x="5.1883%" y="863.50"></text></g><g><title>core::ptr::write (1 samples, 0.41%)</title><rect x="4.9383%" y="837" width="0.4115%" height="15" fill="rgb(231,145,46)" fg:x="12" fg:w="1"/><text x="5.1883%" y="847.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as core::clone::Clone&gt;::clone (1 samples, 0.41%)</title><rect x="5.3498%" y="821" width="0.4115%" height="15" fill="rgb(251,118,11)" fg:x="13" fg:w="1"/><text x="5.5998%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.41%)</title><rect x="5.3498%" y="805" width="0.4115%" height="15" fill="rgb(217,147,25)" fg:x="13" fg:w="1"/><text x="5.5998%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.41%)</title><rect x="5.3498%" y="789" width="0.4115%" height="15" fill="rgb(247,81,37)" fg:x="13" fg:w="1"/><text x="5.5998%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.41%)</title><rect x="5.3498%" y="773" width="0.4115%" height="15" fill="rgb(209,12,38)" fg:x="13" fg:w="1"/><text x="5.5998%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.41%)</title><rect x="5.3498%" y="757" width="0.4115%" height="15" fill="rgb(227,1,9)" fg:x="13" fg:w="1"/><text x="5.5998%" y="767.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as core::clone::Clone&gt;::clone (1 samples, 0.41%)</title><rect x="5.3498%" y="741" width="0.4115%" height="15" fill="rgb(248,47,43)" fg:x="13" fg:w="1"/><text x="5.5998%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.41%)</title><rect x="5.3498%" y="725" width="0.4115%" height="15" fill="rgb(221,10,30)" fg:x="13" fg:w="1"/><text x="5.5998%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.41%)</title><rect x="5.3498%" y="709" width="0.4115%" height="15" fill="rgb(210,229,1)" fg:x="13" fg:w="1"/><text x="5.5998%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.41%)</title><rect x="5.3498%" y="693" width="0.4115%" height="15" fill="rgb(222,148,37)" fg:x="13" fg:w="1"/><text x="5.5998%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.41%)</title><rect x="5.3498%" y="677" width="0.4115%" height="15" fill="rgb(234,67,33)" fg:x="13" fg:w="1"/><text x="5.5998%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.41%)</title><rect x="5.3498%" y="661" width="0.4115%" height="15" fill="rgb(247,98,35)" fg:x="13" fg:w="1"/><text x="5.5998%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.41%)</title><rect x="5.3498%" y="645" width="0.4115%" height="15" fill="rgb(247,138,52)" fg:x="13" fg:w="1"/><text x="5.5998%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.41%)</title><rect x="5.3498%" y="629" width="0.4115%" height="15" fill="rgb(213,79,30)" fg:x="13" fg:w="1"/><text x="5.5998%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.41%)</title><rect x="5.3498%" y="613" width="0.4115%" height="15" fill="rgb(246,177,23)" fg:x="13" fg:w="1"/><text x="5.5998%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.41%)</title><rect x="5.3498%" y="597" width="0.4115%" height="15" fill="rgb(230,62,27)" fg:x="13" fg:w="1"/><text x="5.5998%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.41%)</title><rect x="5.7613%" y="773" width="0.4115%" height="15" fill="rgb(216,154,8)" fg:x="14" fg:w="1"/><text x="6.0113%" y="783.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (3 samples, 1.23%)</title><rect x="5.7613%" y="821" width="1.2346%" height="15" fill="rgb(244,35,45)" fg:x="14" fg:w="3"/><text x="6.0113%" y="831.50"></text></g><g><title>protobuf::message::Message::parse_from (3 samples, 1.23%)</title><rect x="5.7613%" y="805" width="1.2346%" height="15" fill="rgb(251,115,12)" fg:x="14" fg:w="3"/><text x="6.0113%" y="815.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as protobuf::message::Message&gt;::merge_from (3 samples, 1.23%)</title><rect x="5.7613%" y="789" width="1.2346%" height="15" fill="rgb(240,54,50)" fg:x="14" fg:w="3"/><text x="6.0113%" y="799.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (2 samples, 0.82%)</title><rect x="6.1728%" y="773" width="0.8230%" height="15" fill="rgb(233,84,52)" fg:x="15" fg:w="2"/><text x="6.4228%" y="783.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (2 samples, 0.82%)</title><rect x="6.1728%" y="757" width="0.8230%" height="15" fill="rgb(207,117,47)" fg:x="15" fg:w="2"/><text x="6.4228%" y="767.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message::Message&gt;::merge_from (2 samples, 0.82%)</title><rect x="6.1728%" y="741" width="0.8230%" height="15" fill="rgb(249,43,39)" fg:x="15" fg:w="2"/><text x="6.4228%" y="751.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (2 samples, 0.82%)</title><rect x="6.1728%" y="725" width="0.8230%" height="15" fill="rgb(209,38,44)" fg:x="15" fg:w="2"/><text x="6.4228%" y="735.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.41%)</title><rect x="6.5844%" y="709" width="0.4115%" height="15" fill="rgb(236,212,23)" fg:x="16" fg:w="1"/><text x="6.8344%" y="719.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Demo&gt;::parse_datatable (5 samples, 2.06%)</title><rect x="5.3498%" y="837" width="2.0576%" height="15" fill="rgb(242,79,21)" fg:x="13" fg:w="5"/><text x="5.5998%" y="847.50">d..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.41%)</title><rect x="6.9959%" y="821" width="0.4115%" height="15" fill="rgb(211,96,35)" fg:x="17" fg:w="1"/><text x="7.2459%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.41%)</title><rect x="9.8765%" y="789" width="0.4115%" height="15" fill="rgb(253,215,40)" fg:x="24" fg:w="1"/><text x="10.1265%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.41%)</title><rect x="9.8765%" y="773" width="0.4115%" height="15" fill="rgb(211,81,21)" fg:x="24" fg:w="1"/><text x="10.1265%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.41%)</title><rect x="9.8765%" y="757" width="0.4115%" height="15" fill="rgb(208,190,38)" fg:x="24" fg:w="1"/><text x="10.1265%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.41%)</title><rect x="9.8765%" y="741" width="0.4115%" height="15" fill="rgb(235,213,38)" fg:x="24" fg:w="1"/><text x="10.1265%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.82%)</title><rect x="9.8765%" y="821" width="0.8230%" height="15" fill="rgb(237,122,38)" fg:x="24" fg:w="2"/><text x="10.1265%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.82%)</title><rect x="9.8765%" y="805" width="0.8230%" height="15" fill="rgb(244,218,35)" fg:x="24" fg:w="2"/><text x="10.1265%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;demoparser::parsing::game_events::GameEvent&gt;&gt; (1 samples, 0.41%)</title><rect x="10.2881%" y="789" width="0.4115%" height="15" fill="rgb(240,68,47)" fg:x="25" fg:w="1"/><text x="10.5381%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (3 samples, 1.23%)</title><rect x="10.6996%" y="805" width="1.2346%" height="15" fill="rgb(210,16,53)" fg:x="26" fg:w="3"/><text x="10.9496%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 1.23%)</title><rect x="10.6996%" y="789" width="1.2346%" height="15" fill="rgb(235,124,12)" fg:x="26" fg:w="3"/><text x="10.9496%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 1.23%)</title><rect x="10.6996%" y="773" width="1.2346%" height="15" fill="rgb(224,169,11)" fg:x="26" fg:w="3"/><text x="10.9496%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 1.23%)</title><rect x="10.6996%" y="757" width="1.2346%" height="15" fill="rgb(250,166,2)" fg:x="26" fg:w="3"/><text x="10.9496%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 1.23%)</title><rect x="10.6996%" y="741" width="1.2346%" height="15" fill="rgb(242,216,29)" fg:x="26" fg:w="3"/><text x="10.9496%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 1.23%)</title><rect x="10.6996%" y="725" width="1.2346%" height="15" fill="rgb(230,116,27)" fg:x="26" fg:w="3"/><text x="10.9496%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 1.23%)</title><rect x="10.6996%" y="709" width="1.2346%" height="15" fill="rgb(228,99,48)" fg:x="26" fg:w="3"/><text x="10.9496%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.41%)</title><rect x="11.5226%" y="693" width="0.4115%" height="15" fill="rgb(253,11,6)" fg:x="28" fg:w="1"/><text x="11.7726%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.41%)</title><rect x="11.5226%" y="677" width="0.4115%" height="15" fill="rgb(247,143,39)" fg:x="28" fg:w="1"/><text x="11.7726%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.41%)</title><rect x="11.9342%" y="773" width="0.4115%" height="15" fill="rgb(236,97,10)" fg:x="29" fg:w="1"/><text x="12.1842%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[csgoproto::netmessages::csvcmsg_game_event::Key_t]&gt; (1 samples, 0.41%)</title><rect x="11.9342%" y="757" width="0.4115%" height="15" fill="rgb(233,208,19)" fg:x="29" fg:w="1"/><text x="12.1842%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t&gt; (1 samples, 0.41%)</title><rect x="11.9342%" y="741" width="0.4115%" height="15" fill="rgb(216,164,2)" fg:x="29" fg:w="1"/><text x="12.1842%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;protobuf::special::SpecialFields&gt; (1 samples, 0.41%)</title><rect x="11.9342%" y="725" width="0.4115%" height="15" fill="rgb(220,129,5)" fg:x="29" fg:w="1"/><text x="12.1842%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;protobuf::unknown::UnknownFields&gt; (1 samples, 0.41%)</title><rect x="11.9342%" y="709" width="0.4115%" height="15" fill="rgb(242,17,10)" fg:x="29" fg:w="1"/><text x="12.1842%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;u32,protobuf::unknown::UnknownValues,core::hash::BuildHasherDefault&lt;std::collections::hash::map::DefaultHasher&gt;&gt;&gt;&gt;&gt; (1 samples, 0.41%)</title><rect x="11.9342%" y="693" width="0.4115%" height="15" fill="rgb(242,107,0)" fg:x="29" fg:w="1"/><text x="12.1842%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="677" width="0.4115%" height="15" fill="rgb(251,28,31)" fg:x="29" fg:w="1"/><text x="12.1842%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="661" width="0.4115%" height="15" fill="rgb(233,223,10)" fg:x="29" fg:w="1"/><text x="12.1842%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="645" width="0.4115%" height="15" fill="rgb(215,21,27)" fg:x="29" fg:w="1"/><text x="12.1842%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="629" width="0.4115%" height="15" fill="rgb(232,23,21)" fg:x="29" fg:w="1"/><text x="12.1842%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="613" width="0.4115%" height="15" fill="rgb(244,5,23)" fg:x="29" fg:w="1"/><text x="12.1842%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="597" width="0.4115%" height="15" fill="rgb(226,81,46)" fg:x="29" fg:w="1"/><text x="12.1842%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="581" width="0.4115%" height="15" fill="rgb(247,70,30)" fg:x="29" fg:w="1"/><text x="12.1842%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="565" width="0.4115%" height="15" fill="rgb(212,68,19)" fg:x="29" fg:w="1"/><text x="12.1842%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="549" width="0.4115%" height="15" fill="rgb(240,187,13)" fg:x="29" fg:w="1"/><text x="12.1842%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="533" width="0.4115%" height="15" fill="rgb(223,113,26)" fg:x="29" fg:w="1"/><text x="12.1842%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="517" width="0.4115%" height="15" fill="rgb(206,192,2)" fg:x="29" fg:w="1"/><text x="12.1842%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="501" width="0.4115%" height="15" fill="rgb(241,108,4)" fg:x="29" fg:w="1"/><text x="12.1842%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="485" width="0.4115%" height="15" fill="rgb(247,173,49)" fg:x="29" fg:w="1"/><text x="12.1842%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="469" width="0.4115%" height="15" fill="rgb(224,114,35)" fg:x="29" fg:w="1"/><text x="12.1842%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="453" width="0.4115%" height="15" fill="rgb(245,159,27)" fg:x="29" fg:w="1"/><text x="12.1842%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="437" width="0.4115%" height="15" fill="rgb(245,172,44)" fg:x="29" fg:w="1"/><text x="12.1842%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="11.9342%" y="421" width="0.4115%" height="15" fill="rgb(236,23,11)" fg:x="29" fg:w="1"/><text x="12.1842%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_GameEvent&gt; (2 samples, 0.82%)</title><rect x="11.9342%" y="805" width="0.8230%" height="15" fill="rgb(205,117,38)" fg:x="29" fg:w="2"/><text x="12.1842%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t&gt;&gt; (2 samples, 0.82%)</title><rect x="11.9342%" y="789" width="0.8230%" height="15" fill="rgb(237,72,25)" fg:x="29" fg:w="2"/><text x="12.1842%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t&gt;&gt; (1 samples, 0.41%)</title><rect x="12.3457%" y="773" width="0.4115%" height="15" fill="rgb(244,70,9)" fg:x="30" fg:w="1"/><text x="12.5957%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.41%)</title><rect x="12.3457%" y="757" width="0.4115%" height="15" fill="rgb(217,125,39)" fg:x="30" fg:w="1"/><text x="12.5957%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.41%)</title><rect x="12.3457%" y="741" width="0.4115%" height="15" fill="rgb(235,36,10)" fg:x="30" fg:w="1"/><text x="12.5957%" y="751.50"></text></g><g><title>_mi_segment_page_alloc (1 samples, 0.41%)</title><rect x="12.7572%" y="549" width="0.4115%" height="15" fill="rgb(251,123,47)" fg:x="31" fg:w="1"/><text x="13.0072%" y="559.50"></text></g><g><title>demoparser::parsing::game_events::gen_name_val_pairs (2 samples, 0.82%)</title><rect x="12.7572%" y="805" width="0.8230%" height="15" fill="rgb(221,13,13)" fg:x="31" fg:w="2"/><text x="13.0072%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.82%)</title><rect x="12.7572%" y="789" width="0.8230%" height="15" fill="rgb(238,131,9)" fg:x="31" fg:w="2"/><text x="13.0072%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.82%)</title><rect x="12.7572%" y="773" width="0.8230%" height="15" fill="rgb(211,50,8)" fg:x="31" fg:w="2"/><text x="13.0072%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.82%)</title><rect x="12.7572%" y="757" width="0.8230%" height="15" fill="rgb(245,182,24)" fg:x="31" fg:w="2"/><text x="13.0072%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.82%)</title><rect x="12.7572%" y="741" width="0.8230%" height="15" fill="rgb(242,14,37)" fg:x="31" fg:w="2"/><text x="13.0072%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.82%)</title><rect x="12.7572%" y="725" width="0.8230%" height="15" fill="rgb(246,228,12)" fg:x="31" fg:w="2"/><text x="13.0072%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.82%)</title><rect x="12.7572%" y="709" width="0.8230%" height="15" fill="rgb(213,55,15)" fg:x="31" fg:w="2"/><text x="13.0072%" y="719.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.82%)</title><rect x="12.7572%" y="693" width="0.8230%" height="15" fill="rgb(209,9,3)" fg:x="31" fg:w="2"/><text x="13.0072%" y="703.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.82%)</title><rect x="12.7572%" y="677" width="0.8230%" height="15" fill="rgb(230,59,30)" fg:x="31" fg:w="2"/><text x="13.0072%" y="687.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.82%)</title><rect x="12.7572%" y="661" width="0.8230%" height="15" fill="rgb(209,121,21)" fg:x="31" fg:w="2"/><text x="13.0072%" y="671.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.82%)</title><rect x="12.7572%" y="645" width="0.8230%" height="15" fill="rgb(220,109,13)" fg:x="31" fg:w="2"/><text x="13.0072%" y="655.50"></text></g><g><title>mi_find_page (2 samples, 0.82%)</title><rect x="12.7572%" y="629" width="0.8230%" height="15" fill="rgb(232,18,1)" fg:x="31" fg:w="2"/><text x="13.0072%" y="639.50"></text></g><g><title>mi_find_free_page (2 samples, 0.82%)</title><rect x="12.7572%" y="613" width="0.8230%" height="15" fill="rgb(215,41,42)" fg:x="31" fg:w="2"/><text x="13.0072%" y="623.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.82%)</title><rect x="12.7572%" y="597" width="0.8230%" height="15" fill="rgb(224,123,36)" fg:x="31" fg:w="2"/><text x="13.0072%" y="607.50"></text></g><g><title>mi_page_fresh (2 samples, 0.82%)</title><rect x="12.7572%" y="581" width="0.8230%" height="15" fill="rgb(240,125,3)" fg:x="31" fg:w="2"/><text x="13.0072%" y="591.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.82%)</title><rect x="12.7572%" y="565" width="0.8230%" height="15" fill="rgb(205,98,50)" fg:x="31" fg:w="2"/><text x="13.0072%" y="575.50"></text></g><g><title>mi_page_init (1 samples, 0.41%)</title><rect x="13.1687%" y="549" width="0.4115%" height="15" fill="rgb(205,185,37)" fg:x="32" fg:w="1"/><text x="13.4187%" y="559.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.41%)</title><rect x="13.1687%" y="533" width="0.4115%" height="15" fill="rgb(238,207,15)" fg:x="32" fg:w="1"/><text x="13.4187%" y="543.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.41%)</title><rect x="13.1687%" y="517" width="0.4115%" height="15" fill="rgb(213,199,42)" fg:x="32" fg:w="1"/><text x="13.4187%" y="527.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.41%)</title><rect x="13.1687%" y="501" width="0.4115%" height="15" fill="rgb(235,201,11)" fg:x="32" fg:w="1"/><text x="13.4187%" y="511.50"></text></g><g><title>demoparser::parsing::game_events::&lt;impl demoparser::parsing::parser::Demo&gt;::parse_game_events (8 samples, 3.29%)</title><rect x="10.6996%" y="821" width="3.2922%" height="15" fill="rgb(207,46,11)" fg:x="26" fg:w="8"/><text x="10.9496%" y="831.50">dem..</text></g><g><title>demoparser::parsing::game_events::match_data_to_game_event (1 samples, 0.41%)</title><rect x="13.5802%" y="805" width="0.4115%" height="15" fill="rgb(241,35,35)" fg:x="33" fg:w="1"/><text x="13.8302%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (1 samples, 0.41%)</title><rect x="13.5802%" y="789" width="0.4115%" height="15" fill="rgb(243,32,47)" fg:x="33" fg:w="1"/><text x="13.8302%" y="799.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::is_contained_in (1 samples, 0.41%)</title><rect x="13.5802%" y="773" width="0.4115%" height="15" fill="rgb(247,202,23)" fg:x="33" fg:w="1"/><text x="13.8302%" y="783.50"></text></g><g><title>core::str::pattern::Pattern::is_contained_in (1 samples, 0.41%)</title><rect x="13.5802%" y="757" width="0.4115%" height="15" fill="rgb(219,102,11)" fg:x="33" fg:w="1"/><text x="13.8302%" y="767.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.41%)</title><rect x="13.5802%" y="741" width="0.4115%" height="15" fill="rgb(243,110,44)" fg:x="33" fg:w="1"/><text x="13.8302%" y="751.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.41%)</title><rect x="13.5802%" y="725" width="0.4115%" height="15" fill="rgb(222,74,54)" fg:x="33" fg:w="1"/><text x="13.8302%" y="735.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.41%)</title><rect x="13.5802%" y="709" width="0.4115%" height="15" fill="rgb(216,99,12)" fg:x="33" fg:w="1"/><text x="13.8302%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.41%)</title><rect x="13.5802%" y="693" width="0.4115%" height="15" fill="rgb(226,22,26)" fg:x="33" fg:w="1"/><text x="13.8302%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.41%)</title><rect x="13.5802%" y="677" width="0.4115%" height="15" fill="rgb(217,163,10)" fg:x="33" fg:w="1"/><text x="13.8302%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.41%)</title><rect x="13.5802%" y="661" width="0.4115%" height="15" fill="rgb(213,25,53)" fg:x="33" fg:w="1"/><text x="13.8302%" y="671.50"></text></g><g><title>demoparser::parsing::read_bytes::&lt;impl demoparser::parsing::parser::Demo&gt;::read_i32 (11 samples, 4.53%)</title><rect x="13.9918%" y="821" width="4.5267%" height="15" fill="rgb(252,105,26)" fg:x="34" fg:w="11"/><text x="14.2418%" y="831.50">demop..</text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (8 samples, 3.29%)</title><rect x="15.2263%" y="805" width="3.2922%" height="15" fill="rgb(220,39,43)" fg:x="37" fg:w="8"/><text x="15.4763%" y="815.50">&lt;T ..</text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (8 samples, 3.29%)</title><rect x="15.2263%" y="789" width="3.2922%" height="15" fill="rgb(229,68,48)" fg:x="37" fg:w="8"/><text x="15.4763%" y="799.50">cor..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (8 samples, 3.29%)</title><rect x="15.2263%" y="773" width="3.2922%" height="15" fill="rgb(252,8,32)" fg:x="37" fg:w="8"/><text x="15.4763%" y="783.50">cor..</text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (8 samples, 3.29%)</title><rect x="15.2263%" y="757" width="3.2922%" height="15" fill="rgb(223,20,43)" fg:x="37" fg:w="8"/><text x="15.4763%" y="767.50">cor..</text></g><g><title>[unknown] (8 samples, 3.29%)</title><rect x="15.2263%" y="741" width="3.2922%" height="15" fill="rgb(229,81,49)" fg:x="37" fg:w="8"/><text x="15.4763%" y="751.50">[un..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="725" width="2.8807%" height="15" fill="rgb(236,28,36)" fg:x="38" fg:w="7"/><text x="15.8879%" y="735.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="709" width="2.8807%" height="15" fill="rgb(249,185,26)" fg:x="38" fg:w="7"/><text x="15.8879%" y="719.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="693" width="2.8807%" height="15" fill="rgb(249,174,33)" fg:x="38" fg:w="7"/><text x="15.8879%" y="703.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="677" width="2.8807%" height="15" fill="rgb(233,201,37)" fg:x="38" fg:w="7"/><text x="15.8879%" y="687.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="661" width="2.8807%" height="15" fill="rgb(221,78,26)" fg:x="38" fg:w="7"/><text x="15.8879%" y="671.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="645" width="2.8807%" height="15" fill="rgb(250,127,30)" fg:x="38" fg:w="7"/><text x="15.8879%" y="655.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="629" width="2.8807%" height="15" fill="rgb(230,49,44)" fg:x="38" fg:w="7"/><text x="15.8879%" y="639.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="613" width="2.8807%" height="15" fill="rgb(229,67,23)" fg:x="38" fg:w="7"/><text x="15.8879%" y="623.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="597" width="2.8807%" height="15" fill="rgb(249,83,47)" fg:x="38" fg:w="7"/><text x="15.8879%" y="607.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="581" width="2.8807%" height="15" fill="rgb(215,43,3)" fg:x="38" fg:w="7"/><text x="15.8879%" y="591.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="565" width="2.8807%" height="15" fill="rgb(238,154,13)" fg:x="38" fg:w="7"/><text x="15.8879%" y="575.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="549" width="2.8807%" height="15" fill="rgb(219,56,2)" fg:x="38" fg:w="7"/><text x="15.8879%" y="559.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="533" width="2.8807%" height="15" fill="rgb(233,0,4)" fg:x="38" fg:w="7"/><text x="15.8879%" y="543.50">[u..</text></g><g><title>[unknown] (7 samples, 2.88%)</title><rect x="15.6379%" y="517" width="2.8807%" height="15" fill="rgb(235,30,7)" fg:x="38" fg:w="7"/><text x="15.8879%" y="527.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="16.0494%" y="501" width="2.4691%" height="15" fill="rgb(250,79,13)" fg:x="39" fg:w="6"/><text x="16.2994%" y="511.50">[u..</text></g><g><title>[unknown] (4 samples, 1.65%)</title><rect x="16.8724%" y="485" width="1.6461%" height="15" fill="rgb(211,146,34)" fg:x="41" fg:w="4"/><text x="17.1224%" y="495.50"></text></g><g><title>[unknown] (4 samples, 1.65%)</title><rect x="16.8724%" y="469" width="1.6461%" height="15" fill="rgb(228,22,38)" fg:x="41" fg:w="4"/><text x="17.1224%" y="479.50"></text></g><g><title>&lt;demoparser::parsing::variants::BytesVariant as core::ops::index::Index&lt;Idx&gt;&gt;::index (1 samples, 0.41%)</title><rect x="24.2798%" y="805" width="0.4115%" height="15" fill="rgb(235,168,5)" fg:x="59" fg:w="1"/><text x="24.5298%" y="815.50"></text></g><g><title>demoparser::parsing::read_bytes::&lt;impl demoparser::parsing::parser::Demo&gt;::read_varint (27 samples, 11.11%)</title><rect x="18.5185%" y="821" width="11.1111%" height="15" fill="rgb(221,155,16)" fg:x="45" fg:w="27"/><text x="18.7685%" y="831.50">demoparser::pars..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="24.6914%" y="805" width="4.9383%" height="15" fill="rgb(215,215,53)" fg:x="60" fg:w="12"/><text x="24.9414%" y="815.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="24.6914%" y="789" width="4.9383%" height="15" fill="rgb(223,4,10)" fg:x="60" fg:w="12"/><text x="24.9414%" y="799.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="24.6914%" y="773" width="4.9383%" height="15" fill="rgb(234,103,6)" fg:x="60" fg:w="12"/><text x="24.9414%" y="783.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="24.6914%" y="757" width="4.9383%" height="15" fill="rgb(227,97,0)" fg:x="60" fg:w="12"/><text x="24.9414%" y="767.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="24.6914%" y="741" width="4.9383%" height="15" fill="rgb(234,150,53)" fg:x="60" fg:w="12"/><text x="24.9414%" y="751.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="24.6914%" y="725" width="4.9383%" height="15" fill="rgb(228,201,54)" fg:x="60" fg:w="12"/><text x="24.9414%" y="735.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="24.6914%" y="709" width="4.9383%" height="15" fill="rgb(222,22,37)" fg:x="60" fg:w="12"/><text x="24.9414%" y="719.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="24.6914%" y="693" width="4.9383%" height="15" fill="rgb(237,53,32)" fg:x="60" fg:w="12"/><text x="24.9414%" y="703.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="24.6914%" y="677" width="4.9383%" height="15" fill="rgb(233,25,53)" fg:x="60" fg:w="12"/><text x="24.9414%" y="687.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="24.6914%" y="661" width="4.9383%" height="15" fill="rgb(210,40,34)" fg:x="60" fg:w="12"/><text x="24.9414%" y="671.50">[unkno..</text></g><g><title>[unknown] (11 samples, 4.53%)</title><rect x="25.1029%" y="645" width="4.5267%" height="15" fill="rgb(241,220,44)" fg:x="61" fg:w="11"/><text x="25.3529%" y="655.50">[unkn..</text></g><g><title>[unknown] (10 samples, 4.12%)</title><rect x="25.5144%" y="629" width="4.1152%" height="15" fill="rgb(235,28,35)" fg:x="62" fg:w="10"/><text x="25.7644%" y="639.50">[unk..</text></g><g><title>[unknown] (10 samples, 4.12%)</title><rect x="25.5144%" y="613" width="4.1152%" height="15" fill="rgb(210,56,17)" fg:x="62" fg:w="10"/><text x="25.7644%" y="623.50">[unk..</text></g><g><title>[unknown] (10 samples, 4.12%)</title><rect x="25.5144%" y="597" width="4.1152%" height="15" fill="rgb(224,130,29)" fg:x="62" fg:w="10"/><text x="25.7644%" y="607.50">[unk..</text></g><g><title>[unknown] (10 samples, 4.12%)</title><rect x="25.5144%" y="581" width="4.1152%" height="15" fill="rgb(235,212,8)" fg:x="62" fg:w="10"/><text x="25.7644%" y="591.50">[unk..</text></g><g><title>[unknown] (10 samples, 4.12%)</title><rect x="25.5144%" y="565" width="4.1152%" height="15" fill="rgb(223,33,50)" fg:x="62" fg:w="10"/><text x="25.7644%" y="575.50">[unk..</text></g><g><title>[unknown] (10 samples, 4.12%)</title><rect x="25.5144%" y="549" width="4.1152%" height="15" fill="rgb(219,149,13)" fg:x="62" fg:w="10"/><text x="25.7644%" y="559.50">[unk..</text></g><g><title>[unknown] (8 samples, 3.29%)</title><rect x="26.3374%" y="533" width="3.2922%" height="15" fill="rgb(250,156,29)" fg:x="64" fg:w="8"/><text x="26.5874%" y="543.50">[un..</text></g><g><title>[unknown] (3 samples, 1.23%)</title><rect x="28.3951%" y="517" width="1.2346%" height="15" fill="rgb(216,193,19)" fg:x="69" fg:w="3"/><text x="28.6451%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="28.8066%" y="501" width="0.8230%" height="15" fill="rgb(216,135,14)" fg:x="70" fg:w="2"/><text x="29.0566%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="28.8066%" y="485" width="0.8230%" height="15" fill="rgb(241,47,5)" fg:x="70" fg:w="2"/><text x="29.0566%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="28.8066%" y="469" width="0.8230%" height="15" fill="rgb(233,42,35)" fg:x="70" fg:w="2"/><text x="29.0566%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="28.8066%" y="453" width="0.8230%" height="15" fill="rgb(231,13,6)" fg:x="70" fg:w="2"/><text x="29.0566%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="29.2181%" y="437" width="0.4115%" height="15" fill="rgb(207,181,40)" fg:x="71" fg:w="1"/><text x="29.4681%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="29.2181%" y="421" width="0.4115%" height="15" fill="rgb(254,173,49)" fg:x="71" fg:w="1"/><text x="29.4681%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="29.2181%" y="405" width="0.4115%" height="15" fill="rgb(221,1,38)" fg:x="71" fg:w="1"/><text x="29.4681%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="29.2181%" y="389" width="0.4115%" height="15" fill="rgb(206,124,46)" fg:x="71" fg:w="1"/><text x="29.4681%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="29.2181%" y="373" width="0.4115%" height="15" fill="rgb(249,21,11)" fg:x="71" fg:w="1"/><text x="29.4681%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="29.2181%" y="357" width="0.4115%" height="15" fill="rgb(222,201,40)" fg:x="71" fg:w="1"/><text x="29.4681%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="29.2181%" y="341" width="0.4115%" height="15" fill="rgb(235,61,29)" fg:x="71" fg:w="1"/><text x="29.4681%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="29.2181%" y="325" width="0.4115%" height="15" fill="rgb(219,207,3)" fg:x="71" fg:w="1"/><text x="29.4681%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.23%)</title><rect x="29.6296%" y="725" width="1.2346%" height="15" fill="rgb(222,56,46)" fg:x="72" fg:w="3"/><text x="29.8796%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.82%)</title><rect x="31.6872%" y="629" width="0.8230%" height="15" fill="rgb(239,76,54)" fg:x="77" fg:w="2"/><text x="31.9372%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.82%)</title><rect x="31.6872%" y="613" width="0.8230%" height="15" fill="rgb(231,124,27)" fg:x="77" fg:w="2"/><text x="31.9372%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.82%)</title><rect x="31.6872%" y="597" width="0.8230%" height="15" fill="rgb(249,195,6)" fg:x="77" fg:w="2"/><text x="31.9372%" y="607.50"></text></g><g><title>&lt;demoparser::parsing::stringtables::StField as core::clone::Clone&gt;::clone (5 samples, 2.06%)</title><rect x="30.8642%" y="725" width="2.0576%" height="15" fill="rgb(237,174,47)" fg:x="75" fg:w="5"/><text x="31.1142%" y="735.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 2.06%)</title><rect x="30.8642%" y="709" width="2.0576%" height="15" fill="rgb(206,201,31)" fg:x="75" fg:w="5"/><text x="31.1142%" y="719.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 1.23%)</title><rect x="31.6872%" y="693" width="1.2346%" height="15" fill="rgb(231,57,52)" fg:x="77" fg:w="3"/><text x="31.9372%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 1.23%)</title><rect x="31.6872%" y="677" width="1.2346%" height="15" fill="rgb(248,177,22)" fg:x="77" fg:w="3"/><text x="31.9372%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 1.23%)</title><rect x="31.6872%" y="661" width="1.2346%" height="15" fill="rgb(215,211,37)" fg:x="77" fg:w="3"/><text x="31.9372%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 1.23%)</title><rect x="31.6872%" y="645" width="1.2346%" height="15" fill="rgb(241,128,51)" fg:x="77" fg:w="3"/><text x="31.9372%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.41%)</title><rect x="32.5103%" y="629" width="0.4115%" height="15" fill="rgb(227,165,31)" fg:x="79" fg:w="1"/><text x="32.7603%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.41%)</title><rect x="32.5103%" y="613" width="0.4115%" height="15" fill="rgb(228,167,24)" fg:x="79" fg:w="1"/><text x="32.7603%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.41%)</title><rect x="32.5103%" y="597" width="0.4115%" height="15" fill="rgb(228,143,12)" fg:x="79" fg:w="1"/><text x="32.7603%" y="607.50"></text></g><g><title>&lt;demoparser::parsing::stringtables::StringTable as core::clone::Clone&gt;::clone (31 samples, 12.76%)</title><rect x="29.6296%" y="805" width="12.7572%" height="15" fill="rgb(249,149,8)" fg:x="72" fg:w="31"/><text x="29.8796%" y="815.50">&lt;demoparser::parsin..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 12.76%)</title><rect x="29.6296%" y="789" width="12.7572%" height="15" fill="rgb(243,35,44)" fg:x="72" fg:w="31"/><text x="29.8796%" y="799.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 12.76%)</title><rect x="29.6296%" y="773" width="12.7572%" height="15" fill="rgb(246,89,9)" fg:x="72" fg:w="31"/><text x="29.8796%" y="783.50">alloc::slice::&lt;impl..</text></g><g><title>alloc::slice::hack::to_vec (31 samples, 12.76%)</title><rect x="29.6296%" y="757" width="12.7572%" height="15" fill="rgb(233,213,13)" fg:x="72" fg:w="31"/><text x="29.8796%" y="767.50">alloc::slice::hack:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 12.76%)</title><rect x="29.6296%" y="741" width="12.7572%" height="15" fill="rgb(233,141,41)" fg:x="72" fg:w="31"/><text x="29.8796%" y="751.50">&lt;T as alloc::slice:..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (23 samples, 9.47%)</title><rect x="32.9218%" y="725" width="9.4650%" height="15" fill="rgb(239,167,4)" fg:x="80" fg:w="23"/><text x="33.1718%" y="735.50">core::mem::may..</text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="41.5638%" y="709" width="0.8230%" height="15" fill="rgb(209,217,16)" fg:x="101" fg:w="2"/><text x="41.8138%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="41.5638%" y="693" width="0.8230%" height="15" fill="rgb(219,88,35)" fg:x="101" fg:w="2"/><text x="41.8138%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="41.5638%" y="677" width="0.8230%" height="15" fill="rgb(220,193,23)" fg:x="101" fg:w="2"/><text x="41.8138%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="41.5638%" y="661" width="0.8230%" height="15" fill="rgb(230,90,52)" fg:x="101" fg:w="2"/><text x="41.8138%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="41.5638%" y="645" width="0.8230%" height="15" fill="rgb(252,106,19)" fg:x="101" fg:w="2"/><text x="41.8138%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="41.5638%" y="629" width="0.8230%" height="15" fill="rgb(206,74,20)" fg:x="101" fg:w="2"/><text x="41.8138%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="41.5638%" y="613" width="0.8230%" height="15" fill="rgb(230,138,44)" fg:x="101" fg:w="2"/><text x="41.8138%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="41.5638%" y="597" width="0.8230%" height="15" fill="rgb(235,182,43)" fg:x="101" fg:w="2"/><text x="41.8138%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="41.5638%" y="581" width="0.8230%" height="15" fill="rgb(242,16,51)" fg:x="101" fg:w="2"/><text x="41.8138%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="41.9753%" y="565" width="0.4115%" height="15" fill="rgb(248,9,4)" fg:x="102" fg:w="1"/><text x="42.2253%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="41.9753%" y="549" width="0.4115%" height="15" fill="rgb(210,31,22)" fg:x="102" fg:w="1"/><text x="42.2253%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 2.47%)</title><rect x="42.7984%" y="789" width="2.4691%" height="15" fill="rgb(239,54,39)" fg:x="104" fg:w="6"/><text x="43.0484%" y="799.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 2.47%)</title><rect x="42.7984%" y="773" width="2.4691%" height="15" fill="rgb(230,99,41)" fg:x="104" fg:w="6"/><text x="43.0484%" y="783.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 2.47%)</title><rect x="42.7984%" y="757" width="2.4691%" height="15" fill="rgb(253,106,12)" fg:x="104" fg:w="6"/><text x="43.0484%" y="767.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 2.47%)</title><rect x="42.7984%" y="741" width="2.4691%" height="15" fill="rgb(213,46,41)" fg:x="104" fg:w="6"/><text x="43.0484%" y="751.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 2.47%)</title><rect x="42.7984%" y="725" width="2.4691%" height="15" fill="rgb(215,133,35)" fg:x="104" fg:w="6"/><text x="43.0484%" y="735.50">al..</text></g><g><title>alloc::alloc::realloc (6 samples, 2.47%)</title><rect x="42.7984%" y="709" width="2.4691%" height="15" fill="rgb(213,28,5)" fg:x="104" fg:w="6"/><text x="43.0484%" y="719.50">al..</text></g><g><title>_mi_heap_realloc_zero (6 samples, 2.47%)</title><rect x="42.7984%" y="693" width="2.4691%" height="15" fill="rgb(215,77,49)" fg:x="104" fg:w="6"/><text x="43.0484%" y="703.50">_m..</text></g><g><title>_mi_memcpy_aligned (6 samples, 2.47%)</title><rect x="42.7984%" y="677" width="2.4691%" height="15" fill="rgb(248,100,22)" fg:x="104" fg:w="6"/><text x="43.0484%" y="687.50">_m..</text></g><g><title>_mi_memcpy (6 samples, 2.47%)</title><rect x="42.7984%" y="661" width="2.4691%" height="15" fill="rgb(208,67,9)" fg:x="104" fg:w="6"/><text x="43.0484%" y="671.50">_m..</text></g><g><title>memcpy (6 samples, 2.47%)</title><rect x="42.7984%" y="645" width="2.4691%" height="15" fill="rgb(219,133,21)" fg:x="104" fg:w="6"/><text x="43.0484%" y="655.50">me..</text></g><g><title>[libc.so.6] (6 samples, 2.47%)</title><rect x="42.7984%" y="629" width="2.4691%" height="15" fill="rgb(246,46,29)" fg:x="104" fg:w="6"/><text x="43.0484%" y="639.50">[l..</text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.8560%" y="613" width="0.4115%" height="15" fill="rgb(246,185,52)" fg:x="109" fg:w="1"/><text x="45.1060%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.8560%" y="597" width="0.4115%" height="15" fill="rgb(252,136,11)" fg:x="109" fg:w="1"/><text x="45.1060%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.8560%" y="581" width="0.4115%" height="15" fill="rgb(219,138,53)" fg:x="109" fg:w="1"/><text x="45.1060%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.8560%" y="565" width="0.4115%" height="15" fill="rgb(211,51,23)" fg:x="109" fg:w="1"/><text x="45.1060%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.8560%" y="549" width="0.4115%" height="15" fill="rgb(247,221,28)" fg:x="109" fg:w="1"/><text x="45.1060%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.8560%" y="533" width="0.4115%" height="15" fill="rgb(251,222,45)" fg:x="109" fg:w="1"/><text x="45.1060%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.8560%" y="517" width="0.4115%" height="15" fill="rgb(217,162,53)" fg:x="109" fg:w="1"/><text x="45.1060%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 4.12%)</title><rect x="42.3868%" y="805" width="4.1152%" height="15" fill="rgb(229,93,14)" fg:x="103" fg:w="10"/><text x="42.6368%" y="815.50">allo..</text></g><g><title>core::ptr::write (3 samples, 1.23%)</title><rect x="45.2675%" y="789" width="1.2346%" height="15" fill="rgb(209,67,49)" fg:x="110" fg:w="3"/><text x="45.5175%" y="799.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.41%)</title><rect x="46.5021%" y="805" width="0.4115%" height="15" fill="rgb(213,87,29)" fg:x="113" fg:w="1"/><text x="46.7521%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.41%)</title><rect x="46.5021%" y="789" width="0.4115%" height="15" fill="rgb(205,151,52)" fg:x="113" fg:w="1"/><text x="46.7521%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.41%)</title><rect x="46.5021%" y="773" width="0.4115%" height="15" fill="rgb(253,215,39)" fg:x="113" fg:w="1"/><text x="46.7521%" y="783.50"></text></g><g><title>demoparser::parsing::stringtables::&lt;impl demoparser::parsing::parser::Demo&gt;::create_string_table (43 samples, 17.70%)</title><rect x="29.6296%" y="821" width="17.6955%" height="15" fill="rgb(221,220,41)" fg:x="72" fg:w="43"/><text x="29.8796%" y="831.50">demoparser::parsing::string..</text></g><g><title>demoparser::parsing::stringtables::&lt;impl demoparser::parsing::parser::Demo&gt;::update_string_table (1 samples, 0.41%)</title><rect x="46.9136%" y="805" width="0.4115%" height="15" fill="rgb(218,133,21)" fg:x="114" fg:w="1"/><text x="47.1636%" y="815.50"></text></g><g><title>demoparser::parsing::read_bits_old::BitReader&lt;R&gt;::read_string_lossy (1 samples, 0.41%)</title><rect x="46.9136%" y="789" width="0.4115%" height="15" fill="rgb(221,193,43)" fg:x="114" fg:w="1"/><text x="47.1636%" y="799.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.41%)</title><rect x="46.9136%" y="773" width="0.4115%" height="15" fill="rgb(240,128,52)" fg:x="114" fg:w="1"/><text x="47.1636%" y="783.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.41%)</title><rect x="46.9136%" y="757" width="0.4115%" height="15" fill="rgb(253,114,12)" fg:x="114" fg:w="1"/><text x="47.1636%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.41%)</title><rect x="46.9136%" y="741" width="0.4115%" height="15" fill="rgb(215,223,47)" fg:x="114" fg:w="1"/><text x="47.1636%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.41%)</title><rect x="46.9136%" y="725" width="0.4115%" height="15" fill="rgb(248,225,23)" fg:x="114" fg:w="1"/><text x="47.1636%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.41%)</title><rect x="46.9136%" y="709" width="0.4115%" height="15" fill="rgb(250,108,0)" fg:x="114" fg:w="1"/><text x="47.1636%" y="719.50"></text></g><g><title>demoparser::parsing::stringtables::&lt;impl demoparser::parsing::parser::Demo&gt;::update_string_table_msg (1 samples, 0.41%)</title><rect x="47.3251%" y="821" width="0.4115%" height="15" fill="rgb(228,208,7)" fg:x="115" fg:w="1"/><text x="47.5751%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_UpdateStringTable&gt; (1 samples, 0.41%)</title><rect x="47.3251%" y="805" width="0.4115%" height="15" fill="rgb(244,45,10)" fg:x="115" fg:w="1"/><text x="47.5751%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (1 samples, 0.41%)</title><rect x="47.3251%" y="789" width="0.4115%" height="15" fill="rgb(207,125,25)" fg:x="115" fg:w="1"/><text x="47.5751%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.41%)</title><rect x="47.3251%" y="773" width="0.4115%" height="15" fill="rgb(210,195,18)" fg:x="115" fg:w="1"/><text x="47.5751%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.41%)</title><rect x="47.3251%" y="757" width="0.4115%" height="15" fill="rgb(249,80,12)" fg:x="115" fg:w="1"/><text x="47.5751%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.41%)</title><rect x="47.3251%" y="741" width="0.4115%" height="15" fill="rgb(221,65,9)" fg:x="115" fg:w="1"/><text x="47.5751%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.41%)</title><rect x="47.3251%" y="725" width="0.4115%" height="15" fill="rgb(235,49,36)" fg:x="115" fg:w="1"/><text x="47.5751%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.41%)</title><rect x="47.3251%" y="709" width="0.4115%" height="15" fill="rgb(225,32,20)" fg:x="115" fg:w="1"/><text x="47.5751%" y="719.50"></text></g><g><title>mi_free (1 samples, 0.41%)</title><rect x="47.3251%" y="693" width="0.4115%" height="15" fill="rgb(215,141,46)" fg:x="115" fg:w="1"/><text x="47.5751%" y="703.50"></text></g><g><title>&lt;protobuf::coded_input_stream::buf_read_iter::BufReadIter as core::ops::drop::Drop&gt;::drop (1 samples, 0.41%)</title><rect x="47.7366%" y="805" width="0.4115%" height="15" fill="rgb(250,160,47)" fg:x="116" fg:w="1"/><text x="47.9866%" y="815.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::check_eof (3 samples, 1.23%)</title><rect x="48.1481%" y="805" width="1.2346%" height="15" fill="rgb(216,222,40)" fg:x="117" fg:w="3"/><text x="48.3981%" y="815.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (3 samples, 1.23%)</title><rect x="48.1481%" y="789" width="1.2346%" height="15" fill="rgb(234,217,39)" fg:x="117" fg:w="3"/><text x="48.3981%" y="799.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (3 samples, 1.23%)</title><rect x="48.1481%" y="773" width="1.2346%" height="15" fill="rgb(207,178,40)" fg:x="117" fg:w="3"/><text x="48.3981%" y="783.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (2 samples, 0.82%)</title><rect x="48.5597%" y="757" width="0.8230%" height="15" fill="rgb(221,136,13)" fg:x="118" fg:w="2"/><text x="48.8097%" y="767.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (1 samples, 0.41%)</title><rect x="48.9712%" y="741" width="0.4115%" height="15" fill="rgb(249,199,10)" fg:x="119" fg:w="1"/><text x="49.2212%" y="751.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.41%)</title><rect x="48.9712%" y="725" width="0.4115%" height="15" fill="rgb(249,222,13)" fg:x="119" fg:w="1"/><text x="49.2212%" y="735.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.41%)</title><rect x="48.9712%" y="709" width="0.4115%" height="15" fill="rgb(244,185,38)" fg:x="119" fg:w="1"/><text x="49.2212%" y="719.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.41%)</title><rect x="48.9712%" y="693" width="0.4115%" height="15" fill="rgb(236,202,9)" fg:x="119" fg:w="1"/><text x="49.2212%" y="703.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (1 samples, 0.41%)</title><rect x="48.9712%" y="677" width="0.4115%" height="15" fill="rgb(250,229,37)" fg:x="119" fg:w="1"/><text x="49.2212%" y="687.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (1 samples, 0.41%)</title><rect x="48.9712%" y="661" width="0.4115%" height="15" fill="rgb(206,174,23)" fg:x="119" fg:w="1"/><text x="49.2212%" y="671.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (1 samples, 0.41%)</title><rect x="48.9712%" y="645" width="0.4115%" height="15" fill="rgb(211,33,43)" fg:x="119" fg:w="1"/><text x="49.2212%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.41%)</title><rect x="48.9712%" y="629" width="0.4115%" height="15" fill="rgb(245,58,50)" fg:x="119" fg:w="1"/><text x="49.2212%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.41%)</title><rect x="48.9712%" y="613" width="0.4115%" height="15" fill="rgb(244,68,36)" fg:x="119" fg:w="1"/><text x="49.2212%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.41%)</title><rect x="48.9712%" y="597" width="0.4115%" height="15" fill="rgb(232,229,15)" fg:x="119" fg:w="1"/><text x="49.2212%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="48.9712%" y="581" width="0.4115%" height="15" fill="rgb(254,30,23)" fg:x="119" fg:w="1"/><text x="49.2212%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.41%)</title><rect x="50.6173%" y="773" width="0.4115%" height="15" fill="rgb(235,160,14)" fg:x="123" fg:w="1"/><text x="50.8673%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.41%)</title><rect x="51.4403%" y="741" width="0.4115%" height="15" fill="rgb(212,155,44)" fg:x="125" fg:w="1"/><text x="51.6903%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.41%)</title><rect x="52.6749%" y="645" width="0.4115%" height="15" fill="rgb(226,2,50)" fg:x="128" fg:w="1"/><text x="52.9249%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (5 samples, 2.06%)</title><rect x="52.6749%" y="709" width="2.0576%" height="15" fill="rgb(234,177,6)" fg:x="128" fg:w="5"/><text x="52.9249%" y="719.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (5 samples, 2.06%)</title><rect x="52.6749%" y="693" width="2.0576%" height="15" fill="rgb(217,24,9)" fg:x="128" fg:w="5"/><text x="52.9249%" y="703.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (5 samples, 2.06%)</title><rect x="52.6749%" y="677" width="2.0576%" height="15" fill="rgb(220,13,46)" fg:x="128" fg:w="5"/><text x="52.9249%" y="687.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (5 samples, 2.06%)</title><rect x="52.6749%" y="661" width="2.0576%" height="15" fill="rgb(239,221,27)" fg:x="128" fg:w="5"/><text x="52.9249%" y="671.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 1.65%)</title><rect x="53.0864%" y="645" width="1.6461%" height="15" fill="rgb(222,198,25)" fg:x="129" fg:w="4"/><text x="53.3364%" y="655.50"></text></g><g><title>mi_malloc (3 samples, 1.23%)</title><rect x="53.4979%" y="629" width="1.2346%" height="15" fill="rgb(211,99,13)" fg:x="130" fg:w="3"/><text x="53.7479%" y="639.50"></text></g><g><title>mi_heap_malloc (3 samples, 1.23%)</title><rect x="53.4979%" y="613" width="1.2346%" height="15" fill="rgb(232,111,31)" fg:x="130" fg:w="3"/><text x="53.7479%" y="623.50"></text></g><g><title>mi_heap_malloc_small (3 samples, 1.23%)</title><rect x="53.4979%" y="597" width="1.2346%" height="15" fill="rgb(245,82,37)" fg:x="130" fg:w="3"/><text x="53.7479%" y="607.50"></text></g><g><title>_mi_page_malloc (3 samples, 1.23%)</title><rect x="53.4979%" y="581" width="1.2346%" height="15" fill="rgb(227,149,46)" fg:x="130" fg:w="3"/><text x="53.7479%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (31 samples, 12.76%)</title><rect x="51.0288%" y="773" width="12.7572%" height="15" fill="rgb(218,36,50)" fg:x="124" fg:w="31"/><text x="51.2788%" y="783.50">protobuf::coded_inp..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (30 samples, 12.35%)</title><rect x="51.4403%" y="757" width="12.3457%" height="15" fill="rgb(226,80,48)" fg:x="125" fg:w="30"/><text x="51.6903%" y="767.50">protobuf::coded_in..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (29 samples, 11.93%)</title><rect x="51.8519%" y="741" width="11.9342%" height="15" fill="rgb(238,224,15)" fg:x="126" fg:w="29"/><text x="52.1019%" y="751.50">protobuf::coded_in..</text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (29 samples, 11.93%)</title><rect x="51.8519%" y="725" width="11.9342%" height="15" fill="rgb(241,136,10)" fg:x="126" fg:w="29"/><text x="52.1019%" y="735.50">protobuf::coded_in..</text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (22 samples, 9.05%)</title><rect x="54.7325%" y="709" width="9.0535%" height="15" fill="rgb(208,32,45)" fg:x="133" fg:w="22"/><text x="54.9825%" y="719.50">protobuf::cod..</text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (22 samples, 9.05%)</title><rect x="54.7325%" y="693" width="9.0535%" height="15" fill="rgb(207,135,9)" fg:x="133" fg:w="22"/><text x="54.9825%" y="703.50">protobuf::cod..</text></g><g><title>protobuf::misc::maybe_uninit_write_slice (21 samples, 8.64%)</title><rect x="55.1440%" y="677" width="8.6420%" height="15" fill="rgb(206,86,44)" fg:x="134" fg:w="21"/><text x="55.3940%" y="687.50">protobuf::mi..</text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (21 samples, 8.64%)</title><rect x="55.1440%" y="661" width="8.6420%" height="15" fill="rgb(245,177,15)" fg:x="134" fg:w="21"/><text x="55.3940%" y="671.50">core::slice:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 8.64%)</title><rect x="55.1440%" y="645" width="8.6420%" height="15" fill="rgb(206,64,50)" fg:x="134" fg:w="21"/><text x="55.3940%" y="655.50">core::intrin..</text></g><g><title>[libc.so.6] (21 samples, 8.64%)</title><rect x="55.1440%" y="629" width="8.6420%" height="15" fill="rgb(234,36,40)" fg:x="134" fg:w="21"/><text x="55.3940%" y="639.50">[libc.so.6]</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="58.4362%" y="613" width="5.3498%" height="15" fill="rgb(213,64,8)" fg:x="142" fg:w="13"/><text x="58.6862%" y="623.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="58.4362%" y="597" width="5.3498%" height="15" fill="rgb(210,75,36)" fg:x="142" fg:w="13"/><text x="58.6862%" y="607.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="58.4362%" y="581" width="5.3498%" height="15" fill="rgb(229,88,21)" fg:x="142" fg:w="13"/><text x="58.6862%" y="591.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="58.4362%" y="565" width="5.3498%" height="15" fill="rgb(252,204,47)" fg:x="142" fg:w="13"/><text x="58.6862%" y="575.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="58.4362%" y="549" width="5.3498%" height="15" fill="rgb(208,77,27)" fg:x="142" fg:w="13"/><text x="58.6862%" y="559.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="58.4362%" y="533" width="5.3498%" height="15" fill="rgb(221,76,26)" fg:x="142" fg:w="13"/><text x="58.6862%" y="543.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="58.4362%" y="517" width="5.3498%" height="15" fill="rgb(225,139,18)" fg:x="142" fg:w="13"/><text x="58.6862%" y="527.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="58.4362%" y="501" width="5.3498%" height="15" fill="rgb(230,137,11)" fg:x="142" fg:w="13"/><text x="58.6862%" y="511.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="58.4362%" y="485" width="5.3498%" height="15" fill="rgb(212,28,1)" fg:x="142" fg:w="13"/><text x="58.6862%" y="495.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="58.4362%" y="469" width="5.3498%" height="15" fill="rgb(248,164,17)" fg:x="142" fg:w="13"/><text x="58.6862%" y="479.50">[unknow..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="58.8477%" y="453" width="4.9383%" height="15" fill="rgb(222,171,42)" fg:x="143" fg:w="12"/><text x="59.0977%" y="463.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="58.8477%" y="437" width="4.9383%" height="15" fill="rgb(243,84,45)" fg:x="143" fg:w="12"/><text x="59.0977%" y="447.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="58.8477%" y="421" width="4.9383%" height="15" fill="rgb(252,49,23)" fg:x="143" fg:w="12"/><text x="59.0977%" y="431.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="58.8477%" y="405" width="4.9383%" height="15" fill="rgb(215,19,7)" fg:x="143" fg:w="12"/><text x="59.0977%" y="415.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="58.8477%" y="389" width="4.9383%" height="15" fill="rgb(238,81,41)" fg:x="143" fg:w="12"/><text x="59.0977%" y="399.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="58.8477%" y="373" width="4.9383%" height="15" fill="rgb(210,199,37)" fg:x="143" fg:w="12"/><text x="59.0977%" y="383.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="58.8477%" y="357" width="4.9383%" height="15" fill="rgb(244,192,49)" fg:x="143" fg:w="12"/><text x="59.0977%" y="367.50">[unkno..</text></g><g><title>[unknown] (11 samples, 4.53%)</title><rect x="59.2593%" y="341" width="4.5267%" height="15" fill="rgb(226,211,11)" fg:x="144" fg:w="11"/><text x="59.5093%" y="351.50">[unkn..</text></g><g><title>[unknown] (4 samples, 1.65%)</title><rect x="62.1399%" y="325" width="1.6461%" height="15" fill="rgb(236,162,54)" fg:x="151" fg:w="4"/><text x="62.3899%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="62.9630%" y="309" width="0.8230%" height="15" fill="rgb(220,229,9)" fg:x="153" fg:w="2"/><text x="63.2130%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="62.9630%" y="293" width="0.8230%" height="15" fill="rgb(250,87,22)" fg:x="153" fg:w="2"/><text x="63.2130%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="62.9630%" y="277" width="0.8230%" height="15" fill="rgb(239,43,17)" fg:x="153" fg:w="2"/><text x="63.2130%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="62.9630%" y="261" width="0.8230%" height="15" fill="rgb(231,177,25)" fg:x="153" fg:w="2"/><text x="63.2130%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="62.9630%" y="245" width="0.8230%" height="15" fill="rgb(219,179,1)" fg:x="153" fg:w="2"/><text x="63.2130%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="62.9630%" y="229" width="0.8230%" height="15" fill="rgb(238,219,53)" fg:x="153" fg:w="2"/><text x="63.2130%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="63.3745%" y="213" width="0.4115%" height="15" fill="rgb(232,167,36)" fg:x="154" fg:w="1"/><text x="63.6245%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="63.3745%" y="197" width="0.4115%" height="15" fill="rgb(244,19,51)" fg:x="154" fg:w="1"/><text x="63.6245%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="63.3745%" y="181" width="0.4115%" height="15" fill="rgb(224,6,22)" fg:x="154" fg:w="1"/><text x="63.6245%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="63.3745%" y="165" width="0.4115%" height="15" fill="rgb(224,145,5)" fg:x="154" fg:w="1"/><text x="63.6245%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="63.3745%" y="149" width="0.4115%" height="15" fill="rgb(234,130,49)" fg:x="154" fg:w="1"/><text x="63.6245%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="63.3745%" y="133" width="0.4115%" height="15" fill="rgb(254,6,2)" fg:x="154" fg:w="1"/><text x="63.6245%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="63.3745%" y="117" width="0.4115%" height="15" fill="rgb(208,96,46)" fg:x="154" fg:w="1"/><text x="63.6245%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="63.3745%" y="101" width="0.4115%" height="15" fill="rgb(239,3,39)" fg:x="154" fg:w="1"/><text x="63.6245%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="63.3745%" y="85" width="0.4115%" height="15" fill="rgb(233,210,1)" fg:x="154" fg:w="1"/><text x="63.6245%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="63.3745%" y="69" width="0.4115%" height="15" fill="rgb(244,137,37)" fg:x="154" fg:w="1"/><text x="63.6245%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="63.3745%" y="53" width="0.4115%" height="15" fill="rgb(240,136,2)" fg:x="154" fg:w="1"/><text x="63.6245%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="63.3745%" y="37" width="0.4115%" height="15" fill="rgb(239,18,37)" fg:x="154" fg:w="1"/><text x="63.6245%" y="47.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;i64&gt; for i32&gt;::try_from (3 samples, 1.23%)</title><rect x="64.1975%" y="757" width="1.2346%" height="15" fill="rgb(218,185,22)" fg:x="156" fg:w="3"/><text x="64.4475%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="65.0206%" y="741" width="0.4115%" height="15" fill="rgb(225,218,4)" fg:x="158" fg:w="1"/><text x="65.2706%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="65.0206%" y="725" width="0.4115%" height="15" fill="rgb(230,182,32)" fg:x="158" fg:w="1"/><text x="65.2706%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="65.0206%" y="709" width="0.4115%" height="15" fill="rgb(242,56,43)" fg:x="158" fg:w="1"/><text x="65.2706%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="65.0206%" y="693" width="0.4115%" height="15" fill="rgb(233,99,24)" fg:x="158" fg:w="1"/><text x="65.2706%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="65.0206%" y="677" width="0.4115%" height="15" fill="rgb(234,209,42)" fg:x="158" fg:w="1"/><text x="65.2706%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="65.0206%" y="661" width="0.4115%" height="15" fill="rgb(227,7,12)" fg:x="158" fg:w="1"/><text x="65.2706%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="65.0206%" y="645" width="0.4115%" height="15" fill="rgb(245,203,43)" fg:x="158" fg:w="1"/><text x="65.2706%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="65.0206%" y="629" width="0.4115%" height="15" fill="rgb(238,205,33)" fg:x="158" fg:w="1"/><text x="65.2706%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="65.0206%" y="613" width="0.4115%" height="15" fill="rgb(231,56,7)" fg:x="158" fg:w="1"/><text x="65.2706%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="65.0206%" y="597" width="0.4115%" height="15" fill="rgb(244,186,29)" fg:x="158" fg:w="1"/><text x="65.2706%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="65.0206%" y="581" width="0.4115%" height="15" fill="rgb(234,111,31)" fg:x="158" fg:w="1"/><text x="65.2706%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="65.0206%" y="565" width="0.4115%" height="15" fill="rgb(241,149,10)" fg:x="158" fg:w="1"/><text x="65.2706%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (7 samples, 2.88%)</title><rect x="63.7860%" y="773" width="2.8807%" height="15" fill="rgb(249,206,44)" fg:x="155" fg:w="7"/><text x="64.0360%" y="783.50">pr..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (3 samples, 1.23%)</title><rect x="65.4321%" y="757" width="1.2346%" height="15" fill="rgb(251,153,30)" fg:x="159" fg:w="3"/><text x="65.6821%" y="767.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (3 samples, 1.23%)</title><rect x="65.4321%" y="741" width="1.2346%" height="15" fill="rgb(239,152,38)" fg:x="159" fg:w="3"/><text x="65.6821%" y="751.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.41%)</title><rect x="66.2551%" y="725" width="0.4115%" height="15" fill="rgb(249,139,47)" fg:x="161" fg:w="1"/><text x="66.5051%" y="735.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.41%)</title><rect x="66.2551%" y="709" width="0.4115%" height="15" fill="rgb(244,64,35)" fg:x="161" fg:w="1"/><text x="66.5051%" y="719.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (2 samples, 0.82%)</title><rect x="66.6667%" y="741" width="0.8230%" height="15" fill="rgb(216,46,15)" fg:x="162" fg:w="2"/><text x="66.9167%" y="751.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (2 samples, 0.82%)</title><rect x="66.6667%" y="725" width="0.8230%" height="15" fill="rgb(250,74,19)" fg:x="162" fg:w="2"/><text x="66.9167%" y="735.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (2 samples, 0.82%)</title><rect x="66.6667%" y="709" width="0.8230%" height="15" fill="rgb(249,42,33)" fg:x="162" fg:w="2"/><text x="66.9167%" y="719.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf_slow (2 samples, 0.82%)</title><rect x="66.6667%" y="693" width="0.8230%" height="15" fill="rgb(242,149,17)" fg:x="162" fg:w="2"/><text x="66.9167%" y="703.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pos (2 samples, 0.82%)</title><rect x="66.6667%" y="677" width="0.8230%" height="15" fill="rgb(244,29,21)" fg:x="162" fg:w="2"/><text x="66.9167%" y="687.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::pos_within_buf (2 samples, 0.82%)</title><rect x="66.6667%" y="661" width="0.8230%" height="15" fill="rgb(220,130,37)" fg:x="162" fg:w="2"/><text x="66.9167%" y="671.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_EntityMsg as protobuf::message::Message&gt;::merge_from (47 samples, 19.34%)</title><rect x="49.7942%" y="789" width="19.3416%" height="15" fill="rgb(211,67,2)" fg:x="121" fg:w="47"/><text x="50.0442%" y="799.50">&lt;csgoproto::netmessages::CSVCM..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (6 samples, 2.47%)</title><rect x="66.6667%" y="773" width="2.4691%" height="15" fill="rgb(235,68,52)" fg:x="162" fg:w="6"/><text x="66.9167%" y="783.50">pr..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (6 samples, 2.47%)</title><rect x="66.6667%" y="757" width="2.4691%" height="15" fill="rgb(246,142,3)" fg:x="162" fg:w="6"/><text x="66.9167%" y="767.50">pr..</text></g><g><title>protobuf::varint::decode::decode_varint32 (4 samples, 1.65%)</title><rect x="67.4897%" y="741" width="1.6461%" height="15" fill="rgb(241,25,7)" fg:x="164" fg:w="4"/><text x="67.7397%" y="751.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (4 samples, 1.65%)</title><rect x="67.4897%" y="725" width="1.6461%" height="15" fill="rgb(242,119,39)" fg:x="164" fg:w="4"/><text x="67.7397%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 1.65%)</title><rect x="69.1358%" y="773" width="1.6461%" height="15" fill="rgb(241,98,45)" fg:x="168" fg:w="4"/><text x="69.3858%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="757" width="0.4115%" height="15" fill="rgb(254,28,30)" fg:x="171" fg:w="1"/><text x="70.6204%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="741" width="0.4115%" height="15" fill="rgb(241,142,54)" fg:x="171" fg:w="1"/><text x="70.6204%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="725" width="0.4115%" height="15" fill="rgb(222,85,15)" fg:x="171" fg:w="1"/><text x="70.6204%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="709" width="0.4115%" height="15" fill="rgb(210,85,47)" fg:x="171" fg:w="1"/><text x="70.6204%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="693" width="0.4115%" height="15" fill="rgb(224,206,25)" fg:x="171" fg:w="1"/><text x="70.6204%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="677" width="0.4115%" height="15" fill="rgb(243,201,19)" fg:x="171" fg:w="1"/><text x="70.6204%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="661" width="0.4115%" height="15" fill="rgb(236,59,4)" fg:x="171" fg:w="1"/><text x="70.6204%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="645" width="0.4115%" height="15" fill="rgb(254,179,45)" fg:x="171" fg:w="1"/><text x="70.6204%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="629" width="0.4115%" height="15" fill="rgb(226,14,10)" fg:x="171" fg:w="1"/><text x="70.6204%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="613" width="0.4115%" height="15" fill="rgb(244,27,41)" fg:x="171" fg:w="1"/><text x="70.6204%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="597" width="0.4115%" height="15" fill="rgb(235,35,32)" fg:x="171" fg:w="1"/><text x="70.6204%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="581" width="0.4115%" height="15" fill="rgb(218,68,31)" fg:x="171" fg:w="1"/><text x="70.6204%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="565" width="0.4115%" height="15" fill="rgb(207,120,37)" fg:x="171" fg:w="1"/><text x="70.6204%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="549" width="0.4115%" height="15" fill="rgb(227,98,0)" fg:x="171" fg:w="1"/><text x="70.6204%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="533" width="0.4115%" height="15" fill="rgb(207,7,3)" fg:x="171" fg:w="1"/><text x="70.6204%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="517" width="0.4115%" height="15" fill="rgb(206,98,19)" fg:x="171" fg:w="1"/><text x="70.6204%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="70.3704%" y="501" width="0.4115%" height="15" fill="rgb(217,5,26)" fg:x="171" fg:w="1"/><text x="70.6204%" y="511.50"></text></g><g><title>_mi_memcpy_aligned (2 samples, 0.82%)</title><rect x="71.6049%" y="645" width="0.8230%" height="15" fill="rgb(235,190,38)" fg:x="174" fg:w="2"/><text x="71.8549%" y="655.50"></text></g><g><title>_mi_memcpy (2 samples, 0.82%)</title><rect x="71.6049%" y="629" width="0.8230%" height="15" fill="rgb(247,86,24)" fg:x="174" fg:w="2"/><text x="71.8549%" y="639.50"></text></g><g><title>memcpy (2 samples, 0.82%)</title><rect x="71.6049%" y="613" width="0.8230%" height="15" fill="rgb(205,101,16)" fg:x="174" fg:w="2"/><text x="71.8549%" y="623.50"></text></g><g><title>[libc.so.6] (2 samples, 0.82%)</title><rect x="71.6049%" y="597" width="0.8230%" height="15" fill="rgb(246,168,33)" fg:x="174" fg:w="2"/><text x="71.8549%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="72.0165%" y="581" width="0.4115%" height="15" fill="rgb(231,114,1)" fg:x="175" fg:w="1"/><text x="72.2665%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="72.0165%" y="565" width="0.4115%" height="15" fill="rgb(207,184,53)" fg:x="175" fg:w="1"/><text x="72.2665%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="72.0165%" y="549" width="0.4115%" height="15" fill="rgb(224,95,51)" fg:x="175" fg:w="1"/><text x="72.2665%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="72.0165%" y="533" width="0.4115%" height="15" fill="rgb(212,188,45)" fg:x="175" fg:w="1"/><text x="72.2665%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="72.0165%" y="517" width="0.4115%" height="15" fill="rgb(223,154,38)" fg:x="175" fg:w="1"/><text x="72.2665%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="72.0165%" y="501" width="0.4115%" height="15" fill="rgb(251,22,52)" fg:x="175" fg:w="1"/><text x="72.2665%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="72.0165%" y="485" width="0.4115%" height="15" fill="rgb(229,209,22)" fg:x="175" fg:w="1"/><text x="72.2665%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="72.0165%" y="469" width="0.4115%" height="15" fill="rgb(234,138,34)" fg:x="175" fg:w="1"/><text x="72.2665%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 1.23%)</title><rect x="71.6049%" y="709" width="1.2346%" height="15" fill="rgb(212,95,11)" fg:x="174" fg:w="3"/><text x="71.8549%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 1.23%)</title><rect x="71.6049%" y="693" width="1.2346%" height="15" fill="rgb(240,179,47)" fg:x="174" fg:w="3"/><text x="71.8549%" y="703.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 1.23%)</title><rect x="71.6049%" y="677" width="1.2346%" height="15" fill="rgb(240,163,11)" fg:x="174" fg:w="3"/><text x="71.8549%" y="687.50"></text></g><g><title>_mi_heap_realloc_zero (3 samples, 1.23%)</title><rect x="71.6049%" y="661" width="1.2346%" height="15" fill="rgb(236,37,12)" fg:x="174" fg:w="3"/><text x="71.8549%" y="671.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.41%)</title><rect x="72.4280%" y="645" width="0.4115%" height="15" fill="rgb(232,164,16)" fg:x="176" fg:w="1"/><text x="72.6780%" y="655.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.41%)</title><rect x="72.4280%" y="629" width="0.4115%" height="15" fill="rgb(244,205,15)" fg:x="176" fg:w="1"/><text x="72.6780%" y="639.50"></text></g><g><title>_mi_heap_delayed_free (1 samples, 0.41%)</title><rect x="72.4280%" y="613" width="0.4115%" height="15" fill="rgb(223,117,47)" fg:x="176" fg:w="1"/><text x="72.6780%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 2.47%)</title><rect x="70.7819%" y="757" width="2.4691%" height="15" fill="rgb(244,107,35)" fg:x="172" fg:w="6"/><text x="71.0319%" y="767.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 2.47%)</title><rect x="70.7819%" y="741" width="2.4691%" height="15" fill="rgb(205,140,8)" fg:x="172" fg:w="6"/><text x="71.0319%" y="751.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 2.47%)</title><rect x="70.7819%" y="725" width="2.4691%" height="15" fill="rgb(228,84,46)" fg:x="172" fg:w="6"/><text x="71.0319%" y="735.50">al..</text></g><g><title>mi_malloc (1 samples, 0.41%)</title><rect x="72.8395%" y="709" width="0.4115%" height="15" fill="rgb(254,188,9)" fg:x="177" fg:w="1"/><text x="73.0895%" y="719.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.41%)</title><rect x="72.8395%" y="693" width="0.4115%" height="15" fill="rgb(206,112,54)" fg:x="177" fg:w="1"/><text x="73.0895%" y="703.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.41%)</title><rect x="72.8395%" y="677" width="0.4115%" height="15" fill="rgb(216,84,49)" fg:x="177" fg:w="1"/><text x="73.0895%" y="687.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.41%)</title><rect x="72.8395%" y="661" width="0.4115%" height="15" fill="rgb(214,194,35)" fg:x="177" fg:w="1"/><text x="73.0895%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 3.29%)</title><rect x="70.7819%" y="773" width="3.2922%" height="15" fill="rgb(249,28,3)" fg:x="172" fg:w="8"/><text x="71.0319%" y="783.50">all..</text></g><g><title>core::ptr::write (2 samples, 0.82%)</title><rect x="73.2510%" y="757" width="0.8230%" height="15" fill="rgb(222,56,52)" fg:x="178" fg:w="2"/><text x="73.5010%" y="767.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (1 samples, 0.41%)</title><rect x="74.0741%" y="773" width="0.4115%" height="15" fill="rgb(245,217,50)" fg:x="180" fg:w="1"/><text x="74.3241%" y="783.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (1 samples, 0.41%)</title><rect x="74.0741%" y="757" width="0.4115%" height="15" fill="rgb(213,201,24)" fg:x="180" fg:w="1"/><text x="74.3241%" y="767.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.41%)</title><rect x="74.0741%" y="741" width="0.4115%" height="15" fill="rgb(248,116,28)" fg:x="180" fg:w="1"/><text x="74.3241%" y="751.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.41%)</title><rect x="74.0741%" y="725" width="0.4115%" height="15" fill="rgb(219,72,43)" fg:x="180" fg:w="1"/><text x="74.3241%" y="735.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.41%)</title><rect x="74.0741%" y="709" width="0.4115%" height="15" fill="rgb(209,138,14)" fg:x="180" fg:w="1"/><text x="74.3241%" y="719.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::new (1 samples, 0.41%)</title><rect x="74.4856%" y="757" width="0.4115%" height="15" fill="rgb(222,18,33)" fg:x="181" fg:w="1"/><text x="74.7356%" y="767.50"></text></g><g><title>csgoproto::netmessages::csvcmsg_game_event::Key_t::new (1 samples, 0.41%)</title><rect x="74.4856%" y="741" width="0.4115%" height="15" fill="rgb(213,199,7)" fg:x="181" fg:w="1"/><text x="74.7356%" y="751.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as core::default::Default&gt;::default (1 samples, 0.41%)</title><rect x="74.4856%" y="725" width="0.4115%" height="15" fill="rgb(250,110,10)" fg:x="181" fg:w="1"/><text x="74.7356%" y="735.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bool (1 samples, 0.41%)</title><rect x="76.1317%" y="725" width="0.4115%" height="15" fill="rgb(248,123,6)" fg:x="185" fg:w="1"/><text x="76.3817%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.41%)</title><rect x="76.1317%" y="709" width="0.4115%" height="15" fill="rgb(206,91,31)" fg:x="185" fg:w="1"/><text x="76.3817%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.41%)</title><rect x="76.5432%" y="693" width="0.4115%" height="15" fill="rgb(211,154,13)" fg:x="186" fg:w="1"/><text x="76.7932%" y="703.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.41%)</title><rect x="76.9547%" y="677" width="0.4115%" height="15" fill="rgb(225,148,7)" fg:x="187" fg:w="1"/><text x="77.2047%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="661" width="0.4115%" height="15" fill="rgb(220,160,43)" fg:x="187" fg:w="1"/><text x="77.2047%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="645" width="0.4115%" height="15" fill="rgb(213,52,39)" fg:x="187" fg:w="1"/><text x="77.2047%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="629" width="0.4115%" height="15" fill="rgb(243,137,7)" fg:x="187" fg:w="1"/><text x="77.2047%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="613" width="0.4115%" height="15" fill="rgb(230,79,13)" fg:x="187" fg:w="1"/><text x="77.2047%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="597" width="0.4115%" height="15" fill="rgb(247,105,23)" fg:x="187" fg:w="1"/><text x="77.2047%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="581" width="0.4115%" height="15" fill="rgb(223,179,41)" fg:x="187" fg:w="1"/><text x="77.2047%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="565" width="0.4115%" height="15" fill="rgb(218,9,34)" fg:x="187" fg:w="1"/><text x="77.2047%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="549" width="0.4115%" height="15" fill="rgb(222,106,8)" fg:x="187" fg:w="1"/><text x="77.2047%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="533" width="0.4115%" height="15" fill="rgb(211,220,0)" fg:x="187" fg:w="1"/><text x="77.2047%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="517" width="0.4115%" height="15" fill="rgb(229,52,16)" fg:x="187" fg:w="1"/><text x="77.2047%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="501" width="0.4115%" height="15" fill="rgb(212,155,18)" fg:x="187" fg:w="1"/><text x="77.2047%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="485" width="0.4115%" height="15" fill="rgb(242,21,14)" fg:x="187" fg:w="1"/><text x="77.2047%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="469" width="0.4115%" height="15" fill="rgb(222,19,48)" fg:x="187" fg:w="1"/><text x="77.2047%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="453" width="0.4115%" height="15" fill="rgb(232,45,27)" fg:x="187" fg:w="1"/><text x="77.2047%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="437" width="0.4115%" height="15" fill="rgb(249,103,42)" fg:x="187" fg:w="1"/><text x="77.2047%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="421" width="0.4115%" height="15" fill="rgb(246,81,33)" fg:x="187" fg:w="1"/><text x="77.2047%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="405" width="0.4115%" height="15" fill="rgb(252,33,42)" fg:x="187" fg:w="1"/><text x="77.2047%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="76.9547%" y="389" width="0.4115%" height="15" fill="rgb(209,212,41)" fg:x="187" fg:w="1"/><text x="77.2047%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (4 samples, 1.65%)</title><rect x="76.5432%" y="725" width="1.6461%" height="15" fill="rgb(207,154,6)" fg:x="186" fg:w="4"/><text x="76.7932%" y="735.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (4 samples, 1.65%)</title><rect x="76.5432%" y="709" width="1.6461%" height="15" fill="rgb(223,64,47)" fg:x="186" fg:w="4"/><text x="76.7932%" y="719.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (3 samples, 1.23%)</title><rect x="76.9547%" y="693" width="1.2346%" height="15" fill="rgb(211,161,38)" fg:x="187" fg:w="3"/><text x="77.2047%" y="703.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (2 samples, 0.82%)</title><rect x="77.3663%" y="677" width="0.8230%" height="15" fill="rgb(219,138,40)" fg:x="188" fg:w="2"/><text x="77.6163%" y="687.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (2 samples, 0.82%)</title><rect x="77.3663%" y="661" width="0.8230%" height="15" fill="rgb(241,228,46)" fg:x="188" fg:w="2"/><text x="77.6163%" y="671.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (4 samples, 1.65%)</title><rect x="78.1893%" y="725" width="1.6461%" height="15" fill="rgb(223,209,38)" fg:x="190" fg:w="4"/><text x="78.4393%" y="735.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (3 samples, 1.23%)</title><rect x="78.6008%" y="709" width="1.2346%" height="15" fill="rgb(236,164,45)" fg:x="191" fg:w="3"/><text x="78.8508%" y="719.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (3 samples, 1.23%)</title><rect x="78.6008%" y="693" width="1.2346%" height="15" fill="rgb(231,15,5)" fg:x="191" fg:w="3"/><text x="78.8508%" y="703.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (3 samples, 1.23%)</title><rect x="78.6008%" y="677" width="1.2346%" height="15" fill="rgb(252,35,15)" fg:x="191" fg:w="3"/><text x="78.8508%" y="687.50"></text></g><g><title>core::mem::replace (1 samples, 0.41%)</title><rect x="79.8354%" y="693" width="0.4115%" height="15" fill="rgb(248,181,18)" fg:x="194" fg:w="1"/><text x="80.0854%" y="703.50"></text></g><g><title>core::ptr::read (1 samples, 0.41%)</title><rect x="79.8354%" y="677" width="0.4115%" height="15" fill="rgb(233,39,42)" fg:x="194" fg:w="1"/><text x="80.0854%" y="687.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (14 samples, 5.76%)</title><rect x="74.8971%" y="741" width="5.7613%" height="15" fill="rgb(238,110,33)" fg:x="182" fg:w="14"/><text x="75.1471%" y="751.50">&lt;csgopr..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (2 samples, 0.82%)</title><rect x="79.8354%" y="725" width="0.8230%" height="15" fill="rgb(233,195,10)" fg:x="194" fg:w="2"/><text x="80.0854%" y="735.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (2 samples, 0.82%)</title><rect x="79.8354%" y="709" width="0.8230%" height="15" fill="rgb(254,105,3)" fg:x="194" fg:w="2"/><text x="80.0854%" y="719.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.41%)</title><rect x="80.2469%" y="693" width="0.4115%" height="15" fill="rgb(221,225,9)" fg:x="195" fg:w="1"/><text x="80.4969%" y="703.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.41%)</title><rect x="80.2469%" y="677" width="0.4115%" height="15" fill="rgb(224,227,45)" fg:x="195" fg:w="1"/><text x="80.4969%" y="687.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.41%)</title><rect x="80.2469%" y="661" width="0.4115%" height="15" fill="rgb(229,198,43)" fg:x="195" fg:w="1"/><text x="80.4969%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.41%)</title><rect x="80.2469%" y="645" width="0.4115%" height="15" fill="rgb(206,209,35)" fg:x="195" fg:w="1"/><text x="80.4969%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.41%)</title><rect x="80.2469%" y="629" width="0.4115%" height="15" fill="rgb(245,195,53)" fg:x="195" fg:w="1"/><text x="80.4969%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.41%)</title><rect x="80.2469%" y="613" width="0.4115%" height="15" fill="rgb(240,92,26)" fg:x="195" fg:w="1"/><text x="80.4969%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.41%)</title><rect x="80.2469%" y="597" width="0.4115%" height="15" fill="rgb(207,40,23)" fg:x="195" fg:w="1"/><text x="80.4969%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="80.2469%" y="581" width="0.4115%" height="15" fill="rgb(223,111,35)" fg:x="195" fg:w="1"/><text x="80.4969%" y="591.50"></text></g><g><title>mi_malloc (1 samples, 0.41%)</title><rect x="80.2469%" y="565" width="0.4115%" height="15" fill="rgb(229,147,28)" fg:x="195" fg:w="1"/><text x="80.4969%" y="575.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.41%)</title><rect x="80.2469%" y="549" width="0.4115%" height="15" fill="rgb(211,29,28)" fg:x="195" fg:w="1"/><text x="80.4969%" y="559.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.41%)</title><rect x="80.2469%" y="533" width="0.4115%" height="15" fill="rgb(228,72,33)" fg:x="195" fg:w="1"/><text x="80.4969%" y="543.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.41%)</title><rect x="80.2469%" y="517" width="0.4115%" height="15" fill="rgb(205,214,31)" fg:x="195" fg:w="1"/><text x="80.4969%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;protobuf::coded_input_stream::CodedInputStream::merge_message::DecrRecursion&gt; (2 samples, 0.82%)</title><rect x="80.6584%" y="741" width="0.8230%" height="15" fill="rgb(224,111,15)" fg:x="196" fg:w="2"/><text x="80.9084%" y="751.50"></text></g><g><title>&lt;protobuf::coded_input_stream::CodedInputStream::merge_message::DecrRecursion as core::ops::drop::Drop&gt;::drop (2 samples, 0.82%)</title><rect x="80.6584%" y="725" width="0.8230%" height="15" fill="rgb(253,21,26)" fg:x="196" fg:w="2"/><text x="80.9084%" y="735.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::decr_recursion (2 samples, 0.82%)</title><rect x="80.6584%" y="709" width="0.8230%" height="15" fill="rgb(245,139,43)" fg:x="196" fg:w="2"/><text x="80.9084%" y="719.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::pop_limit (1 samples, 0.41%)</title><rect x="81.4815%" y="741" width="0.4115%" height="15" fill="rgb(252,170,7)" fg:x="198" fg:w="1"/><text x="81.7315%" y="751.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pop_limit (1 samples, 0.41%)</title><rect x="81.4815%" y="725" width="0.4115%" height="15" fill="rgb(231,118,14)" fg:x="198" fg:w="1"/><text x="81.7315%" y="735.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::push_limit (1 samples, 0.41%)</title><rect x="81.8930%" y="741" width="0.4115%" height="15" fill="rgb(238,83,0)" fg:x="199" fg:w="1"/><text x="82.1430%" y="751.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::push_limit (1 samples, 0.41%)</title><rect x="81.8930%" y="725" width="0.4115%" height="15" fill="rgb(221,39,39)" fg:x="199" fg:w="1"/><text x="82.1430%" y="735.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.41%)</title><rect x="82.7160%" y="725" width="0.4115%" height="15" fill="rgb(222,119,46)" fg:x="201" fg:w="1"/><text x="82.9660%" y="735.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (22 samples, 9.05%)</title><rect x="74.4856%" y="773" width="9.0535%" height="15" fill="rgb(222,165,49)" fg:x="181" fg:w="22"/><text x="74.7356%" y="783.50">protobuf::cod..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (21 samples, 8.64%)</title><rect x="74.8971%" y="757" width="8.6420%" height="15" fill="rgb(219,113,52)" fg:x="182" fg:w="21"/><text x="75.1471%" y="767.50">protobuf::co..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (3 samples, 1.23%)</title><rect x="82.3045%" y="741" width="1.2346%" height="15" fill="rgb(214,7,15)" fg:x="200" fg:w="3"/><text x="82.5545%" y="751.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.41%)</title><rect x="83.1276%" y="725" width="0.4115%" height="15" fill="rgb(235,32,4)" fg:x="202" fg:w="1"/><text x="83.3776%" y="735.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.41%)</title><rect x="83.1276%" y="709" width="0.4115%" height="15" fill="rgb(238,90,54)" fg:x="202" fg:w="1"/><text x="83.3776%" y="719.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (37 samples, 15.23%)</title><rect x="69.1358%" y="789" width="15.2263%" height="15" fill="rgb(213,208,19)" fg:x="168" fg:w="37"/><text x="69.3858%" y="799.50">&lt;csgoproto::netmessages..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (2 samples, 0.82%)</title><rect x="83.5391%" y="773" width="0.8230%" height="15" fill="rgb(233,156,4)" fg:x="203" fg:w="2"/><text x="83.7891%" y="783.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.41%)</title><rect x="83.9506%" y="757" width="0.4115%" height="15" fill="rgb(207,194,5)" fg:x="204" fg:w="1"/><text x="84.2006%" y="767.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.41%)</title><rect x="83.9506%" y="741" width="0.4115%" height="15" fill="rgb(206,111,30)" fg:x="204" fg:w="1"/><text x="84.2006%" y="751.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.41%)</title><rect x="83.9506%" y="725" width="0.4115%" height="15" fill="rgb(243,70,54)" fg:x="204" fg:w="1"/><text x="84.2006%" y="735.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::new (1 samples, 0.41%)</title><rect x="84.3621%" y="789" width="0.4115%" height="15" fill="rgb(242,28,8)" fg:x="205" fg:w="1"/><text x="84.6121%" y="799.50"></text></g><g><title>demoparser::parsing::parser::Demo::parse_cmd (195 samples, 80.25%)</title><rect x="5.3498%" y="853" width="80.2469%" height="15" fill="rgb(219,106,18)" fg:x="13" fg:w="195"/><text x="5.5998%" y="863.50">demoparser::parsing::parser::Demo::parse_cmd</text></g><g><title>demoparser::parsing::parser::Demo::parse_packet (190 samples, 78.19%)</title><rect x="7.4074%" y="837" width="78.1893%" height="15" fill="rgb(244,222,10)" fg:x="18" fg:w="190"/><text x="7.6574%" y="847.50">demoparser::parsing::parser::Demo::parse_packet</text></g><g><title>protobuf::message::Message::parse_from_bytes (92 samples, 37.86%)</title><rect x="47.7366%" y="821" width="37.8601%" height="15" fill="rgb(236,179,52)" fg:x="116" fg:w="92"/><text x="47.9866%" y="831.50">protobuf::message::Message::parse_from_bytes</text></g><g><title>protobuf::message::Message::parse_from (88 samples, 36.21%)</title><rect x="49.3827%" y="805" width="36.2140%" height="15" fill="rgb(213,23,39)" fg:x="120" fg:w="88"/><text x="49.6327%" y="815.50">protobuf::message::Message::parse_from</text></g><g><title>protobuf::message::Message::check_initialized (2 samples, 0.82%)</title><rect x="84.7737%" y="789" width="0.8230%" height="15" fill="rgb(238,48,10)" fg:x="206" fg:w="2"/><text x="85.0237%" y="799.50"></text></g><g><title>&lt;M as protobuf::message_dyn::MessageDyn&gt;::is_initialized_dyn (2 samples, 0.82%)</title><rect x="84.7737%" y="773" width="0.8230%" height="15" fill="rgb(251,196,23)" fg:x="206" fg:w="2"/><text x="85.0237%" y="783.50"></text></g><g><title>__libc_start_main_impl (235 samples, 96.71%)</title><rect x="0.4115%" y="1125" width="96.7078%" height="15" fill="rgb(250,152,24)" fg:x="1" fg:w="235"/><text x="0.6615%" y="1135.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (235 samples, 96.71%)</title><rect x="0.4115%" y="1109" width="96.7078%" height="15" fill="rgb(209,150,17)" fg:x="1" fg:w="235"/><text x="0.6615%" y="1119.50">__libc_start_call_main</text></g><g><title>main (235 samples, 96.71%)</title><rect x="0.4115%" y="1093" width="96.7078%" height="15" fill="rgb(234,202,34)" fg:x="1" fg:w="235"/><text x="0.6615%" y="1103.50">main</text></g><g><title>std::rt::lang_start_internal (235 samples, 96.71%)</title><rect x="0.4115%" y="1077" width="96.7078%" height="15" fill="rgb(253,148,53)" fg:x="1" fg:w="235"/><text x="0.6615%" y="1087.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (235 samples, 96.71%)</title><rect x="0.4115%" y="1061" width="96.7078%" height="15" fill="rgb(218,129,16)" fg:x="1" fg:w="235"/><text x="0.6615%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (235 samples, 96.71%)</title><rect x="0.4115%" y="1045" width="96.7078%" height="15" fill="rgb(216,85,19)" fg:x="1" fg:w="235"/><text x="0.6615%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (235 samples, 96.71%)</title><rect x="0.4115%" y="1029" width="96.7078%" height="15" fill="rgb(235,228,7)" fg:x="1" fg:w="235"/><text x="0.6615%" y="1039.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (235 samples, 96.71%)</title><rect x="0.4115%" y="1013" width="96.7078%" height="15" fill="rgb(245,175,0)" fg:x="1" fg:w="235"/><text x="0.6615%" y="1023.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (235 samples, 96.71%)</title><rect x="0.4115%" y="997" width="96.7078%" height="15" fill="rgb(208,168,36)" fg:x="1" fg:w="235"/><text x="0.6615%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (235 samples, 96.71%)</title><rect x="0.4115%" y="981" width="96.7078%" height="15" fill="rgb(246,171,24)" fg:x="1" fg:w="235"/><text x="0.6615%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (235 samples, 96.71%)</title><rect x="0.4115%" y="965" width="96.7078%" height="15" fill="rgb(215,142,24)" fg:x="1" fg:w="235"/><text x="0.6615%" y="975.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (235 samples, 96.71%)</title><rect x="0.4115%" y="949" width="96.7078%" height="15" fill="rgb(250,187,7)" fg:x="1" fg:w="235"/><text x="0.6615%" y="959.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (235 samples, 96.71%)</title><rect x="0.4115%" y="933" width="96.7078%" height="15" fill="rgb(228,66,33)" fg:x="1" fg:w="235"/><text x="0.6615%" y="943.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (235 samples, 96.71%)</title><rect x="0.4115%" y="917" width="96.7078%" height="15" fill="rgb(234,215,21)" fg:x="1" fg:w="235"/><text x="0.6615%" y="927.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (235 samples, 96.71%)</title><rect x="0.4115%" y="901" width="96.7078%" height="15" fill="rgb(222,191,20)" fg:x="1" fg:w="235"/><text x="0.6615%" y="911.50">core::ops::function::FnOnce::call_once</text></g><g><title>demoparser::main (235 samples, 96.71%)</title><rect x="0.4115%" y="885" width="96.7078%" height="15" fill="rgb(245,79,54)" fg:x="1" fg:w="235"/><text x="0.6615%" y="895.50">demoparser::main</text></g><g><title>demoparser::parsing::parser::Demo::start_parsing (224 samples, 92.18%)</title><rect x="4.9383%" y="869" width="92.1811%" height="15" fill="rgb(240,10,37)" fg:x="12" fg:w="224"/><text x="5.1883%" y="879.50">demoparser::parsing::parser::Demo::start_parsing</text></g><g><title>demoparser::parsing::read_bytes::&lt;impl demoparser::parsing::parser::Demo&gt;::read_frame (28 samples, 11.52%)</title><rect x="85.5967%" y="853" width="11.5226%" height="15" fill="rgb(214,192,32)" fg:x="208" fg:w="28"/><text x="85.8467%" y="863.50">demoparser::parsi..</text></g><g><title>demoparser::parsing::read_bytes::&lt;impl demoparser::parsing::parser::Demo&gt;::read_byte (28 samples, 11.52%)</title><rect x="85.5967%" y="837" width="11.5226%" height="15" fill="rgb(209,36,54)" fg:x="208" fg:w="28"/><text x="85.8467%" y="847.50">demoparser::parsi..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="91.7695%" y="821" width="5.3498%" height="15" fill="rgb(220,10,11)" fg:x="223" fg:w="13"/><text x="92.0195%" y="831.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="91.7695%" y="805" width="5.3498%" height="15" fill="rgb(221,106,17)" fg:x="223" fg:w="13"/><text x="92.0195%" y="815.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="91.7695%" y="789" width="5.3498%" height="15" fill="rgb(251,142,44)" fg:x="223" fg:w="13"/><text x="92.0195%" y="799.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="91.7695%" y="773" width="5.3498%" height="15" fill="rgb(238,13,15)" fg:x="223" fg:w="13"/><text x="92.0195%" y="783.50">[unknow..</text></g><g><title>[unknown] (13 samples, 5.35%)</title><rect x="91.7695%" y="757" width="5.3498%" height="15" fill="rgb(208,107,27)" fg:x="223" fg:w="13"/><text x="92.0195%" y="767.50">[unknow..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="92.1811%" y="741" width="4.9383%" height="15" fill="rgb(205,136,37)" fg:x="224" fg:w="12"/><text x="92.4311%" y="751.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="92.1811%" y="725" width="4.9383%" height="15" fill="rgb(250,205,27)" fg:x="224" fg:w="12"/><text x="92.4311%" y="735.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="92.1811%" y="709" width="4.9383%" height="15" fill="rgb(210,80,43)" fg:x="224" fg:w="12"/><text x="92.4311%" y="719.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="92.1811%" y="693" width="4.9383%" height="15" fill="rgb(247,160,36)" fg:x="224" fg:w="12"/><text x="92.4311%" y="703.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.94%)</title><rect x="92.1811%" y="677" width="4.9383%" height="15" fill="rgb(234,13,49)" fg:x="224" fg:w="12"/><text x="92.4311%" y="687.50">[unkno..</text></g><g><title>[unknown] (11 samples, 4.53%)</title><rect x="92.5926%" y="661" width="4.5267%" height="15" fill="rgb(234,122,0)" fg:x="225" fg:w="11"/><text x="92.8426%" y="671.50">[unkn..</text></g><g><title>[unknown] (11 samples, 4.53%)</title><rect x="92.5926%" y="645" width="4.5267%" height="15" fill="rgb(207,146,38)" fg:x="225" fg:w="11"/><text x="92.8426%" y="655.50">[unkn..</text></g><g><title>[unknown] (11 samples, 4.53%)</title><rect x="92.5926%" y="629" width="4.5267%" height="15" fill="rgb(207,177,25)" fg:x="225" fg:w="11"/><text x="92.8426%" y="639.50">[unkn..</text></g><g><title>[unknown] (11 samples, 4.53%)</title><rect x="92.5926%" y="613" width="4.5267%" height="15" fill="rgb(211,178,42)" fg:x="225" fg:w="11"/><text x="92.8426%" y="623.50">[unkn..</text></g><g><title>[unknown] (11 samples, 4.53%)</title><rect x="92.5926%" y="597" width="4.5267%" height="15" fill="rgb(230,69,54)" fg:x="225" fg:w="11"/><text x="92.8426%" y="607.50">[unkn..</text></g><g><title>[unknown] (11 samples, 4.53%)</title><rect x="92.5926%" y="581" width="4.5267%" height="15" fill="rgb(214,135,41)" fg:x="225" fg:w="11"/><text x="92.8426%" y="591.50">[unkn..</text></g><g><title>[unknown] (10 samples, 4.12%)</title><rect x="93.0041%" y="565" width="4.1152%" height="15" fill="rgb(237,67,25)" fg:x="226" fg:w="10"/><text x="93.2541%" y="575.50">[unk..</text></g><g><title>[unknown] (10 samples, 4.12%)</title><rect x="93.0041%" y="549" width="4.1152%" height="15" fill="rgb(222,189,50)" fg:x="226" fg:w="10"/><text x="93.2541%" y="559.50">[unk..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="94.6502%" y="533" width="2.4691%" height="15" fill="rgb(245,148,34)" fg:x="230" fg:w="6"/><text x="94.9002%" y="543.50">[u..</text></g><g><title>[unknown] (3 samples, 1.23%)</title><rect x="95.8848%" y="517" width="1.2346%" height="15" fill="rgb(222,29,6)" fg:x="233" fg:w="3"/><text x="96.1348%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="96.2963%" y="501" width="0.8230%" height="15" fill="rgb(221,189,43)" fg:x="234" fg:w="2"/><text x="96.5463%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="96.2963%" y="485" width="0.8230%" height="15" fill="rgb(207,36,27)" fg:x="234" fg:w="2"/><text x="96.5463%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="96.2963%" y="469" width="0.8230%" height="15" fill="rgb(217,90,24)" fg:x="234" fg:w="2"/><text x="96.5463%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="96.2963%" y="453" width="0.8230%" height="15" fill="rgb(224,66,35)" fg:x="234" fg:w="2"/><text x="96.5463%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="96.2963%" y="437" width="0.8230%" height="15" fill="rgb(221,13,50)" fg:x="234" fg:w="2"/><text x="96.5463%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="96.2963%" y="421" width="0.8230%" height="15" fill="rgb(236,68,49)" fg:x="234" fg:w="2"/><text x="96.5463%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="96.2963%" y="405" width="0.8230%" height="15" fill="rgb(229,146,28)" fg:x="234" fg:w="2"/><text x="96.5463%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="96.2963%" y="389" width="0.8230%" height="15" fill="rgb(225,31,38)" fg:x="234" fg:w="2"/><text x="96.5463%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="96.2963%" y="373" width="0.8230%" height="15" fill="rgb(250,208,3)" fg:x="234" fg:w="2"/><text x="96.5463%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="96.2963%" y="357" width="0.8230%" height="15" fill="rgb(246,54,23)" fg:x="234" fg:w="2"/><text x="96.5463%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="96.7078%" y="341" width="0.4115%" height="15" fill="rgb(243,76,11)" fg:x="235" fg:w="1"/><text x="96.9578%" y="351.50"></text></g><g><title>demoparser (237 samples, 97.53%)</title><rect x="0.0000%" y="1157" width="97.5309%" height="15" fill="rgb(245,21,50)" fg:x="0" fg:w="237"/><text x="0.2500%" y="1167.50">demoparser</text></g><g><title>_start (236 samples, 97.12%)</title><rect x="0.4115%" y="1141" width="97.1193%" height="15" fill="rgb(228,9,43)" fg:x="1" fg:w="236"/><text x="0.6615%" y="1151.50">_start</text></g><g><title>_dl_start (1 samples, 0.41%)</title><rect x="97.1193%" y="1125" width="0.4115%" height="15" fill="rgb(208,100,47)" fg:x="236" fg:w="1"/><text x="97.3693%" y="1135.50"></text></g><g><title>_dl_start_final (1 samples, 0.41%)</title><rect x="97.1193%" y="1109" width="0.4115%" height="15" fill="rgb(232,26,8)" fg:x="236" fg:w="1"/><text x="97.3693%" y="1119.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.41%)</title><rect x="97.1193%" y="1093" width="0.4115%" height="15" fill="rgb(216,166,38)" fg:x="236" fg:w="1"/><text x="97.3693%" y="1103.50"></text></g><g><title>dl_main (1 samples, 0.41%)</title><rect x="97.1193%" y="1077" width="0.4115%" height="15" fill="rgb(251,202,51)" fg:x="236" fg:w="1"/><text x="97.3693%" y="1087.50"></text></g><g><title>setup_vdso_pointers (1 samples, 0.41%)</title><rect x="97.1193%" y="1061" width="0.4115%" height="15" fill="rgb(254,216,34)" fg:x="236" fg:w="1"/><text x="97.3693%" y="1071.50"></text></g><g><title>dl_vdso_vsym (1 samples, 0.41%)</title><rect x="97.1193%" y="1045" width="0.4115%" height="15" fill="rgb(251,32,27)" fg:x="236" fg:w="1"/><text x="97.3693%" y="1055.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.41%)</title><rect x="97.1193%" y="1029" width="0.4115%" height="15" fill="rgb(208,127,28)" fg:x="236" fg:w="1"/><text x="97.3693%" y="1039.50"></text></g><g><title>all (243 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(224,137,22)" fg:x="0" fg:w="243"/><text x="0.2500%" y="1183.50"></text></g><g><title>perf-exec (6 samples, 2.47%)</title><rect x="97.5309%" y="1157" width="2.4691%" height="15" fill="rgb(254,70,32)" fg:x="237" fg:w="6"/><text x="97.7809%" y="1167.50">pe..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="1141" width="2.4691%" height="15" fill="rgb(229,75,37)" fg:x="237" fg:w="6"/><text x="97.7809%" y="1151.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="1125" width="2.4691%" height="15" fill="rgb(252,64,23)" fg:x="237" fg:w="6"/><text x="97.7809%" y="1135.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="1109" width="2.4691%" height="15" fill="rgb(232,162,48)" fg:x="237" fg:w="6"/><text x="97.7809%" y="1119.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="1093" width="2.4691%" height="15" fill="rgb(246,160,12)" fg:x="237" fg:w="6"/><text x="97.7809%" y="1103.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="1077" width="2.4691%" height="15" fill="rgb(247,166,0)" fg:x="237" fg:w="6"/><text x="97.7809%" y="1087.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="1061" width="2.4691%" height="15" fill="rgb(249,219,21)" fg:x="237" fg:w="6"/><text x="97.7809%" y="1071.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="1045" width="2.4691%" height="15" fill="rgb(205,209,3)" fg:x="237" fg:w="6"/><text x="97.7809%" y="1055.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="1029" width="2.4691%" height="15" fill="rgb(243,44,1)" fg:x="237" fg:w="6"/><text x="97.7809%" y="1039.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="1013" width="2.4691%" height="15" fill="rgb(206,159,16)" fg:x="237" fg:w="6"/><text x="97.7809%" y="1023.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="997" width="2.4691%" height="15" fill="rgb(244,77,30)" fg:x="237" fg:w="6"/><text x="97.7809%" y="1007.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="981" width="2.4691%" height="15" fill="rgb(218,69,12)" fg:x="237" fg:w="6"/><text x="97.7809%" y="991.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="965" width="2.4691%" height="15" fill="rgb(212,87,7)" fg:x="237" fg:w="6"/><text x="97.7809%" y="975.50">[u..</text></g><g><title>[unknown] (6 samples, 2.47%)</title><rect x="97.5309%" y="949" width="2.4691%" height="15" fill="rgb(245,114,25)" fg:x="237" fg:w="6"/><text x="97.7809%" y="959.50">[u..</text></g></svg></svg>